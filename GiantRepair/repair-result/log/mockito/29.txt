Repair : mockito_29
Current failed test : org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame | 2019.09.05 AD at 04:22:15 CDT
Location : org.mockito.internal.matchers.Same.appendQuoting:[37, 35, 40]#0.5773502691896258
Compute Candidate : 2019.09.05 AD at 04:23:31 CDT - 2019.09.05 AD at 04:30:19 CDT , PNumber : 11305, CandNumber : 192 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:30:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
+return ;
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:30:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
+return ;
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:30:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
+return ;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:31:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
+return ;
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
+return ;
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:31:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
+return ;
 }
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:31:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
+return ;
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:31:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
+return ;
 }
 }
+return ;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:31:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
+return ;
 }
+return ;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:32:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
+description.appendText("\"");
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7257/pattern-ver1-serial/src.gamemodel.SpecialWall.java-handleProjectileArrive.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:32:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
-if(wanted instanceof String){
+if(true){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:32:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
-if(wanted instanceof Character){
+if(true){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:32:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
+synchronized(description){
 description.appendText("'");
+}
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V17/90/pattern-ver1-serial/PolibudaRun.src.HorizontalMove.java-down.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:32:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
+synchronized(description){
 description.appendText("\"");
+}
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V17/90/pattern-ver1-serial/PolibudaRun.src.HorizontalMove.java-down.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:32:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
+appendQuoting(description);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:33:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
+appendQuoting(description);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:33:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
+appendQuoting(description);
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:33:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
+appendQuoting(description);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:33:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
+if(equals(description)){
+return ;
+}
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:33:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
+if(equals(description)){
+return ;
+}
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:34:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
+if(equals(description)){
+return ;
+}
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:34:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
+if(equals(description)){
+return ;
+}
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:34:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
+if("'".isEmpty()){
+return ;
+}
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V38/7204/pattern-ver1-serial/src.main.java.sg.edu.nus.cs2103t.omnitask.logic.DataImpl.java-addTask.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:34:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
+if("'".isEmpty()){
+return ;
+}
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V38/7204/pattern-ver1-serial/src.main.java.sg.edu.nus.cs2103t.omnitask.logic.DataImpl.java-addTask.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:34:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
+if("\"".isEmpty()){
+return ;
+}
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V38/7204/pattern-ver1-serial/src.main.java.sg.edu.nus.cs2103t.omnitask.logic.DataImpl.java-addTask.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:34:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
+if("\"".isEmpty()){
+return ;
+}
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V38/7204/pattern-ver1-serial/src.main.java.sg.edu.nus.cs2103t.omnitask.logic.DataImpl.java-addTask.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:35:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
+if("'".isEmpty()){
+return ;
+}
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V38/7204/pattern-ver1-serial/src.main.java.sg.edu.nus.cs2103t.omnitask.logic.DataImpl.java-addTask.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:35:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
+}
+while(true){
+
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:37:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
+while(true){
+
+}
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:37:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
+while(true){
+
+}
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:37:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
+}
 }
+while(true){
+
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:39:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
+synchronized(this){
 if(wanted instanceof Character){
 description.appendText("'");
+}
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:39:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
+synchronized(this){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
+}
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:40:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
+}
+if(description==null){
+return ;
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:40:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
+if(description==null){
+return ;
+}
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:40:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
+if(description==null){
+return ;
+}
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:40:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
+}
 }
+if(description==null){
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:40:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
+if(description==null){
+return ;
+}
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:41:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
+if(description==null){
+return ;
+}
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:41:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
+if(description==null){
+return ;
+}
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:41:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
+if(description==null){
+return ;
+}
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:41:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
+if(description!=null){
 description.appendText("'");
+}
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V8/6555/pattern-ver1-serial/app.src.main.java.com.example.uaharoni.tourdeplace.view.MapFragment.java-addPlaceMarker.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:41:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
+if(description!=null){
 description.appendText("\"");
+}
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V8/6555/pattern-ver1-serial/app.src.main.java.com.example.uaharoni.tourdeplace.view.MapFragment.java-addPlaceMarker.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:41:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
+if("'"!=null){
 description.appendText("'");
+}
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/262/pattern-ver1-serial/src.internal.tree.WorldTree.java-getAllChildren.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:42:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
+if("\""!=null){
 description.appendText("\"");
+}
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/262/pattern-ver1-serial/src.internal.tree.WorldTree.java-getAllChildren.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:42:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
+synchronized(this){
 description.appendText("'");
+}
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:42:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
+synchronized(this){
 description.appendText("\"");
+}
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:42:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
+if("index".equals(description)){
+return ;
+}
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:42:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
+if("index".equals(description)){
+return ;
+}
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:43:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
+if("index".equals(description)){
+return ;
+}
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:43:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
+if("index".equals(description)){
+return ;
+}
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:43:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
+if(description.equals("TIME")){
+return ;
+}
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:43:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
+if(description.equals("TIME")){
+return ;
+}
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:43:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
+if(description.equals("TIME")){
+return ;
+}
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:44:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
+if(description.equals("TIME")){
+return ;
+}
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:44:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
+}
+if("&null".equals(description)){
+return ;
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:44:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
+if("&null".equals(description)){
+return ;
+}
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:44:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
+if("&null".equals(description)){
+return ;
+}
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:44:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
+}
 }
+if("&null".equals(description)){
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:44:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
+}
+if(description.equals("DATETIME")){
+return ;
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:45:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
+if(description.equals("DATETIME")){
+return ;
+}
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:45:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
+if(description.equals("DATETIME")){
+return ;
+}
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:45:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
+}
 }
+if(description.equals("DATETIME")){
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:45:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
+description=description;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:45:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
+description=description;
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:46:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
+description=description;
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:46:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
+description=description;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:46:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
+int a=0;
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:46:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
+int a=0;
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:46:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
+int a=0;
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:46:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
+int a=0;
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:47:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
+String OUTSTRING="";
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:47:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
+String OUTSTRING="";
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:47:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
+String OUTSTRING="";
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:47:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
+String OUTSTRING="";
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:47:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
+int wanted=5;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:48:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
+int wanted=5;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:48:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:48:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:48:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:48:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:48:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
+int indexSelection=0;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:49:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
+int indexSelection=0;
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:49:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
+int indexSelection=0;
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:49:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
+int indexSelection=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:49:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
+int a=1;
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:49:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
+int a=1;
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:50:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
+int a=1;
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:50:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
+int a=1;
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:50:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
+boolean wanted=true;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:50:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
+boolean wanted=true;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:50:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
-private void appendQuoting(Description description){
+private void appendQuoting(Description parentPuzzleBoard){
 if(wanted instanceof String){
-description.appendText("\"");
+parentPuzzleBoard.appendText("\"");
 }else {
 if(wanted instanceof Character){
-description.appendText("'");
+parentPuzzleBoard.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V12/3965/pattern-ver1-serial/src.model.algorithm.AStar.java-generateDescendants.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:50:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
+boolean b=true;
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:51:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
+boolean b=true;
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:51:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
+boolean b=true;
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:51:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
+boolean b=true;
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:51:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
-private void appendQuoting(Description description){
+private void appendQuoting(Description identifierNode){
 if(wanted instanceof String){
-description.appendText("\"");
+identifierNode.appendText("\"");
 }else {
 if(wanted instanceof Character){
-description.appendText("'");
+identifierNode.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V10/2660/pattern-ver1-serial/sevntu-checks.src.main.java.com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck.java-getIdentifierName.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:51:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
+}
+if((Thread.currentThread().interrupted())){
+return ;
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:52:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
+if((Thread.currentThread().interrupted())){
+return ;
+}
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:52:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
+if((Thread.currentThread().interrupted())){
+return ;
+}
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:52:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
+}
 }
+if((Thread.currentThread().interrupted())){
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:52:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
+description.appendText("\"");
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:52:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
+description.appendText("'");
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:53:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
+description.appendText("\"");
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:53:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
+description.appendText("'");
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:53:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
+description.appendText("\"");
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:53:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
+description.appendText("'");
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:53:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
+description.appendText("\"");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:53:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
+description.appendText("\"");
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:54:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
+description.appendText("'");
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:54:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
+description.appendText("'");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:54:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
+description.appendText("'");
 }else {
 if(wanted instanceof Character){
-description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/2466/pattern-ver1-serial/tajo-core.src.main.java.org.apache.tajo.worker.Task.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:54:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
-description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
+description.appendText("\"");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/2466/pattern-ver1-serial/tajo-core.src.main.java.org.apache.tajo.worker.Task.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:54:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
-description.appendText("'");
 }
+description.appendText("'");
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/2466/pattern-ver1-serial/tajo-core.src.main.java.org.apache.tajo.worker.Task.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:55:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
-description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
+description.appendText("\"");
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/2466/pattern-ver1-serial/tajo-core.src.main.java.org.apache.tajo.worker.Task.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:55:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
+description.appendText("'");
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V2/3128/pattern-ver1-serial/src.cubicmadness.gamestates.GameStateManager.java-popCurrentState.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:55:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
+description.appendText("'");
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
-description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V2/3128/pattern-ver1-serial/src.cubicmadness.gamestates.GameStateManager.java-popCurrentState.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:55:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
-if(wanted instanceof Character){
 description.appendText("'");
+if(wanted instanceof Character){
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V2/3128/pattern-ver1-serial/src.cubicmadness.gamestates.GameStateManager.java-popCurrentState.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:55:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
-if(wanted instanceof String){
 description.appendText("\"");
+if(wanted instanceof String){
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V2/3128/pattern-ver1-serial/src.cubicmadness.gamestates.GameStateManager.java-popCurrentState.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:56:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
+if(!"'".equals("")){
 description.appendText("'");
+}
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/60/pattern-ver1-serial/app.src.main.java.com.holygon.dishcuss.Fragments.AccountPhotosFragment.java-SetImageURL.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:56:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
+if(!"\"".equals("")){
 description.appendText("\"");
+}
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/60/pattern-ver1-serial/app.src.main.java.com.holygon.dishcuss.Fragments.AccountPhotosFragment.java-SetImageURL.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:56:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
+assert (description!=null);
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:56:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
+assert (description!=null);
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:56:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
+assert (description!=null);
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:56:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
+assert (description!=null);
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:57:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
+if(description!=null){
+description.appendText("'");
+}
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:57:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
+if(description!=null){
+if(wanted instanceof Character){
+description.appendText("'");
+}
+}
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:57:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
+if(description!=null){
+description.appendText("\"");
+}
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:57:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
+if(description!=null){
+if(wanted instanceof String){
+description.appendText("\"");
+}else {
+if(wanted instanceof Character){
+description.appendText("'");
+}
+}
+}
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:57:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
+if(description.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:57:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
+if(description.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:58:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 private void appendQuoting(Description description){
 if(wanted instanceof String){
+if(description.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:58:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 private void appendQuoting(Description description){
+if(description.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:58:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
+assert (description!=null);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:58:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
+assert (description!=null);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:58:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
+assert (description!=null);
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:59:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
+assert (description!=null);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:59:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
-description.appendText("\"");
 }else {
+description.appendText("\"");
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/2420/pattern-ver1-serial/OpenWatch.src.org.ale.openwatch.fb.FBUtils.java-onPostExecute.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:59:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
-if(wanted instanceof Character){
 description.appendText("'");
-}
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V2/2933/pattern-ver1-serial/common.common-io.src.main.java.com.twelvemonkeys.io.AbstractCachedSeekableStream.java-seekImpl.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:59:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
+}
+if(description.getClass().getSimpleName().startsWith("SystemException")){
+return ;
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:59:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
+if(description.getClass().getSimpleName().startsWith("SystemException")){
+return ;
+}
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 04:59:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
+if(description.getClass().getSimpleName().startsWith("SystemException")){
+return ;
+}
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:00:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
+}
 }
+if(description.getClass().getSimpleName().startsWith("SystemException")){
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:00:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:00:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:00:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:00:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:01:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:01:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:01:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:01:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:01:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
+assert (description!=null):"Appointments day is not allowed to be null!";
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:02:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
+assert (description!=null):"Appointments day is not allowed to be null!";
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:02:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
+assert (description!=null):"Appointments day is not allowed to be null!";
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:02:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
+assert (description!=null):"Appointments day is not allowed to be null!";
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:02:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
-if(wanted instanceof String){
+if(wanted!=null&&wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/1721/pattern-ver1-serial/src.com.sebrichard.mfgen.inspection.InspectingMetaFields.java-visitClass.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:02:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
-if(wanted instanceof Character){
+if(wanted!=null&&wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/1721/pattern-ver1-serial/src.com.sebrichard.mfgen.inspection.InspectingMetaFields.java-visitClass.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:03:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
-if(wanted instanceof String){
-description.appendText("\"");
-}else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
+if(wanted instanceof String){
+description.appendText("\"");
+}else {
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/4240/pattern-ver1-serial/app.src.main.java.com.extenprise.mapp.service.activity.AppointmentDetailsActivity.java-gotResponse.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:03:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
+if(description==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:03:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
+if(description==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:03:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
+if(description==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:03:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
+if(description==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:04:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
+if("'"==null){
+throw new IllegalStateException("Cannot instantiate Page whitout String url constructor parameter or @PageURL class annotation");
+}
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/4732/pattern-ver1-serial/src.main.java.com.mgiorda.page.AbstractPage.java-AbstractPage.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:04:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
+if("'"==null){
+throw new IllegalStateException("Cannot instantiate Page whitout String url constructor parameter or @PageURL class annotation");
+}
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/4732/pattern-ver1-serial/src.main.java.com.mgiorda.page.AbstractPage.java-AbstractPage.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:04:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
+if("\""==null){
+throw new IllegalStateException("Cannot instantiate Page whitout String url constructor parameter or @PageURL class annotation");
+}
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/4732/pattern-ver1-serial/src.main.java.com.mgiorda.page.AbstractPage.java-AbstractPage.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:04:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
+if("\""==null){
+throw new IllegalStateException("Cannot instantiate Page whitout String url constructor parameter or @PageURL class annotation");
+}
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/4732/pattern-ver1-serial/src.main.java.com.mgiorda.page.AbstractPage.java-AbstractPage.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:04:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
+if("'"==null){
+throw new IllegalStateException("Cannot instantiate Page whitout String url constructor parameter or @PageURL class annotation");
+}
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/4732/pattern-ver1-serial/src.main.java.com.mgiorda.page.AbstractPage.java-AbstractPage.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:05:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
-description.appendText("\"");
+description.appendText("'");
 }else {
 if(wanted instanceof Character){
-description.appendText("'");
+description.appendText("\"");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/3709/pattern-ver1-serial/src.main.java.jfxtras.labs.scene.layout.GridPane.java-apply.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:05:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
-description.appendText("\"");
+if(wanted instanceof Character){
+description.appendText("'");
+}
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3134/pattern-ver1-serial/app.src.main.java.ru.vif2ne.ui.MainActivity.java-refreshBottomMenu.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:05:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
+if(description.equals("CALL_RECEIVED_AT")){
+return ;
+}
 if(wanted instanceof Character){
 description.appendText("'");
+}
+if(description.equals("NAME")){
+return ;
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:05:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
+if(description.equals("CALL_RECEIVED_AT")){
+return ;
+}
 description.appendText("'");
+if(description.equals("NAME")){
+return ;
+}
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:05:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
+if(description.equals("CALL_RECEIVED_AT")){
+return ;
+}
 description.appendText("\"");
+if(description.equals("NAME")){
+return ;
+}
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:05:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
+if(description.equals("CALL_RECEIVED_AT")){
+return ;
+}
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
+}
 }
+if(description.equals("NAME")){
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:06:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
-description.appendText("\"");
+description.appendText("'");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/4615/pattern-ver1-serial/org.smartsnip.src.org.smartsnip.client.TagArea.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:06:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
-description.appendText("'");
+description.appendText("\"");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/4615/pattern-ver1-serial/org.smartsnip.src.org.smartsnip.client.TagArea.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:06:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
+}
+if(description.equals("INFO")){
+return ;
+}
+if(description.equals("UNIT")){
+return ;
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:06:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
+if(description.equals("INFO")){
+return ;
+}
+if(description.equals("UNIT")){
+return ;
+}
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:06:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
+if(description.equals("INFO")){
+return ;
+}
+if(description.equals("UNIT")){
+return ;
+}
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:07:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
+}
+}
+if(description.equals("INFO")){
+return ;
 }
+if(description.equals("UNIT")){
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:07:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
+if("'"!=null){
 description.appendText("'");
+}else {
+description.appendText("");
+}
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V38/6520/pattern-ver1-serial/src.main.java.org.metadatacenter.submission.biosample.core.BioSampleValidator.java-generateBioSampleSubmissionXML.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:07:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
+if("\""!=null){
 description.appendText("\"");
+}else {
+description.appendText("");
+}
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V38/6520/pattern-ver1-serial/src.main.java.org.metadatacenter.submission.biosample.core.BioSampleValidator.java-generateBioSampleSubmissionXML.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:07:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
+description.appendText("'");
+description.appendText("\"");
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1600/pattern-ver1-serial/src.main.java.org.cyberpwn.phantom.clust.ConfigurationHandler.java-fromMysql.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 2, DEL : 6
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:07:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
+description.appendText("\"");
+description.appendText("'");
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1600/pattern-ver1-serial/src.main.java.org.cyberpwn.phantom.clust.ConfigurationHandler.java-fromMysql.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 2, DEL : 6
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:08:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
+description.appendText("'");
 description.appendText("'");
+description.appendText("\"");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1600/pattern-ver1-serial/src.main.java.org.cyberpwn.phantom.clust.ConfigurationHandler.java-fromMysql.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 2, DEL : 6
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:08:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
+description.appendText("'");
+description.appendText("\"");
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1600/pattern-ver1-serial/src.main.java.org.cyberpwn.phantom.clust.ConfigurationHandler.java-fromMysql.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 2, DEL : 6
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:08:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
+description.appendText("\"");
+description.appendText("'");
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1600/pattern-ver1-serial/src.main.java.org.cyberpwn.phantom.clust.ConfigurationHandler.java-fromMysql.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 2, DEL : 6
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:08:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
+description.appendText("\"");
 description.appendText("\"");
+description.appendText("'");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1600/pattern-ver1-serial/src.main.java.org.cyberpwn.phantom.clust.ConfigurationHandler.java-fromMysql.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 2, DEL : 6
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:08:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
-if(wanted instanceof String){
-description.appendText("\"");
-}else {
-if(wanted instanceof Character){
-description.appendText("'");
-}
-}
 }

PATTERN : /home/jiajun/GithubData/2016/V32/4121/pattern-ver1-serial/main.plugins.org.talend.dataprofiler.core.src.org.talend.dataprofiler.core.ImageLib.java-getImageNameByRepositoryNode.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 0, DEL : 10
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:08:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
+long startTime=System.currentTimeMillis();
 if(wanted instanceof Character){
 description.appendText("'");
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:09:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
+long startTime=System.currentTimeMillis();
 description.appendText("'");
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:09:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
 if(wanted instanceof String){
+long startTime=System.currentTimeMillis();
 description.appendText("\"");
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:09:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/matchers/Same.java[34,40]
------------Candidate---------------
 private void appendQuoting(Description description){
+long startTime=System.currentTimeMillis();
 if(wanted instanceof String){
 description.appendText("\"");
 }else {
 if(wanted instanceof Character){
 description.appendText("'");
 }
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:09:43 CDT
--------------- END -----------------
Location : org.mockito.internal.invocation.InvocationsFinder.findSimilarInvocation:[70, 71, 73, 74, 67, 65, 66]#0.5
Compute Candidate : 2019.09.05 AD at 05:10:21 CDT - 2019.09.05 AD at 05:24:51 CDT , PNumber : 11423, CandNumber : 221 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
+continue;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7570/pattern-ver1-serial/src.main.java.com.rayn.jflask.framework.mvc.MultipartHelper.java-parseMultipartParamList.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:25:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
+continue;
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/5856/pattern-ver1-serial/internalLibraries.backup.src.main.java.com.emc.storageos.management.backup.DbBackupHandler.java-dumpBackup.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:25:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
-Invocation firstSimilar=null;
+ Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:25:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
+return null;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:25:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
+return null;
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:25:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
-if(firstSimilar==null){
+if(firstSimilar!=null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4111/pattern-ver1-serial/tephra-core.src.main.java.co.cask.tephra.snapshot.SnapshotCodecV4.java-encodeInProgress.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:25:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
-return invocation;
+return null;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:26:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
+break;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:26:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
+break;
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:26:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
-return firstSimilar;
+return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V8/1194/pattern-ver1-serial/src.backend.rest.SaveUserCompetences.java-saveUserCompetences.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:26:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
-firstSimilar=invocation;
+firstSimilar=firstSimilar;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:26:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
-firstSimilar=invocation;
+firstSimilar=null;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/2637/pattern-ver1-serial/de.bund.bfr.knime.openkrise.views.src.de.bund.bfr.knime.openkrise.views.gisgraphview.GraphSettings.java-GraphSettings.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:27:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
-return invocation;
+return firstSimilar;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/6187/pattern-ver1-serial/device-manager.core.src.main.java.org.dc.bco.manager.device.core.AbstractDeviceFactory.java-newInstance.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:27:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
+return invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/2280/pattern-ver1-serial/Project1.src.searchAlgorithms.BFS.java-search.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:27:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
+invocations.clear();
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/5987/pattern-ver1-serial/src.org.kjg.garderobe.ShiftDetailNumbersFragment.java-onCreateOptionsMenu.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:27:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
+invocations.clear();
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5052/pattern-ver1-serial/proxy.src.main.java.com.xqbase.tuna.proxy.ProxyServer.java-returnClient.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:27:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
+invocations.clear();
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/400/pattern-ver1-serial/plan-comp.src.main.java.com.tissue.plan.web.spring.controllers.PlanController.java-joinPlan.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:27:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
-return invocation;
+return (Invocation)(invocation);
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:28:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
+while(true){
+
+}
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:30:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
+}
+while(true){
+
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:30:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
+break;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
+break;
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1968/pattern-ver1-serial/src.main.java.com.ucmo.chat.controller.Controller.java-handleMessage.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:30:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
+invocations.clear();
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7642/pattern-ver1-serial/src.net.thecobix.openwsk.arena.WaterRemoveSystem.java-collectBlocks.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:30:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
+invocations.clear();
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7642/pattern-ver1-serial/src.net.thecobix.openwsk.arena.WaterRemoveSystem.java-collectBlocks.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:30:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
+invocations.clear();
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7642/pattern-ver1-serial/src.net.thecobix.openwsk.arena.WaterRemoveSystem.java-collectBlocks.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:31:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
+synchronized(this){
 if(firstSimilar==null){
 firstSimilar=invocation;
+}
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:31:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
+synchronized(this){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
+}
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:31:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
+synchronized(this){
 if(wanted.hasSameMethod(invocation)){
 return invocation;
+}
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:31:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
-if(firstSimilar==null){
+if(firstSimilar.equals(null)){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/343/pattern-ver1-serial/src.gui.batches.ItemBatchView.java-selectProduct.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:31:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
+synchronized(this){
 firstSimilar=invocation;
+}
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:32:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
+synchronized(this){
 return invocation;
+}
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:32:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
+synchronized(this){
 continue;
+}
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:32:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
-if(wanted.hasSameMethod(invocation)){
+if(!wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V12/6908/pattern-ver1-serial/mainModule.src.backend.building.ProductionBuilding.java-canBuild.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:32:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
+}
+if(invocation==null){
+continue;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/816/pattern-ver1-serial/src.main.java.com.dynious.refinedrelocation.client.renderer.RendererRelocator.java-renderTileEntityAt.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:32:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
+firstSimilar=invocation;
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:32:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
+firstSimilar=invocation;
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:33:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
+invocation=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:33:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
+if(invocations!=null){
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
+}
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1943/pattern-ver1-serial/app.src.main.java.br.com.battista.myoffers.controller.OfferController.java-saveOfferInDatabase.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:33:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
+firstSimilar=firstSimilar;
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:33:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
+invocation=invocation;
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:33:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
+if(wanted!=null){
 if(wanted.hasSameMethod(invocation)){
 return invocation;
+}
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/4672/pattern-ver1-serial/main.src.main.java.com.example.wduello.collectionmanager.ItemListFragment.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:34:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
+invocations.remove(0);
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V10/3880/pattern-ver1-serial/app.src.main.java.com.aiqing.niuniuheardsensor.activities.HSMainActivity.java-onNewIntent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:34:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
-if(firstSimilar==null){
+if(true){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:34:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
-if(wanted.hasSameMethod(invocation)){
+if(true){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:34:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
-if(wanted.hasSameMethod(invocation)){
+if(wanted.hasSameMethod(invocation)==false){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3764/pattern-ver1-serial/uDig.org.locationtech.udig.processingtoolbox.src.org.locationtech.udig.processingtoolbox.tools.TextfileToPointDialog.java-getTextColumns.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:34:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
+invocations.add(firstSimilar);
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/5858/pattern-ver1-serial/Compile.app.src.main.java.compile_inc.compile.ContactDatabaseHandler.java-dbGetAllContacts.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:34:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
+if(firstSimilar==null){
 if(firstSimilar==null){
 firstSimilar=invocation;
+}
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V53/4035/pattern-ver1-serial/whois-client.src.main.java.net.ripe.db.whois.common.rpsl.RpslAttribute.java-extractCleanValueAndComment.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:35:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
+if(invocation!=null){
 if(wanted.hasSameMethod(invocation)){
 return invocation;
+}
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/4078/pattern-ver1-serial/com.profidatagroup.e4.advancedlaunch.src.ch.parisi.e4.advancedlaunch.tabs.LaunchTab.java-editLaunchConfiguration.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:35:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
+invocations.add(invocation);
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V38/4847/pattern-ver1-serial/capsule-generation.src.main.java.org.paninij.runtime.check.Panini.java-findUnsafe.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:35:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
+invocations.add(invocation);
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V38/4847/pattern-ver1-serial/capsule-generation.src.main.java.org.paninij.runtime.check.Panini.java-findUnsafe.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:35:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
+int a=0;
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:35:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
+int a=0;
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:35:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
+int a=0;
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:36:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
+int a=0;
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:36:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
+int a=0;
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:36:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
-if(wanted.hasSameMethod(invocation)){
+if(invocation!=null){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/691/pattern-ver1-serial/us.textrade.models.MatchesQueue.java-addTradeToQueue.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:36:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
+String OUTSTRING="";
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:36:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
+String OUTSTRING="";
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:37:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
+String OUTSTRING="";
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:37:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
+String OUTSTRING="";
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:37:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
+String OUTSTRING="";
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:37:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
+invocations.add(invocation);
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V10/3832/pattern-ver1-serial/src.miningChanges.ObtainVSMScore.java-updateCorpusNL.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:37:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
+if(invocations.isEmpty()){
+return null;
+}
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5856/pattern-ver1-serial/src.main.java.io.aif.associations.builder.ExperimentsConnectionsGraphReducer.java-normalize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:38:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
+if(invocation!=null){
 firstSimilar=invocation;
+}
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/663/pattern-ver1-serial/src.ceprei.appcrawler.config.FileAppCrawlerConfig.java-FileAppCrawlerConfig.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:38:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
-if(wanted.hasSameMethod(invocation)){
+if(wanted.hasSameMethod(invocation)==true){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1922/pattern-ver1-serial/app.src.main.java.ch.hsr.edu.sinv_56082.gastroginiapp.ui.activities.menu.ProductListListEditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:38:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:38:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:38:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
+if(equals(invocation)){
+return null;
+}
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:39:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
+}
+if(equals(firstSimilar)){
+return null;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:39:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
+if(equals(firstSimilar)){
+return null;
+}
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:39:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
+if(equals(invocation)){
+return null;
+}
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:39:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
+if(equals(wanted)){
+return null;
+}
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:39:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
+if(equals(wanted)){
+return null;
+}
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:40:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
+}
+if(equals(invocation)){
+return null;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:40:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
+int indexSelection=0;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:40:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
+int indexSelection=0;
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:40:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
+if(invocation.equals("sounds")){
+continue;
+}
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/2569/pattern-ver1-serial/src.main.java.net.dirtydeeds.discordsoundboard.chat.ListCategoriesProcessor.java-handleEvent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:40:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
+continue;
+}
+if(invocation.equals("sounds")){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/2569/pattern-ver1-serial/src.main.java.net.dirtydeeds.discordsoundboard.chat.ListCategoriesProcessor.java-handleEvent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:40:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
+continue;
+}
+if(firstSimilar.equals("sounds")){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/2569/pattern-ver1-serial/src.main.java.net.dirtydeeds.discordsoundboard.chat.ListCategoriesProcessor.java-handleEvent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:41:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
+}
+if(invocation.equals("sounds")){
+continue;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/2569/pattern-ver1-serial/src.main.java.net.dirtydeeds.discordsoundboard.chat.ListCategoriesProcessor.java-handleEvent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:41:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
+}
+if(wanted.equals("sounds")){
+continue;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/2569/pattern-ver1-serial/src.main.java.net.dirtydeeds.discordsoundboard.chat.ListCategoriesProcessor.java-handleEvent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:41:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
+int a=1;
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:41:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
+int a=1;
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:41:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
+int a=1;
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:42:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
+int a=1;
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:42:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
+int a=1;
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:42:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
-public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
+public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher parentPuzzleBoard){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
-if(!wanted.hasSimilarMethod(invocation)){
+if(!parentPuzzleBoard.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
-if(wanted.hasSameMethod(invocation)){
+if(parentPuzzleBoard.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/3965/pattern-ver1-serial/src.model.algorithm.AStar.java-generateDescendants.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:42:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
+boolean b=true;
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:42:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
+boolean b=true;
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:43:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
+boolean b=true;
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:43:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
+boolean b=true;
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:43:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
+boolean b=true;
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:43:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
+if(invocations.isEmpty()){
+return firstSimilar;
+}
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/6812/pattern-ver1-serial/src.main.java.wslf.homemoviebase.logic.Worker.java-parseTags.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:43:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
+if(invocation==null){
+continue;
+}
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7058/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.manager.FileManager.java-getExternalSDCardDirectory.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:44:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
+if(invocation==null){
+continue;
+}
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7058/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.manager.FileManager.java-getExternalSDCardDirectory.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:44:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
+if(invocation==null){
+continue;
+}
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7058/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.manager.FileManager.java-getExternalSDCardDirectory.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:44:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
+if(wanted==null){
+continue;
+}
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7058/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.manager.FileManager.java-getExternalSDCardDirectory.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:44:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
+if(firstSimilar==null){
+continue;
+}
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7058/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.manager.FileManager.java-getExternalSDCardDirectory.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:44:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
+if(invocation==null){
+return null;
+}
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:44:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
+if(invocation==null){
+return null;
+}
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:45:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
+if(invocation==null){
+return null;
+}
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:45:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
+if(wanted==null){
+return null;
+}
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:45:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
+if(invocations==null){
+return null;
+}
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:45:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
+if(wanted==null){
+return null;
+}
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:45:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
+if(firstSimilar==null){
+return null;
+}
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:46:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
+if(firstSimilar==null){
+return null;
+}
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:46:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
+}
+if(wanted==null){
+return null;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:46:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
+if(wanted==null){
+return null;
+}
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:46:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
+}
+if(invocation==null){
+return null;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:46:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
+}
+if(invocation==null){
+return null;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:46:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
+}
+if(firstSimilar==null){
+return null;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:46:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
-if(!wanted.hasSimilarMethod(invocation)){
+if(!!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V12/6908/pattern-ver1-serial/mainModule.src.backend.building.ProductionBuilding.java-canBuild.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:47:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
+}
 }
+if(firstSimilar==null){
+return null;
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V6/4291/pattern-ver1-serial/src.ar.edu.it.itba.pdc.Implementations.proxy.client.ProxyClientSelectorProtocol.java-handleWrite.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:47:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
+if("&null".equals(invocation)){
+return null;
+}
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:47:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
+}
+if("&null".equals(invocation)){
+return null;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:47:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
+}
+if("&null".equals(wanted)){
+return null;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:47:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
+if("&null".equals(invocations)){
+return null;
+}
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:48:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
+if("&null".equals(wanted)){
+return null;
+}
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:48:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
+if("&null".equals(firstSimilar)){
+return null;
+}
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:48:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
+}
+if("&null".equals(firstSimilar)){
+return null;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:48:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
-firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
+firstSimilar=invocation;
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1794/pattern-ver1-serial/src.com.olympicat.scheduleupdates.DataFactory.java-loadData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:48:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
+firstSimilar=invocation;
 continue;
 }
 if(firstSimilar==null){
-firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:48:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
-firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
+firstSimilar=invocation;
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:49:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
+firstSimilar=invocation;
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
-firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:49:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
+firstSimilar=invocation;
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:49:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
+firstSimilar=invocation;
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:49:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
+if(!(wanted==null)){
 if(wanted.hasSameMethod(invocation)){
 return invocation;
+}
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V20/5193/pattern-ver1-serial/IJC_UI.src.nl.detoren.ijc.ui.view.Hoofdscherm.java-updateUpdateStandButton.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:49:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
+firstSimilar=invocation;
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:50:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
+firstSimilar=invocation;
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1266/pattern-ver1-serial/catroid.src.org.catrobat.catroid.livewallpaper.LiveWallpaper.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:50:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
-if(!wanted.hasSimilarMethod(invocation)){
+if(true){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:50:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
-if(!wanted.hasSimilarMethod(invocation)){
+if(!wanted.hasSimilarMethod(invocation)==false){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3764/pattern-ver1-serial/uDig.org.locationtech.udig.processingtoolbox.src.org.locationtech.udig.processingtoolbox.tools.TextfileToPointDialog.java-getTextColumns.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:50:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
-firstSimilar=invocation;
 }
+firstSimilar=invocation;
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/2094/pattern-ver1-serial/src.main.java.com.dagobert_engine.core.service.UpdateService.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:50:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
+if(firstSimilar.equals("-1")){
+return null;
+}
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:51:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
-if(!wanted.hasSimilarMethod(invocation)){
+if(!wanted.hasSimilarMethod(invocation)&&false){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/5079/pattern-ver1-serial/Server.src.server.model.players.packets.ClickNPC.java-processPacket.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:51:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
-if(firstSimilar==null){
 firstSimilar=invocation;
+if(firstSimilar==null){
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6301/pattern-ver1-serial/app.src.main.java.client.example.sj.pulltoscaleheaderlayout.PullToScaleHeaderLayout.java-computeScroll.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:51:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
-if(!wanted.hasSimilarMethod(invocation)){
+if(wanted!=null){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/2504/pattern-ver1-serial/app.src.main.java.com.projectmanagement.benson.homeinventoryapp.Models.List.java-setKeys.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:51:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
+assert (invocation!=null);
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:51:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
+assert (invocation!=null);
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:52:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
+assert (invocation!=null);
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:52:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
+assert (wanted!=null);
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:52:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
+assert (invocations!=null);
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:52:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
+assert (wanted!=null);
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:52:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
+assert (firstSimilar!=null);
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:52:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
+assert (firstSimilar!=null);
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:53:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
+assert (!invocations.isEmpty());
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:53:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
+if(invocations.equals(InputStream.class)){
+return invocation;
+}
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:53:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
+if(wanted.equals(InputStream.class)){
+return invocation;
+}
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:53:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
+if(invocations.equals(InputStream.class)){
+return invocation;
+}
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:53:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
+if(wanted.equals(InputStream.class)){
+return invocation;
+}
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:53:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
+if(invocations.equals(InputStream.class)){
+return invocation;
+}
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:54:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
-if(!wanted.hasSimilarMethod(invocation)){
+if(!wanted.hasSimilarMethod(invocation)==true){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1922/pattern-ver1-serial/app.src.main.java.ch.hsr.edu.sinv_56082.gastroginiapp.ui.activities.menu.ProductListListEditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:54:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
+if(invocation!=null){
+firstSimilar=invocation;
+}
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:54:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
+if(invocation!=null){
+if(!wanted.hasSimilarMethod(invocation)){
+continue;
+}
+if(firstSimilar==null){
+firstSimilar=invocation;
+}
+if(wanted.hasSameMethod(invocation)){
+return invocation;
+}
+}
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:54:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
+if(wanted!=null){
+if(!wanted.hasSimilarMethod(invocation)){
+continue;
+}
+if(firstSimilar==null){
+firstSimilar=invocation;
+}
+if(wanted.hasSameMethod(invocation)){
+return invocation;
+}
+}
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:54:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
+if(wanted!=null){
+Invocation firstSimilar=null;
+for(Invocation invocation : invocations){
+if(!wanted.hasSimilarMethod(invocation)){
+continue;
+}
+if(firstSimilar==null){
+firstSimilar=invocation;
+}
+if(wanted.hasSameMethod(invocation)){
+return invocation;
+}
+}
+return firstSimilar;
+}
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:55:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
-if(!wanted.hasSimilarMethod(invocation)){
+if(wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/1959/pattern-ver1-serial/LowcostAvia.src.main.java.com.epam.lowcost.command.RegisterCommand.java-action.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:55:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
+assert (invocation!=null);
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:55:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
+assert (invocation!=null);
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:55:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
+assert (wanted!=null);
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:55:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
+assert (invocations!=null);
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:55:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
+assert (wanted!=null);
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:56:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
+assert (firstSimilar!=null);
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:56:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
+if(firstSimilar.equals("655")){
+System.out.println();
+}
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:56:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
+}
 }
+if(firstSimilar.equals("655")){
+System.out.println();
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:56:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
+if((Thread.currentThread().interrupted())){
+return null;
+}
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:56:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
+if((Thread.currentThread().interrupted())){
+return null;
+}
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:57:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
+}
+if((Thread.currentThread().interrupted())){
+return null;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:57:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
+firstSimilar=invocation;
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V46/4063/pattern-ver1-serial/egradle-plugin-main.src.main.java.de.jcup.egradle.core.model.groovyantlr.GradleModelBuilder.java-handleTaskNameResolving.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:57:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
-if(firstSimilar==null){
+if(firstSimilar==null||"查看红包".equals(firstSimilar)){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:57:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
-if(!wanted.hasSimilarMethod(invocation)){
+if(wanted!=null&&!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V22/4226/pattern-ver1-serial/src.main.java.org.walkmod.javalang.walkers.ChangeLogVisitor.java-visit.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:57:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
-if(wanted.hasSameMethod(invocation)){
+if(wanted!=null&&wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5865/pattern-ver1-serial/gde-webapp.src.main.java.com.nagarro.gde.validator.UserInternaturValidator.java-validateRequiredData.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:57:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
+if(firstSimilar==null){
+firstSimilar=invocation;
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
-if(firstSimilar==null){
-firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/3655/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.placement.RecoverPointScheduler.java-scheduleStorageSourcePoolConstraint.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:58:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
+if(!wanted.hasSimilarMethod(invocation)){
+continue;
+}
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/3655/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.placement.RecoverPointScheduler.java-scheduleStorageSourcePoolConstraint.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:58:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
-}
 if(wanted.hasSameMethod(invocation)){
 return invocation;
+}
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/3655/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.placement.RecoverPointScheduler.java-scheduleStorageSourcePoolConstraint.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:58:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
+if(wanted.hasSameMethod(invocation)){
+return invocation;
+}
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/3655/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.placement.RecoverPointScheduler.java-scheduleStorageSourcePoolConstraint.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:58:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
+}
+if(!wanted.hasSimilarMethod(invocation)){
+continue;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/3655/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.placement.RecoverPointScheduler.java-scheduleStorageSourcePoolConstraint.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:58:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
+}
+if(wanted.hasSameMethod(invocation)){
+return invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/3655/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.placement.RecoverPointScheduler.java-scheduleStorageSourcePoolConstraint.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:59:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
+if(invocations.isEmpty()){
+invocations=null;
+}
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:59:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
+}
+if(wanted.hasSameMethod(invocation)){
+return invocation;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V11/5689/pattern-ver1-serial/minecraft.net.minecraft.src.BlockCocoaSapling.java-blockActivated.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:59:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
-if(wanted.hasSameMethod(invocation)){
+if((wanted!=null)&&(wanted.hasSameMethod(invocation))){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/4845/pattern-ver1-serial/app.src.main.java.hu.bme.aut.szabolcs.szokol.countryinfo.ui.main.MainActivity.java-onBackPressed.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:59:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:59:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 05:59:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:00:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
-if(firstSimilar==null){
+if(firstSimilar==null||firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/4704/pattern-ver1-serial/src.main.java.com.alibaba.fastjson.parser.ParserConfig.java-createJavaBeanDeserializer.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:00:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
-if(wanted.hasSameMethod(invocation)){
+if(wanted==null||wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/443/pattern-ver1-serial/bundles.opaeum-compilation.org.opaeum.compilation.java.src.org.opaeum.javageneration.bpm.actions.AbstractProtectedNodeBuilder.java-implementCallbackOnComplete.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:00:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:00:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:01:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
+assert (invocation!=null):"Appointments day is not allowed to be null!";
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:01:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
+assert (invocation!=null):"Appointments day is not allowed to be null!";
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:01:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
+assert (invocation!=null):"Appointments day is not allowed to be null!";
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:01:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
+assert (wanted!=null):"Appointments day is not allowed to be null!";
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:01:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
+assert (invocations!=null):"Appointments day is not allowed to be null!";
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:02:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
+assert (wanted!=null):"Appointments day is not allowed to be null!";
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:02:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
+assert (firstSimilar!=null):"Appointments day is not allowed to be null!";
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:02:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
+assert (firstSimilar!=null):"Appointments day is not allowed to be null!";
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:02:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
+import java.util.Collections;
+
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
+Collections.sort(invocations,Collections.reverseOrder());
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V40/4441/pattern-ver1-serial/recruiting-core.src.main.java.it.f2informatica.core.model.builder.ConsultantModelBuilder.java-withExperiencesIn.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:02:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
+if(!wanted.hasSimilarMethod(invocation)){
+continue;
+}
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/3277/pattern-ver1-serial/core.src.main.java.org.infinispan.transaction.WriteSkewHelper.java-updateLocalModeCacheEntries.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:02:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
+}
+if(wanted==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:03:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
+if(wanted==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:03:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
+if(wanted==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:03:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
+}
+if(invocation==null){
+throw new IllegalStateException("Cannot instantiate Page whitout String url constructor parameter or @PageURL class annotation");
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/4732/pattern-ver1-serial/src.main.java.com.mgiorda.page.AbstractPage.java-AbstractPage.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:03:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
+if(invocation==null){
+throw new IllegalStateException("Cannot instantiate Page whitout String url constructor parameter or @PageURL class annotation");
+}
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/4732/pattern-ver1-serial/src.main.java.com.mgiorda.page.AbstractPage.java-AbstractPage.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:03:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
-if(wanted.hasSameMethod(invocation)){
+if(wanted.hasSameMethod(invocation)&&!invocation.equals("全部")){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/6475/pattern-ver1-serial/src.main.java.com.morningsidevc.service.impl.FeedInfoServiceImpl.java-findFeeds.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:03:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
-if(firstSimilar==null){
+if(firstSimilar==null&&!firstSimilar.equals("")){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/6260/pattern-ver1-serial/Client.src.com.way.chat.activity.ChatActivity.java-onItemClick.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:04:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
+if(invocation==null){
+invocation=firstSimilar;
+}else {
 firstSimilar=invocation;
+}
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V16/3590/pattern-ver1-serial/src.main.java.ch.bfh.btx8081.w2015.blue.HealthVisApp.View.PatientDetailView.java-refreshView.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:04:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
+if(firstSimilar==null){
+firstSimilar=invocation;
+}
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:04:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
+}
+if(firstSimilar==null){
+firstSimilar=invocation;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V11/5689/pattern-ver1-serial/minecraft.net.minecraft.src.BlockCocoaSapling.java-blockActivated.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:04:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
+if(invocations!=null&&!invocations.isEmpty()){
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
+}
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7435/pattern-ver1-serial/mockserver-core.src.main.java.org.mockserver.model.NottableString.java-strings.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:04:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
-return invocation;
+Invocation t=invocation;
+invocation=null;
+return t;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5100/pattern-ver1-serial/CityGenJava.src.gameObjects.player.Player.java-drop.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 1, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:05:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
+Invocation t=invocation;
+invocation=null;
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
-return invocation;
+return t;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5100/pattern-ver1-serial/CityGenJava.src.gameObjects.player.Player.java-drop.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 1, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:05:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
+Invocation t=firstSimilar;
+firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
-return firstSimilar;
+return t;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5100/pattern-ver1-serial/CityGenJava.src.gameObjects.player.Player.java-drop.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 1, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:05:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
+if(invocations.size()==1){
+return invocations.get(0);
+}
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/6773/pattern-ver1-serial/player.Heuristic.java-run.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 7, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:05:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
+}
+if(invocation==null||wanted==null){
+throw new NullPointerException();
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/1218/pattern-ver1-serial/app.src.main.java.net.danielpalma.lineupshaker.DefaultSportDataListener.java-DefaultSportDataListener.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:05:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
+}
+if(invocation==null||firstSimilar==null){
+throw new NullPointerException();
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/1218/pattern-ver1-serial/app.src.main.java.net.danielpalma.lineupshaker.DefaultSportDataListener.java-DefaultSportDataListener.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:05:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
+}
+if(wanted==null||invocation==null){
+throw new NullPointerException();
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:06:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
+if(invocation==null||wanted==null){
+throw new NullPointerException();
+}
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:06:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
+if(wanted==null||invocation==null){
+throw new NullPointerException();
+}
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:06:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
+for(int i=0;i<24;i++){
 firstSimilar=invocation;
+}
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/7063/pattern-ver1-serial/src.application.rmi.Serveur.java-initalisationMain.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:06:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
+boolean atLeastOneNonProhibited=false;
 if(firstSimilar==null){
 firstSimilar=invocation;
+atLeastOneNonProhibited=true;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
+}
+if(atLeastOneNonProhibited){
+throw new IllegalStateException("There should be a vertex satisfying these properties, but there is not, so there must be something wrong..");
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/4655/pattern-ver1-serial/src.Alg.Algorithms.IterativeCompression.SimpleDisjointAlg.java-findVertexWithOneNonProhibitedNeighbour.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:06:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
+long startTime=System.currentTimeMillis();
 firstSimilar=invocation;
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:07:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
+long startTime=System.currentTimeMillis();
 if(!wanted.hasSimilarMethod(invocation)){
 continue;
 }
 if(firstSimilar==null){
 firstSimilar=invocation;
 }
 if(wanted.hasSameMethod(invocation)){
 return invocation;
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:07:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationsFinder.java[64,79]
------------Candidate---------------
 public Invocation findSimilarInvocation(List<Invocation> invocations,InvocationMatcher wanted){
 Invocation firstSimilar=null;
 for(Invocation invocation : invocations){
-if(!wanted.hasSimilarMethod(invocation)){
-continue;
-}
-if(firstSimilar==null){
-firstSimilar=invocation;
-}
-if(wanted.hasSameMethod(invocation)){
-return invocation;
-}
 }
 return firstSimilar;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/1030/pattern-ver1-serial/components.scifio.src.loci.formats.in.AVIReader.java-readChunk.pattern
MATCHLEVEL : ALL
ALL : 17, UPD : 3, INS : 0, DEL : 14
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:07:23 CDT
--------------- END -----------------
Location : org.mockito.internal.invocation.InvocationMatcher.hasSimilarMethod:[87, 89, 75, 76, 78, 79, 80, 81, 83]#0.5
Compute Candidate : 2019.09.05 AD at 06:08:04 CDT - 2019.09.05 AD at 06:32:22 CDT , PNumber : 11350, CandNumber : 192 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
- final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
+ boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:32:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
-String wantedMethodName=getMethod().getName();
+ String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:32:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
-String currentMethodName=candidate.getMethod().getName();
+ String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:32:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
- final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
+ boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:33:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
- final boolean methodEquals=hasSameMethod(candidate);
+ boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:33:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
- final boolean isUnverified=!candidate.isVerified();
+ boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:33:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
- final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
+ boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:33:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
-if(!methodNameEquals||!isUnverified||!mockIsTheSame){
+if(!methodNameEquals&&!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V17/3484/pattern-ver1-serial/src.com.massivecraft.creativegates.MainListener.java-stabilizePortalContent.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:33:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
-if(!methodNameEquals||!isUnverified||!mockIsTheSame){
+if(!methodNameEquals||!isUnverified&&!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V17/3484/pattern-ver1-serial/src.com.massivecraft.creativegates.MainListener.java-stabilizePortalContent.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:34:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
- final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
+ final boolean methodNameEquals=wantedMethodName.equalsIgnoreCase(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/1785/pattern-ver1-serial/src.edu.asu.laits.gui.menus.ModelMenu.java-initialize.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:34:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
- final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
+ final boolean mockIsTheSame=getInvocation().getMock()!=candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2015/V32/4891/pattern-ver1-serial/app.src.main.java.edu.temple.androidpermissions.MainActivity.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:34:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
- final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
+ final boolean methodNameEquals=wantedMethodName.startsWith(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V15/797/pattern-ver1-serial/src.main.java.com.github.games647.scoreboardstats.scoreboard.VariableReplacer.java-getFactionsValue.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:34:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
- final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
+ final boolean methodNameEquals=wantedMethodName.contains(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V56/1219/pattern-ver1-serial/src.lisong_mechlab.view.render.StyleManager.java-getBgColorFor.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:34:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
- final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
+ final boolean methodNameEquals=candidate.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/2225/pattern-ver1-serial/src.main.java.com.openshift.internal.client.ApplicationResource.java-getGearGroup.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:34:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
- final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
+ final boolean methodNameEquals=currentMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/2225/pattern-ver1-serial/src.main.java.com.openshift.internal.client.ApplicationResource.java-getGearGroup.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:35:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
- final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
+ final boolean mockIsTheSame=getInvocation().getMock()==candidate.toString();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2015/V31/7441/pattern-ver1-serial/HelloWorld.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:35:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
-String wantedMethodName=getMethod().getName();
+String wantedMethodName=getMethod().toString();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/1640/pattern-ver1-serial/spring-social-vkontakte.src.main.java.org.springframework.social.vkontakte.api.impl.WallTemplate.java-getPost.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:35:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
- final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
+ final boolean mockIsTheSame=getInvocation().toString()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/1640/pattern-ver1-serial/spring-social-vkontakte.src.main.java.org.springframework.social.vkontakte.api.impl.WallTemplate.java-getPost.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:35:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
-String currentMethodName=candidate.getMethod().getName();
+String currentMethodName=candidate.getMethod().toString();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/1640/pattern-ver1-serial/spring-social-vkontakte.src.main.java.org.springframework.social.vkontakte.api.impl.WallTemplate.java-getPost.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:35:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
-return false;
+return methodNameEquals;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2015/V12/7165/pattern-ver1-serial/src.com.massivecraft.massivecore.mson.Mson.java-stripStyle.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:36:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
- final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
+ final Boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/934/pattern-ver1-serial/mifosng-provider.src.main.java.org.mifosplatform.accounting.journalentry.serialization.JournalEntryCommandFromApiJsonDeserializer.java-commandFromApiJson.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:36:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
- final boolean methodEquals=hasSameMethod(candidate);
+ final Boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/934/pattern-ver1-serial/mifosng-provider.src.main.java.org.mifosplatform.accounting.journalentry.serialization.JournalEntryCommandFromApiJsonDeserializer.java-commandFromApiJson.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:36:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
- final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
+ final Boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/934/pattern-ver1-serial/mifosng-provider.src.main.java.org.mifosplatform.accounting.journalentry.serialization.JournalEntryCommandFromApiJsonDeserializer.java-commandFromApiJson.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:36:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
- final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
+ final Boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/934/pattern-ver1-serial/mifosng-provider.src.main.java.org.mifosplatform.accounting.journalentry.serialization.JournalEntryCommandFromApiJsonDeserializer.java-commandFromApiJson.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:36:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
- final boolean isUnverified=!candidate.isVerified();
+ final Boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/934/pattern-ver1-serial/mifosng-provider.src.main.java.org.mifosplatform.accounting.journalentry.serialization.JournalEntryCommandFromApiJsonDeserializer.java-commandFromApiJson.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:36:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
- final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
+ final boolean methodNameEquals=wantedMethodName.endsWith(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V3/2302/pattern-ver1-serial/src.org.exist.storage.NativeValueIndex.java-matches.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:37:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
-return !overloadedButSameArgs;
+return false;
 }

PATTERN : /home/jiajun/GithubData/2011/V2/2886/pattern-ver1-serial/src.freenet.node.CHKInsertSender.java-shouldTimeout.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:37:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
+import java.util.Collections;
+
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
-return !overloadedButSameArgs;
+return true;
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4457/pattern-ver1-serial/library.src.main.java.com.gh.bmd.jrt.core.DefaultResultChannel.java-isOutputChannelOpen.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:37:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
-String wantedMethodName=getMethod().getName();
-String currentMethodName=candidate.getMethod().getName();
+ final String wantedMethodName=getMethod().getName();
+ final String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:37:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
-String wantedMethodName=getMethod().getName();
+ String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
- final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
+ boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:37:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
- final boolean methodEquals=hasSameMethod(candidate);
+ boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
- final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
+ boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:38:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
-String currentMethodName=candidate.getMethod().getName();
+ String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
- final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
+ boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:38:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
- final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
+ boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
- final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
+ boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:38:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
- final boolean isUnverified=!candidate.isVerified();
+ boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
- final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
+ boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:38:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
- final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
+ boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
- final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
+ boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:38:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
-String wantedMethodName=getMethod().getName();
+ String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
- final boolean methodEquals=hasSameMethod(candidate);
+ boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:39:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
-String wantedMethodName=getMethod().getName();
+ String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
- final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
+ boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:39:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
-String wantedMethodName=getMethod().getName();
+String wantedMethodName=this.getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2015/V18/4298/pattern-ver1-serial/src.main.java.org.spongepowered.api.service.command.SimpleCommandService.java-getHelp.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:39:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
-return !overloadedButSameArgs;
+return overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V40/3906/pattern-ver1-serial/tetrad-lib.src.main.java.edu.cmu.tetrad.algcomparison.algorithm.oracle.pag.Ccd.java-getComparisonGraph.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:39:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
+hasSimilarMethod(candidate);
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:39:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
-if(!methodNameEquals||!isUnverified||!mockIsTheSame){
+if(!methodNameEquals&&!isUnverified&&!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V16/4407/pattern-ver1-serial/app.src.main.java.com.coderockets.referandumproject.util.adapter.MyFavoritesAdapter.java-bind.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:39:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
- final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
+ final boolean methodNameEquals=wantedMethodName.equals((currentMethodName).toLowerCase());
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2032/pattern-ver1-serial/src.main.ContaminationDialog.java-onOK.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:40:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
-return !overloadedButSameArgs;
+return isUnverified;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/6794/pattern-ver1-serial/java.src.main.java.net.auxesia.Population.java-getPopulation.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:40:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
-return !overloadedButSameArgs;
+return methodNameEquals;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/6794/pattern-ver1-serial/java.src.main.java.net.auxesia.Population.java-getPopulation.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:40:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
-return !overloadedButSameArgs;
+return mockIsTheSame;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/6794/pattern-ver1-serial/java.src.main.java.net.auxesia.Population.java-getPopulation.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:40:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
-return !overloadedButSameArgs;
+return methodEquals;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/6794/pattern-ver1-serial/java.src.main.java.net.auxesia.Population.java-getPopulation.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:40:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
- final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
+ final boolean overloadedButSameArgs=methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/960/pattern-ver1-serial/src.main.java.cz.zcu.kiv.eegdatabase.wui.ui.lists.components.ResearchGroupSelectForm.java-ResearchGroupSelectForm.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:41:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
- final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
+ final boolean methodNameEquals=wantedMethodName.trim().equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/2546/pattern-ver1-serial/src.com.nth.ikiam.MapActivity.java-verFotosUsuario.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:41:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
-return !overloadedButSameArgs;
+return (boolean)(!overloadedButSameArgs);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:41:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
+synchronized(this){
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
+}
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:41:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
- final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
+ final boolean methodNameEquals=wantedMethodName.equals((currentMethodName).toUpperCase());
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7401/pattern-ver1-serial/Model.src.main.java.config.SensorParams.java-SensorParams.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:41:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
+synchronized(this){
 return false;
+}
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:42:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
- final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
+ @SuppressWarnings("UnusedAssignment") boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
- final boolean methodEquals=hasSameMethod(candidate);
+ @SuppressWarnings("UnusedAssignment") boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
- final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
+ @SuppressWarnings("UnusedAssignment") boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:42:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
-String wantedMethodName=getMethod().getName();
+ @SuppressWarnings("UnusedAssignment") String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
- final boolean methodEquals=hasSameMethod(candidate);
+ @SuppressWarnings("UnusedAssignment") boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
- final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
+ @SuppressWarnings("UnusedAssignment") boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:42:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
- final boolean isUnverified=!candidate.isVerified();
+ @SuppressWarnings("UnusedAssignment") boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
- final boolean methodEquals=hasSameMethod(candidate);
+ @SuppressWarnings("UnusedAssignment") boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
- final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
+ @SuppressWarnings("UnusedAssignment") boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:42:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
- final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
- final boolean isUnverified=!candidate.isVerified();
+ @SuppressWarnings("UnusedAssignment") boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
+ @SuppressWarnings("UnusedAssignment") boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
- final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
+ @SuppressWarnings("UnusedAssignment") boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:42:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
-String currentMethodName=candidate.getMethod().getName();
+ @SuppressWarnings("UnusedAssignment") String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
- final boolean methodEquals=hasSameMethod(candidate);
+ @SuppressWarnings("UnusedAssignment") boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
- final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
+ @SuppressWarnings("UnusedAssignment") boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:43:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
+if(wantedMethodName.isEmpty()){
+return true;
+}
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/3286/pattern-ver1-serial/DatabaseMSCore.src.DatabaseMSCore.dbTypeInteger.java-canBeInitializedWith.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:43:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
+if(currentMethodName.isEmpty()){
+return true;
+}
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/3286/pattern-ver1-serial/DatabaseMSCore.src.DatabaseMSCore.dbTypeInteger.java-canBeInitializedWith.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:43:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
+candidate=candidate;
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:43:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
+if(wantedMethodName.isEmpty()){
+return false;
+}
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/4707/pattern-ver1-serial/src.main.java.org.jboss.pressgang.ccms.contentspec.processor.ContentSpecProcessor.java-processExistingTopicTags.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:43:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
+if(currentMethodName.isEmpty()){
+return false;
+}
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/4707/pattern-ver1-serial/src.main.java.org.jboss.pressgang.ccms.contentspec.processor.ContentSpecProcessor.java-processExistingTopicTags.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:44:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
+int a=0;
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:44:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
+int a=0;
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:44:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
+String OUTSTRING="";
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:44:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
+String OUTSTRING="";
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:44:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:45:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
+return false;
+}
+if(equals(candidate)){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:45:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
+return false;
+}
+if(equals(methodEquals)){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:45:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
+if(equals(overloadedButSameArgs)){
+return false;
+}
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:45:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
+if(equals(candidate)){
+return false;
+}
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:45:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
+if(equals(candidate)){
+return false;
+}
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:46:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
+if(wantedMethodName.isEmpty()){
+return overloadedButSameArgs;
+}
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V28/5123/pattern-ver1-serial/src.main.java.org.mcstats.generator.ReflectionAggregator.java-getValues.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:46:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
+if(currentMethodName.isEmpty()){
+return overloadedButSameArgs;
+}
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V28/5123/pattern-ver1-serial/src.main.java.org.mcstats.generator.ReflectionAggregator.java-getValues.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:46:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
+if(wantedMethodName.isEmpty()){
+return methodEquals;
+}
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V28/5123/pattern-ver1-serial/src.main.java.org.mcstats.generator.ReflectionAggregator.java-getValues.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:46:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
+int indexSelection=0;
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:46:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
+int a=1;
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:47:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
+int a=1;
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:47:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
+boolean b=true;
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:47:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
+boolean b=true;
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:47:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
+if(wantedMethodName.startsWith("ldaps")){
+}
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/7118/pattern-ver1-serial/gateway.engine.policies.src.main.java.io.apiman.gateway.engine.policies.auth.LDAPIdentityValidator.java-validate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:47:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
+if(currentMethodName.startsWith("ldaps")){
+}
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/7118/pattern-ver1-serial/gateway.engine.policies.src.main.java.io.apiman.gateway.engine.policies.auth.LDAPIdentityValidator.java-validate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:48:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
+if(candidate==null){
+return false;
+}
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:48:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
+if(wantedMethodName==null){
+return false;
+}
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:48:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
+if(currentMethodName==null){
+return false;
+}
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:48:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
+if(methodNameEquals==overloadedButSameArgs){
+return true;
+}
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/3923/pattern-ver1-serial/railo-java.railo-core.src.railo.runtime.op.Operator.java-_equalsComplexEL.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:48:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
+if(isUnverified==overloadedButSameArgs){
+return true;
+}
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/3923/pattern-ver1-serial/railo-java.railo-core.src.railo.runtime.op.Operator.java-_equalsComplexEL.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:49:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
+if(mockIsTheSame==overloadedButSameArgs){
+return true;
+}
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/3923/pattern-ver1-serial/railo-java.railo-core.src.railo.runtime.op.Operator.java-_equalsComplexEL.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:49:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
+if(methodEquals==overloadedButSameArgs){
+return true;
+}
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/3923/pattern-ver1-serial/railo-java.railo-core.src.railo.runtime.op.Operator.java-_equalsComplexEL.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:49:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
+return false;
+}
+if(candidate==null){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:49:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
+if(candidate==null){
+return false;
+}
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:49:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
+if(wantedMethodName==null){
+return false;
+}
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:49:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
+if(candidate==null){
+return false;
+}
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:50:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
+if(overloadedButSameArgs==!methodEquals&&safelyArgumentsMatch(candidate.getArguments())){
+return methodNameEquals;
+}
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:50:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
+if(overloadedButSameArgs==!methodEquals&&safelyArgumentsMatch(candidate.getArguments())){
+return methodEquals;
+}
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:50:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
+if(overloadedButSameArgs==!methodEquals&&safelyArgumentsMatch(candidate.getArguments())){
+return mockIsTheSame;
+}
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:50:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
+if(overloadedButSameArgs==!methodEquals&&safelyArgumentsMatch(candidate.getArguments())){
+return isUnverified;
+}
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:50:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
+if(wantedMethodName==getMethod().getName()){
+return overloadedButSameArgs;
+}
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:51:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
+if(methodNameEquals==wantedMethodName.equals(currentMethodName)){
+return overloadedButSameArgs;
+}
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:51:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
+if(currentMethodName==candidate.getMethod().getName()){
+return overloadedButSameArgs;
+}
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:51:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
+if(wantedMethodName==getMethod().getName()){
+return methodNameEquals;
+}
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:51:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
+if(wantedMethodName.equals("-1")){
+return false;
+}
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:51:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
+if(currentMethodName.equals("-1")){
+return false;
+}
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:52:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
+if(candidate.equals(overloadedButSameArgs)){
+return false;
+}
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:52:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
+if(wantedMethodName.equals(overloadedButSameArgs)){
+return false;
+}
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:52:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
+if(candidate.equals(wantedMethodName)){
+return false;
+}
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:52:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
+if(candidate==null){
+return false;
+}
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4925/pattern-ver1-serial/statemachine-persistence.src.main.java.de.teck.statemachine.persistence.model.TransitionGraph.java-addTransition.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:52:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
+assert (candidate!=null);
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:52:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
+assert (wantedMethodName!=null);
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:53:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
+assert (currentMethodName!=null);
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:53:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
+assert (!wantedMethodName.isEmpty());
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:53:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
+assert (!currentMethodName.isEmpty());
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:53:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
+if(candidate.equals(InputStream.class)){
+return overloadedButSameArgs;
+}
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:53:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
+if(wantedMethodName.equals(InputStream.class)){
+return overloadedButSameArgs;
+}
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:54:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
+if(wantedMethodName.startsWith("-")){
+return false;
+}
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/3084/pattern-ver1-serial/src.cdio.shared.FieldVerifier.java-isValidRbId.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:54:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
+if(currentMethodName.startsWith("-")){
+return false;
+}
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/3084/pattern-ver1-serial/src.cdio.shared.FieldVerifier.java-isValidRbId.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:54:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
+if(candidate!=null){
+String wantedMethodName=getMethod().getName();
+String currentMethodName=candidate.getMethod().getName();
+ final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
+ final boolean isUnverified=!candidate.isVerified();
+ final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
+ final boolean methodEquals=hasSameMethod(candidate);
+if(!methodNameEquals||!isUnverified||!mockIsTheSame){
+return false;
+}
+ final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
+return !overloadedButSameArgs;
+}
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:54:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
+assert (overloadedButSameArgs!=!methodEquals&&safelyArgumentsMatch(candidate.getArguments()));
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:54:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
+assert (wantedMethodName!=getMethod().getName());
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:55:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
+assert (currentMethodName!=candidate.getMethod().getName());
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:55:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
+assert (methodNameEquals!=wantedMethodName.equals(currentMethodName));
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:55:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
+assert (isUnverified!=!candidate.isVerified());
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:55:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
+assert (methodEquals!=hasSameMethod(candidate));
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:55:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
+assert (candidate!=null);
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:55:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
+if(wantedMethodName.matches("[0-9]*")){
+return false;
+}
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V32/5036/pattern-ver1-serial/src.engine.PrinterServerTask1After.java-checkIfInputMatchStored.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:56:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
+if(currentMethodName.matches("[0-9]*")){
+return false;
+}
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V32/5036/pattern-ver1-serial/src.engine.PrinterServerTask1After.java-checkIfInputMatchStored.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:56:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
+if(wantedMethodName.equals("655")){
+System.out.println();
+}
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:56:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
+if((Thread.currentThread().interrupted())){
+return false;
+}
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:56:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
+if(!overloadedButSameArgs){
+throw new IllegalStateException("マージ対象のファイルが一つも見つかりませんでした。");
+}
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/4688/pattern-ver1-serial/src.org.teachothers.fishwatchr.CommentList.java-merge.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:56:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
+if(!methodNameEquals){
+throw new IllegalStateException("マージ対象のファイルが一つも見つかりませんでした。");
+}
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/4688/pattern-ver1-serial/src.org.teachothers.fishwatchr.CommentList.java-merge.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:57:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
+if(!isUnverified){
+throw new IllegalStateException("マージ対象のファイルが一つも見つかりませんでした。");
+}
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/4688/pattern-ver1-serial/src.org.teachothers.fishwatchr.CommentList.java-merge.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:57:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
+if(!mockIsTheSame){
+throw new IllegalStateException("マージ対象のファイルが一つも見つかりませんでした。");
+}
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/4688/pattern-ver1-serial/src.org.teachothers.fishwatchr.CommentList.java-merge.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:57:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
+if(!methodEquals){
+throw new IllegalStateException("マージ対象のファイルが一つも見つかりませんでした。");
+}
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/4688/pattern-ver1-serial/src.org.teachothers.fishwatchr.CommentList.java-merge.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:57:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
+if(wantedMethodName.isEmpty()){
+wantedMethodName=null;
+}
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:57:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
+if(currentMethodName.isEmpty()){
+currentMethodName=null;
+}
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:58:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:58:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
- final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
+ final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate==null?null:candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2015/V31/4299/pattern-ver1-serial/client.synapseJavaClient.src.main.java.org.sagebionetworks.client.SynapseClientImpl.java-uploadToS3FileHandle.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:58:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
-if(!methodNameEquals||!isUnverified||!mockIsTheSame){
+if(!methodNameEquals||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2015/V38/703/pattern-ver1-serial/vipr-portal.portal.app.controllers.util.Models.java-canSelectTenantForVcenters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:58:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
- final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
+ final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate!=null?candidate.getArguments():null);
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V2/4302/pattern-ver1-serial/src.com.floreantpos.model.KitchenTicket.java-fromTicket.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:58:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:59:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
-if(!methodNameEquals||!isUnverified||!mockIsTheSame){
+if("Chrome".equals(!methodNameEquals)||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V17/4219/pattern-ver1-serial/src.browsermator.com.STAppController.java-itemStateChanged.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:59:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
+assert (candidate!=null):"Appointments day is not allowed to be null!";
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:59:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
+assert (wantedMethodName!=null):"Appointments day is not allowed to be null!";
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:59:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
+assert (currentMethodName!=null):"Appointments day is not allowed to be null!";
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 06:59:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
+}
+if(candidate==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:00:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
+if(candidate==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:00:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
+if(candidate==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:00:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
+if(wantedMethodName==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:00:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
+if(wantedMethodName==null){
+wantedMethodName="";
+}
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/755/pattern-ver1-serial/src.org.simiancage.bukkit.messagechangerlite.MessageChangerLite.java-getMessage.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:00:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
+if(currentMethodName==null){
+currentMethodName="";
+}
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/755/pattern-ver1-serial/src.org.simiancage.bukkit.messagechangerlite.MessageChangerLite.java-getMessage.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:01:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
+if(wantedMethodName.equals("")){
+wantedMethodName="Manchester United FC";
+}
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V11/4958/pattern-ver1-serial/FootballScores.app.src.main.java.barqsoft.footballscores.widget.ScoresWidgetIntentService.java-onHandleIntent.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:01:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
+if(currentMethodName.equals("")){
+currentMethodName="Manchester United FC";
+}
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V11/4958/pattern-ver1-serial/FootballScores.app.src.main.java.barqsoft.footballscores.widget.ScoresWidgetIntentService.java-onHandleIntent.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:01:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
+if(candidate.getClass().getSimpleName().startsWith("SystemException")){
+return true;
+}
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:01:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
+if(wantedMethodName.getClass().getSimpleName().startsWith("SystemException")){
+return true;
+}
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:01:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
+if(currentMethodName.getClass().getSimpleName().startsWith("SystemException")){
+return true;
+}
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:02:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
+if(wantedMethodName.equals("127.0.0.1")){
+wantedMethodName="114.113.202.141";
+}
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/5284/pattern-ver1-serial/src.netease.pomelo.chat.MainActivity.java-responseData.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:02:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
+if(currentMethodName.equals("127.0.0.1")){
+currentMethodName="114.113.202.141";
+}
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/5284/pattern-ver1-serial/src.netease.pomelo.chat.MainActivity.java-responseData.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:02:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
+currentMethodName=currentMethodName.replaceAll(";","; ");
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V67/5914/pattern-ver1-serial/app.src.main.java.rkr.directsmswidget.widgets.HomeWidget.java-updateAppWidget.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:02:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
+if(currentMethodName==null){
+throw new IllegalStateException("User isn't registered! "+candidate);
+}
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:02:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
-if(!methodNameEquals||!isUnverified||!mockIsTheSame){
+if(!methodNameEquals||!isUnverified||!mockIsTheSame||"查看红包".equals(!methodNameEquals||!isUnverified)){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:03:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
-if(!methodNameEquals||!isUnverified||!mockIsTheSame){
+if(!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2015/V32/3312/pattern-ver1-serial/WWIDesigner.src.main.com.wwidesigner.note.view.FingeringPatternPanel.java-getData.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:03:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
-if(!methodNameEquals||!isUnverified||!mockIsTheSame){
+if(!methodNameEquals||!isUnverified){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/933/pattern-ver1-serial/app.src.main.java.com.example.agrael.calculator.Utils.java-isOperator.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:03:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
-if(!methodNameEquals||!isUnverified||!mockIsTheSame){
+if(!!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2015/V16/5542/pattern-ver1-serial/RedZone.redzone.blocks.Pipe.java-onBlockPlaced.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:03:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
-if(!methodNameEquals||!isUnverified||!mockIsTheSame){
+if(true){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:03:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
-if(!methodNameEquals||!isUnverified||!mockIsTheSame){
+if(!methodNameEquals||!isUnverified||!mockIsTheSame&&isUnverified){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/2749/pattern-ver1-serial/Stuyablo.java-combat.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:04:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
-if(!methodNameEquals||!isUnverified||!mockIsTheSame){
+if(!methodNameEquals||!isUnverified||!mockIsTheSame&&methodNameEquals){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/2749/pattern-ver1-serial/Stuyablo.java-combat.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:04:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
-if(!methodNameEquals||!isUnverified||!mockIsTheSame){
+if(!methodNameEquals||!isUnverified||!mockIsTheSame&&mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/2749/pattern-ver1-serial/Stuyablo.java-combat.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:04:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
-if(!methodNameEquals||!isUnverified||!mockIsTheSame){
+if(!methodNameEquals||!isUnverified||!mockIsTheSame&&methodEquals){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/2749/pattern-ver1-serial/Stuyablo.java-combat.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:04:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
- final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
+ final boolean mockIsTheSame=(getInvocation().getMock())==(candidate.getMock());
  final boolean methodEquals=hasSameMethod(candidate);
-if(!methodNameEquals||!isUnverified||!mockIsTheSame){
+if((!methodNameEquals)||(!isUnverified)||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V17/5331/pattern-ver1-serial/src.main.java.groupProject.twentyFortyEight.GameLogic.java-gameOver.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:04:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
+if(wantedMethodName.startsWith("\r\n")){
+wantedMethodName=wantedMethodName.substring(2);
+}
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7437/pattern-ver1-serial/distributed.src.main.java.com.orientechnologies.orient.server.distributed.impl.task.OSyncDatabaseTask.java-onMessage.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:04:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
+if(currentMethodName.startsWith("\r\n")){
+currentMethodName=currentMethodName.substring(2);
+}
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7437/pattern-ver1-serial/distributed.src.main.java.com.orientechnologies.orient.server.distributed.impl.task.OSyncDatabaseTask.java-onMessage.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:05:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
+if(wantedMethodName.startsWith("/")){
+wantedMethodName=wantedMethodName.substring(1);
+}
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V47/2604/pattern-ver1-serial/components.data-services.org.wso2.carbon.dataservices.core.src.main.java.org.wso2.carbon.dataservices.core.DBDeployer.java-createAxisOperation.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:05:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
+if(currentMethodName.startsWith("/")){
+currentMethodName=currentMethodName.substring(1);
+}
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V47/2604/pattern-ver1-serial/components.data-services.org.wso2.carbon.dataservices.core.src.main.java.org.wso2.carbon.dataservices.core.DBDeployer.java-createAxisOperation.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:05:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
+if(wantedMethodName.startsWith("+")){
+wantedMethodName=wantedMethodName.substring(1);
+}
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/820/pattern-ver1-serial/src.com.iotracks.iofabric.utils.configuration.Configuration.java-setConfig.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:05:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
+if(currentMethodName.startsWith("+")){
+currentMethodName=currentMethodName.substring(1);
+}
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/820/pattern-ver1-serial/src.com.iotracks.iofabric.utils.configuration.Configuration.java-setConfig.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:05:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
-if(!methodNameEquals||!isUnverified||!mockIsTheSame){
+if(!!methodNameEquals||!isUnverified){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/5657/pattern-ver1-serial/services.src.main.java.org.devgateway.geoph.services.geojson.ConverterUtil.java-merge.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:06:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
-if(!methodNameEquals||!isUnverified||!mockIsTheSame){
+if((!methodNameEquals)||(!isUnverified)||!mockIsTheSame){
 return false;
 }
- final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
+ final boolean overloadedButSameArgs=(!methodEquals)&&(safelyArgumentsMatch(candidate.getArguments()));
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V17/5331/pattern-ver1-serial/src.main.java.groupProject.twentyFortyEight.GameLogic.java-gameOver.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:06:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
- final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
+ final boolean mockIsTheSame=(getInvocation().getMock())==(candidate.getMock());
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
- final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
+ final boolean overloadedButSameArgs=(!methodEquals)&&(safelyArgumentsMatch(candidate.getArguments()));
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V17/5331/pattern-ver1-serial/src.main.java.groupProject.twentyFortyEight.GameLogic.java-gameOver.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:06:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
+if(wantedMethodName==null||currentMethodName==null){
+throw new NullPointerException();
+}
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:06:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
+if(wantedMethodName.contains("phpreturn")){
+wantedMethodName=wantedMethodName.replace("php","php\n");
+}
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V39/2350/pattern-ver1-serial/src.main.java.ru.andyskvo.main.Main.java-main.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:06:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
+if(currentMethodName.contains("phpreturn")){
+currentMethodName=currentMethodName.replace("php","php\n");
+}
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V39/2350/pattern-ver1-serial/src.main.java.ru.andyskvo.main.Main.java-main.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:07:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
+if(wantedMethodName.contains("#")){
+wantedMethodName=wantedMethodName.split("#")[0];
+}
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/3981/pattern-ver1-serial/hdiv-core.src.main.java.org.hdiv.filter.ValidatorHelperRequest.java-restoreState.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:07:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
+if(currentMethodName.contains("#")){
+currentMethodName=currentMethodName.split("#")[0];
+}
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/3981/pattern-ver1-serial/hdiv-core.src.main.java.org.hdiv.filter.ValidatorHelperRequest.java-restoreState.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:07:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
+boolean haveBreadCrumbs=false;
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
-if(!methodNameEquals||!isUnverified||!mockIsTheSame){
+if(!methodNameEquals||!isUnverified||!mockIsTheSame&&haveBreadCrumbs){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 8, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:07:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
- final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
+ final boolean mockIsTheSame=(getInvocation().getMock())==(candidate.getMock());
  final boolean methodEquals=hasSameMethod(candidate);
-if(!methodNameEquals||!isUnverified||!mockIsTheSame){
+if((!methodNameEquals||!isUnverified)||(!mockIsTheSame)){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V17/5331/pattern-ver1-serial/src.main.java.groupProject.twentyFortyEight.GameLogic.java-gameOver.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 11, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:07:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
+if(wantedMethodName!=null){
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
+}
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
-if(!methodNameEquals||!isUnverified||!mockIsTheSame){
-return false;
-}
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/258/pattern-ver1-serial/web.src.main.java.com.epam.freelancer.web.controller.UserController.java-addIsComplaintInOrderings.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 3, INS : 0, DEL : 9
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:08:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
+if(candidate.getMethod()!=null){
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
+}
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
-if(!methodNameEquals||!isUnverified||!mockIsTheSame){
-return false;
-}
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/258/pattern-ver1-serial/web.src.main.java.com.epam.freelancer.web.controller.UserController.java-addIsComplaintInOrderings.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 3, INS : 0, DEL : 9
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:08:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
+if(candidate!=null){
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
+}
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
-if(!methodNameEquals||!isUnverified||!mockIsTheSame){
-return false;
-}
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V52/2797/pattern-ver1-serial/wikibrain-sr.src.main.java.org.wikibrain.sr.ensemble.Interpolator.java-trainSimilarity.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 3, INS : 0, DEL : 9
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:08:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
-if(!methodNameEquals||!isUnverified||!mockIsTheSame){
+if((!methodNameEquals||!isUnverified)||(!mockIsTheSame)){
 return false;
 }
- final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
+ final boolean overloadedButSameArgs=(!methodEquals)&&(safelyArgumentsMatch(candidate.getArguments()));
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V17/5331/pattern-ver1-serial/src.main.java.groupProject.twentyFortyEight.GameLogic.java-gameOver.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 12, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:08:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
+long startTime=System.currentTimeMillis();
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:08:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
+if(wantedMethodName.substring(11,19).equals("00:00:00")){
+wantedMethodName=wantedMethodName.substring(0,11)+"23:59:59"+wantedMethodName.substring(19);
+}
 String currentMethodName=candidate.getMethod().getName();
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2015/V27/2005/pattern-ver1-serial/dspace-oai.src.main.java.org.dspace.xoai.filter.DateUntilFilter.java-buildSolrQuery.pattern
MATCHLEVEL : ALL
ALL : 18, UPD : 0, INS : 18, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:09:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/invocation/InvocationMatcher.java[70,90]
------------Candidate---------------
 public boolean hasSimilarMethod(Invocation candidate){
 String wantedMethodName=getMethod().getName();
 String currentMethodName=candidate.getMethod().getName();
+if(currentMethodName.substring(11,19).equals("00:00:00")){
+currentMethodName=currentMethodName.substring(0,11)+"23:59:59"+currentMethodName.substring(19);
+}
  final boolean methodNameEquals=wantedMethodName.equals(currentMethodName);
  final boolean isUnverified=!candidate.isVerified();
  final boolean mockIsTheSame=getInvocation().getMock()==candidate.getMock();
  final boolean methodEquals=hasSameMethod(candidate);
 if(!methodNameEquals||!isUnverified||!mockIsTheSame){
 return false;
 }
  final boolean overloadedButSameArgs=!methodEquals&&safelyArgumentsMatch(candidate.getArguments());
 return !overloadedButSameArgs;
 }

PATTERN : /home/jiajun/GithubData/2015/V27/2005/pattern-ver1-serial/dspace-oai.src.main.java.org.dspace.xoai.filter.DateUntilFilter.java-buildSolrQuery.pattern
MATCHLEVEL : ALL
ALL : 18, UPD : 0, INS : 18, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:09:23 CDT
--------------- END -----------------
Location : org.mockito.internal.verification.checkers.MissingInvocationChecker.check:[36, 37, 34, 35, 31, 33]#0.5
Compute Candidate : 2019.09.05 AD at 07:10:05 CDT - 2019.09.05 AD at 07:46:03 CDT , PNumber : 11440, CandNumber : 375 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
+return ;
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:46:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
+return ;
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:46:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:46:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
+return ;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:46:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
+return ;
 }
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/144/pattern-ver1-serial/lettuce.src.main.java.com.lambdaworks.redis.Connections.java-close.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:46:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
+return ;
 }
 }
+return ;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/144/pattern-ver1-serial/lettuce.src.main.java.com.lambdaworks.redis.Connections.java-close.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:47:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
-ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+ ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:47:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
-Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
+ Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:47:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
-Invocation similar=finder.findSimilarInvocation(invocations,wanted);
+ Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:47:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
-List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
+ List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:47:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
-if(similar!=null){
+if(similar==null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V40/1240/pattern-ver1-serial/flexo-foundation.src.main.java.org.openflexo.foundation.viewpoint.FlexoConceptInstanceRole.java-applyValidation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:48:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
-if(similar!=null){
+if(invocations!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V9/1150/pattern-ver1-serial/src.main.java.de.nedelosk.modularmachines.client.gui.GuiAssembler.java-onUpdate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:48:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
-if(similar!=null){
+if(wanted!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V9/1150/pattern-ver1-serial/src.main.java.de.nedelosk.modularmachines.client.gui.GuiAssembler.java-onUpdate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:48:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
+reporter.wantedButNotInvoked(wanted,invocations);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V29/3884/pattern-ver1-serial/TcpChat.src.client.gui.ClientGuiThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:48:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
-Invocation similar=finder.findSimilarInvocation(invocations,wanted);
+ final Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
-ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+ final ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:48:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
-List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
+ final List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
-ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+ final ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:48:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
-ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+ final ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
-SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
+ final SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:49:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
-ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
-Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
+ final ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+ final Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:49:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
-Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
-SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
+ final Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
+ final SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:49:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
-Invocation similar=finder.findSimilarInvocation(invocations,wanted);
+ final Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
-Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
+ final Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:49:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
-Invocation similar=finder.findSimilarInvocation(invocations,wanted);
+ final Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
-SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
+ final SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5265/pattern-ver1-serial/src.main.java.org.lemming.modules.StoreLoader.java-addMetadata.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:49:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
-List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
+ final List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
-SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
+ final SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5265/pattern-ver1-serial/src.main.java.org.lemming.modules.StoreLoader.java-addMetadata.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:50:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
-List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
+ List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
-ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+ ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:50:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
-Invocation similar=finder.findSimilarInvocation(invocations,wanted);
+ Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
-ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+ ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:50:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
-ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
-Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
+ ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+ Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:50:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
-ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+ ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
-SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
+ SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:50:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
-Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
-SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
+ Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
+ SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:51:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
-Invocation similar=finder.findSimilarInvocation(invocations,wanted);
+ Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
-SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
+ SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:51:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
-List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
+ List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
-SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
+ SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:51:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
-List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
+ final List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
-Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
+ final Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V22/6331/pattern-ver1-serial/src.java.growthcraft.api.fishtrap.FishTrapEntry.java-getFishable.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:51:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
-if(actualInvocations.isEmpty()){
+if(!actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V12/6908/pattern-ver1-serial/mainModule.src.backend.building.ProductionBuilding.java-canBuild.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:51:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
-Invocation similar=finder.findSimilarInvocation(invocations,wanted);
+Invocation similar=this.finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V18/4298/pattern-ver1-serial/src.main.java.org.spongepowered.api.service.command.SimpleCommandService.java-getHelp.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:52:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
-List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
+List<Invocation> actualInvocations=this.finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V18/4298/pattern-ver1-serial/src.main.java.org.spongepowered.api.service.command.SimpleCommandService.java-getHelp.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:52:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
+if(invocations.isEmpty()){
+return ;
+}
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/3286/pattern-ver1-serial/DatabaseMSCore.src.DatabaseMSCore.dbTypeInteger.java-canBeInitializedWith.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:52:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
+if(invocations.isEmpty()){
+return ;
+}
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/3286/pattern-ver1-serial/DatabaseMSCore.src.DatabaseMSCore.dbTypeInteger.java-canBeInitializedWith.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:52:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
+if(invocations.isEmpty()){
+return ;
+}
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/3286/pattern-ver1-serial/DatabaseMSCore.src.DatabaseMSCore.dbTypeInteger.java-canBeInitializedWith.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:52:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
+if(actualInvocations.isEmpty()){
+return ;
+}
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V35/2729/pattern-ver1-serial/davinci.src.main.java.cn.hadcn.davinci.image.DiskLruImageCache.java-getBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:53:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
-if(actualInvocations.isEmpty()){
+if(true){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:53:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
+actualInvocations.clear();
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V41/6396/pattern-ver1-serial/core.src.com.FOS.Pixel.screens.GameScreen.java-checkCollectedOrbs.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:53:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
+synchronized(reporter){
 reporter.wantedButNotInvoked(wanted,invocations);
+}
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V17/90/pattern-ver1-serial/PolibudaRun.src.HorizontalMove.java-down.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:53:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
+synchronized(reporter){
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
+}
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V17/90/pattern-ver1-serial/PolibudaRun.src.HorizontalMove.java-down.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:53:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
+invocations.clear();
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/5987/pattern-ver1-serial/src.org.kjg.garderobe.ShiftDetailNumbersFragment.java-onCreateOptionsMenu.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:54:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
+invocations.clear();
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/5987/pattern-ver1-serial/src.org.kjg.garderobe.ShiftDetailNumbersFragment.java-onCreateOptionsMenu.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:54:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
+invocations.clear();
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/5987/pattern-ver1-serial/src.org.kjg.garderobe.ShiftDetailNumbersFragment.java-onCreateOptionsMenu.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:54:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
+invocations.clear();
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5052/pattern-ver1-serial/proxy.src.main.java.com.xqbase.tuna.proxy.ProxyServer.java-returnClient.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:54:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
+invocations.clear();
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5052/pattern-ver1-serial/proxy.src.main.java.com.xqbase.tuna.proxy.ProxyServer.java-returnClient.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:54:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
+invocations.clear();
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5052/pattern-ver1-serial/proxy.src.main.java.com.xqbase.tuna.proxy.ProxyServer.java-returnClient.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:55:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+invocations.clear();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/400/pattern-ver1-serial/plan-comp.src.main.java.com.tissue.plan.web.spring.controllers.PlanController.java-joinPlan.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:55:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
+synchronized(this){
 reporter.wantedButNotInvoked(wanted,invocations);
+}
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:55:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
+synchronized(this){
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
+}
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:55:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+if(equals(argumentMatchingTool)){
+return ;
+}
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:55:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+if(equals(wanted)){
+return ;
+}
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:56:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
+if(equals(wanted)){
+return ;
+}
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:56:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
+if(equals(wanted)){
+return ;
+}
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:56:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
+if(equals(invocations)){
+return ;
+}
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:56:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
-if(actualInvocations.isEmpty()){
+if(actualInvocations.equals("")){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V25/252/pattern-ver1-serial/app.src.main.java.com.example.sgm.japgolfapp.settings.ViewPartyPlayFragment.java-onPostExecute.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 1, INS : 1, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:56:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
+while(true){
+
+}
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:57:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
+}
+while(true){
+
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:57:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
+}
 }
+while(true){
+
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:57:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
+while(true){
+
+}
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:57:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
+invocations.clear();
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7642/pattern-ver1-serial/src.net.thecobix.openwsk.arena.WaterRemoveSystem.java-collectBlocks.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:57:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
+synchronized(this){
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
+}
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:57:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
+synchronized(this){
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
+}
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:58:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
+}
+if(invocations.isEmpty()){
+return ;
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/6812/pattern-ver1-serial/src.main.java.wslf.homemoviebase.logic.Worker.java-parseTags.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:58:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+if(argumentMatchingTool==null){
+return ;
+}
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:58:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+if(wanted==null){
+return ;
+}
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:58:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
+if(invocations==null){
+return ;
+}
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:58:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
+if(wanted==null){
+return ;
+}
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:59:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
+if(invocations==null){
+return ;
+}
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:59:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
+if(wanted==null){
+return ;
+}
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:59:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
+if(invocations==null){
+return ;
+}
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:59:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
+if(wanted==null){
+return ;
+}
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 07:59:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
+if(invocations==null){
+return ;
+}
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:00:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
+if(wanted==null){
+return ;
+}
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:00:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
+if(wanted==null){
+return ;
+}
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:00:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
+if(invocations==null){
+return ;
+}
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:00:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
+if(wanted==null){
+return ;
+}
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:00:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
+if(invocations==null){
+return ;
+}
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:00:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
+if(wanted==null){
+return ;
+}
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:01:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
+if(indexesOfSuspiciousArgs==null){
+return ;
+}
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/2822/pattern-ver1-serial/grib.src.main.java.ucar.nc2.grib.grib1.tables.NcepHtmlScraper.java-parseTable2.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:01:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
+if(similar==null){
+return ;
+}
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/2822/pattern-ver1-serial/grib.src.main.java.ucar.nc2.grib.grib1.tables.NcepHtmlScraper.java-parseTable2.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:01:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
+if(actualInvocations==null){
+return ;
+}
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/2822/pattern-ver1-serial/grib.src.main.java.ucar.nc2.grib.grib1.tables.NcepHtmlScraper.java-parseTable2.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:01:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
+if(smartPrinter==null){
+return ;
+}
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/2822/pattern-ver1-serial/grib.src.main.java.ucar.nc2.grib.grib1.tables.NcepHtmlScraper.java-parseTable2.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:01:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
+if(reporter!=null){
 reporter.wantedButNotInvoked(wanted,invocations);
+}
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V8/6555/pattern-ver1-serial/app.src.main.java.com.example.uaharoni.tourdeplace.view.MapFragment.java-addPlaceMarker.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:02:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
+if(reporter!=null){
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
+}
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V8/6555/pattern-ver1-serial/app.src.main.java.com.example.uaharoni.tourdeplace.view.MapFragment.java-addPlaceMarker.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:02:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+if(similar==null){
+return ;
+}
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:02:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
+if(finder==null){
+return ;
+}
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:02:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
+if(argumentMatchingTool==new ArgumentMatchingTool()){
+return ;
+}
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:02:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
+}
+if(similar==finder.findSimilarInvocation(invocations,wanted)){
+return ;
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:03:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
+if(argumentMatchingTool==new ArgumentMatchingTool()){
+return ;
+}
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:03:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
+if(smartPrinter==new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs)){
+return ;
+}
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:03:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
+if(similar==null){
+return ;
+}
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:03:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
-if(similar!=null){
+if(similar.equals(null)){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/343/pattern-ver1-serial/src.gui.batches.ItemBatchView.java-selectProduct.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:03:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
+if(wanted==null){
+return ;
+}
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V45/2972/pattern-ver1-serial/app.src.main.java.com.nealyi.app.activity.UserProfileActivity.java-onActivityResult.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:03:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+if("index".equals(argumentMatchingTool)){
+return ;
+}
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:04:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
+if("index".equals(invocations)){
+return ;
+}
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:04:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
+if("index".equals(wanted)){
+return ;
+}
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:04:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
+if("index".equals(wanted)){
+return ;
+}
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:04:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
+if("index".equals(invocations)){
+return ;
+}
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:04:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
+if("index".equals(wanted)){
+return ;
+}
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:05:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
+if("index".equals(invocations)){
+return ;
+}
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:05:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
+if("index".equals(wanted)){
+return ;
+}
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:05:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
+if(reporter==null){
+return ;
+}
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V22/4743/pattern-ver1-serial/app.src.main.java.com.wafflestudio.shafe.MapManager.java-initializeMapWithSavedValue.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:05:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+if(argumentMatchingTool.equals("TIME")){
+return ;
+}
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:05:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
+if(wanted.equals("TIME")){
+return ;
+}
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:06:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
+if(invocations.equals("TIME")){
+return ;
+}
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:06:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
+if(wanted.equals("TIME")){
+return ;
+}
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:06:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
+if(invocations.equals("TIME")){
+return ;
+}
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:06:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
+if(wanted.equals("TIME")){
+return ;
+}
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:06:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
+if(invocations.equals("TIME")){
+return ;
+}
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:07:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
+if(wanted.equals("TIME")){
+return ;
+}
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:07:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+if("&null".equals(argumentMatchingTool)){
+return ;
+}
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:07:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+if("&null".equals(wanted)){
+return ;
+}
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:07:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
+if("&null".equals(invocations)){
+return ;
+}
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:07:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
+if("&null".equals(wanted)){
+return ;
+}
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:08:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
+if("&null".equals(invocations)){
+return ;
+}
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:08:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
+if("&null".equals(wanted)){
+return ;
+}
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:08:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
+if("&null".equals(invocations)){
+return ;
+}
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:08:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
+if("&null".equals(wanted)){
+return ;
+}
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:08:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+if(argumentMatchingTool.equals("DATETIME")){
+return ;
+}
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:08:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+if(wanted.equals("DATETIME")){
+return ;
+}
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:09:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
+if(invocations.equals("DATETIME")){
+return ;
+}
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:09:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
+if(wanted.equals("DATETIME")){
+return ;
+}
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:09:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
+if(invocations.equals("DATETIME")){
+return ;
+}
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:09:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
+if(wanted.equals("DATETIME")){
+return ;
+}
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:09:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
+if(invocations.equals("DATETIME")){
+return ;
+}
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:10:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
+if(wanted.equals("DATETIME")){
+return ;
+}
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:10:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
+if(reporter==null){
+return ;
+}
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2437/pattern-ver1-serial/app.src.main.java.org.gdg.frisbee.android.onboarding.FirstStartStep1Fragment.java-addChapters.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:10:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
-List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
+ final List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
-Invocation similar=finder.findSimilarInvocation(invocations,wanted);
+ final Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
-ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+ final ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3285/pattern-ver1-serial/project.core.src.se.computerscience.kelde.model.entities.EntityBat.java-getHeading.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:10:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
-List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
+ @SuppressWarnings("UnusedAssignment") List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
-Invocation similar=finder.findSimilarInvocation(invocations,wanted);
+ @SuppressWarnings("UnusedAssignment") Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
-ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+ @SuppressWarnings("UnusedAssignment") ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:10:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
-List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
+ @SuppressWarnings("UnusedAssignment") List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
-ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+ @SuppressWarnings("UnusedAssignment") ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
-SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
+ @SuppressWarnings("UnusedAssignment") SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:11:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
-Invocation similar=finder.findSimilarInvocation(invocations,wanted);
+ @SuppressWarnings("UnusedAssignment") Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
-ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+ @SuppressWarnings("UnusedAssignment") ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
-SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
+ @SuppressWarnings("UnusedAssignment") SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:11:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+argumentMatchingTool=argumentMatchingTool;
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:11:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
+wanted=wanted;
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:11:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+if(argumentMatchingTool.equals("")){
+return ;
+}
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V28/6228/pattern-ver1-serial/src.engine.QueryEngine.java-slice.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:11:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
+if(indexesOfSuspiciousArgs.equals("")){
+return ;
+}
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V28/6228/pattern-ver1-serial/src.engine.QueryEngine.java-slice.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:12:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
+if(similar.equals("")){
+return ;
+}
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V28/6228/pattern-ver1-serial/src.engine.QueryEngine.java-slice.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:12:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
+if(smartPrinter.equals("")){
+return ;
+}
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V28/6228/pattern-ver1-serial/src.engine.QueryEngine.java-slice.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:12:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
+if(actualInvocations.equals("")){
+return ;
+}
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V28/6228/pattern-ver1-serial/src.engine.QueryEngine.java-slice.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:12:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
+if(actualInvocations!=null){
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
+}
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/4672/pattern-ver1-serial/main.src.main.java.com.example.wduello.collectionmanager.ItemListFragment.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:13:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
-if(similar!=null){
+if(true){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:13:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
+import java.util.Map.Entry;
+
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
+if(!invocations.isEmpty()){
 reporter.wantedButNotInvoked(wanted,invocations);
+}
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V17/735/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.placement.FileStorageScheduler.java-getRecommendedVirtualNASBasedOnCandidatePools.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:13:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
+if(invocations!=null){
 reporter.wantedButNotInvoked(wanted,invocations);
+}
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/6062/pattern-ver1-serial/src.main.java.org.openarchives.resourcesync.ResourceSyncDescription.java-addCapabilityList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:13:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
-if(actualInvocations.isEmpty()){
+if(actualInvocations.isEmpty()==false){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3764/pattern-ver1-serial/uDig.org.locationtech.udig.processingtoolbox.src.org.locationtech.udig.processingtoolbox.tools.TextfileToPointDialog.java-getTextColumns.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:13:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
+if(finder!=null){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
+}
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V19/258/pattern-ver1-serial/web.src.main.java.com.epam.freelancer.web.controller.UserController.java-addIsComplaintInOrderings.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:14:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+if(argumentMatchingTool.equals("-1")){
+return ;
+}
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:14:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
+if(indexesOfSuspiciousArgs.equals("-1")){
+return ;
+}
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:14:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
+if(similar.equals("-1")){
+return ;
+}
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:14:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
+if(actualInvocations.equals("-1")){
+return ;
+}
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:14:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
+if(smartPrinter.equals("-1")){
+return ;
+}
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:15:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
+if(wanted!=null){
 reporter.wantedButNotInvoked(wanted,invocations);
+}
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V43/991/pattern-ver1-serial/CEO.src.cs2103.CommandParser.java-separateParameters.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:15:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
+if(invocations.contains("deviantart.com")){
+return ;
+}
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/4166/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.ContentType.java-getImageType.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:15:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
+}
+if(invocations.contains("deviantart.com")){
+return ;
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/4166/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.ContentType.java-getImageType.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:15:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
+}
 }
+if(invocations.contains("deviantart.com")){
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/4166/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.ContentType.java-getImageType.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:15:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
+int a=0;
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:16:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
+int a=0;
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:16:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
+int a=0;
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:16:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
+int a=0;
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:16:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+if(wanted.equals(argumentMatchingTool)){
+return ;
+}
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:16:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+if(argumentMatchingTool.equals(wanted)){
+return ;
+}
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:17:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
+if(smartPrinter.equals(argumentMatchingTool)){
+return ;
+}
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:17:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
+if(argumentMatchingTool.equals(smartPrinter)){
+return ;
+}
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:17:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
+if(indexesOfSuspiciousArgs.equals(argumentMatchingTool)){
+return ;
+}
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:17:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+if(similar.equals(argumentMatchingTool)){
+return ;
+}
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:17:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
+if(argumentMatchingTool.equals(indexesOfSuspiciousArgs)){
+return ;
+}
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:18:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+if(argumentMatchingTool.equals(similar)){
+return ;
+}
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:18:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
+if(indexesOfSuspiciousArgs.equals(wanted)){
+return ;
+}
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:18:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
+if(wanted.equals(indexesOfSuspiciousArgs)){
+return ;
+}
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:18:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
+String OUTSTRING="";
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:18:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
+String OUTSTRING="";
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:19:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
+String OUTSTRING="";
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:19:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
+String OUTSTRING="";
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:19:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+if(invocations.equals(InputStream.class)){
+return ;
+}
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:19:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+if(argumentMatchingTool.equals(InputStream.class)){
+return ;
+}
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:19:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
+if(argumentMatchingTool.equals(InputStream.class)){
+return ;
+}
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:19:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
+if(argumentMatchingTool.equals(InputStream.class)){
+return ;
+}
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:20:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
+if(invocations.equals(InputStream.class)){
+return ;
+}
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:20:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
+if(wanted.equals(InputStream.class)){
+return ;
+}
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:20:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
+if(invocations.equals(InputStream.class)){
+return ;
+}
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:20:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
-if(actualInvocations.isEmpty()){
+if(actualInvocations.isEmpty()==true){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1922/pattern-ver1-serial/app.src.main.java.ch.hsr.edu.sinv_56082.gastroginiapp.ui.activities.menu.ProductListListEditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:20:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:21:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:21:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:21:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:21:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
+int indexSelection=0;
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:21:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
+int indexSelection=0;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:22:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
+int indexSelection=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:22:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
+int indexSelection=0;
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:22:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
+if(argumentMatchingTool.equals("setPackMode")){
+return ;
+}
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/2611/pattern-ver1-serial/app.src.main.java.com.example.kristian.ideacreator.IdeasContentProvider.java-call.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:22:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
+if(wanted.equals("setPackMode")){
+return ;
+}
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/2611/pattern-ver1-serial/app.src.main.java.com.example.kristian.ideacreator.IdeasContentProvider.java-call.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:22:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
+if(argumentMatchingTool.equals("setPackMode")){
+return ;
+}
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/2611/pattern-ver1-serial/app.src.main.java.com.example.kristian.ideacreator.IdeasContentProvider.java-call.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:22:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+if(argumentMatchingTool.equals("setPackMode")){
+return ;
+}
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/2611/pattern-ver1-serial/app.src.main.java.com.example.kristian.ideacreator.IdeasContentProvider.java-call.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:23:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
+if(wanted.equals("setPackMode")){
+return ;
+}
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/2611/pattern-ver1-serial/app.src.main.java.com.example.kristian.ideacreator.IdeasContentProvider.java-call.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+if(wanted.equals("setPackMode")){
+return ;
+}
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/2611/pattern-ver1-serial/app.src.main.java.com.example.kristian.ideacreator.IdeasContentProvider.java-call.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:23:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
+int a=1;
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:23:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
+int a=1;
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:24:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
+int a=1;
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:24:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
+int a=1;
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:24:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
+if(reporter!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
+}
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V2/5497/pattern-ver1-serial/app.src.main.java.hm.orz.chaos114.android.tumekyouen.TitleActivity.java-afterViews.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:24:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+if(reporter!=null){
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
+}
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V2/5497/pattern-ver1-serial/app.src.main.java.hm.orz.chaos114.android.tumekyouen.TitleActivity.java-afterViews.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:24:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
+boolean b=true;
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:25:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
+boolean b=true;
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:25:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
+boolean b=true;
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:25:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
+boolean b=true;
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:25:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+if((Thread.currentThread().interrupted())){
+return ;
+}
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:25:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
+if((Thread.currentThread().interrupted())){
+return ;
+}
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:26:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
+if((Thread.currentThread().interrupted())){
+return ;
+}
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:26:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
+if((Thread.currentThread().interrupted())){
+return ;
+}
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:26:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
+if(!(actualInvocations==null)){
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
+}
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V20/5193/pattern-ver1-serial/IJC_UI.src.nl.detoren.ijc.ui.view.Hoofdscherm.java-updateUpdateStandButton.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:26:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
+ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
-ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2803/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.index.hashindex.local.OHashTableDirectory.java-deleteWithoutOpen.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:26:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
+ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
-ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2803/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.index.hashindex.local.OHashTableDirectory.java-deleteWithoutOpen.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:27:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+assert (argumentMatchingTool!=null);
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:27:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
+assert (wanted!=null);
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:27:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
+assert (invocations!=null);
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:27:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
+assert (wanted!=null);
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:27:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
+assert (invocations!=null);
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:28:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
+assert (wanted!=null);
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:28:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
+assert (invocations!=null);
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:28:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
+assert (wanted!=null);
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:28:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
+assert (!invocations.isEmpty());
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:28:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
+assert (!invocations.isEmpty());
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:29:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
+assert (!invocations.isEmpty());
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:29:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
+if(wanted!=null){
+ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
+SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
+reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
+}
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:29:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
+if(wanted!=null){
+Invocation similar=finder.findSimilarInvocation(invocations,wanted);
+if(similar!=null){
+ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
+SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
+reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
+}else {
+reporter.wantedButNotInvoked(wanted,invocations);
+}
+}
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:29:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
+if(wanted!=null){
+List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
+if(actualInvocations.isEmpty()){
+Invocation similar=finder.findSimilarInvocation(invocations,wanted);
+if(similar!=null){
+ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
+SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
+reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
+}else {
+reporter.wantedButNotInvoked(wanted,invocations);
+}
+}
+}
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:29:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
+if(similar!=null){
 if(similar!=null){
+ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
+SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
+reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
+}
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:30:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+assert (argumentMatchingTool!=new ArgumentMatchingTool());
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:30:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
+assert (indexesOfSuspiciousArgs!=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments()));
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:30:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
+assert (similar!=finder.findSimilarInvocation(invocations,wanted));
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:30:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
+assert (smartPrinter!=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs));
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:30:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
+assert (actualInvocations!=finder.findInvocations(invocations,wanted));
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:31:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
+assert (similar!=null);
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V33/4564/pattern-ver1-serial/app.src.main.java.com.squirrel.justrread.api.RedditAPI.java-checkIfSubscribed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:31:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
+ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 }

PATTERN : /home/jiajun/GithubData/2011/V5/1113/pattern-ver1-serial/src.main.java.org.encog.neural.neat.training.NEATTraining.java-crossover.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:31:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+if(argumentMatchingTool.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:31:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
+if(wanted.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:31:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
+if(invocations.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:32:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
+if(wanted.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:32:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
+if(invocations.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:32:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
+if(wanted.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:32:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
+if(invocations.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:32:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
+if(wanted.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:33:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
+if(invocations.isEmpty()){
+System.out.println("Team has to have a name");
+return ;
+}
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:33:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
+assert (invocations!=null);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:33:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
+assert (wanted!=null);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:33:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+assert (wanted!=null);
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:33:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
+assert (invocations!=null);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:33:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
+assert (wanted!=null);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:34:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
+assert (invocations!=null);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:34:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
+assert (wanted!=null);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:34:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+if(argumentMatchingTool.equals("655")){
+System.out.println();
+}
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:34:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
+if(similar.equals("655")){
+System.out.println();
+}
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:34:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
+if(indexesOfSuspiciousArgs.equals("655")){
+System.out.println();
+}
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:35:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
-if(similar!=null){
+if(similar!=null||"查看红包".equals(similar)){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:35:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
-if(actualInvocations.isEmpty()){
+if(actualInvocations!=null&&actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5865/pattern-ver1-serial/gde-webapp.src.main.java.com.nagarro.gde.validator.UserInternaturValidator.java-validateRequiredData.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:35:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
+reporter.wantedButNotInvoked(wanted,invocations);
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:35:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
+reporter.wantedButNotInvoked(wanted,invocations);
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:35:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+reporter.wantedButNotInvoked(wanted,invocations);
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V22/5555/pattern-ver1-serial/src.main.java.TeamRoots.Goetia.client.gui.GuiFocus.java-mouseReleased.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:36:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
+if(invocations.isEmpty()){
+invocations=null;
+}
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:36:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
+if(invocations.isEmpty()){
+invocations=null;
+}
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:36:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
+if(invocations.isEmpty()){
+invocations=null;
+}
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:36:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
+reporter.wantedButNotInvoked(wanted,invocations);
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V27/2451/pattern-ver1-serial/ShopNow.src.shopnow.Customer_Account.java-get_phone_number.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:36:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
+reporter.wantedButNotInvoked(wanted,invocations);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
-reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V20/6349/pattern-ver1-serial/src.com.example.smartphone.SelectECActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:37:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
+reporter.wantedButNotInvoked(wanted,invocations);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
-reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V20/6349/pattern-ver1-serial/src.com.example.smartphone.SelectECActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:37:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
+reporter.wantedButNotInvoked(wanted,invocations);
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
-reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V2/3128/pattern-ver1-serial/src.cubicmadness.gamestates.GameStateManager.java-popCurrentState.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:37:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
+reporter.wantedButNotInvoked(wanted,invocations);
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
-reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V2/3128/pattern-ver1-serial/src.cubicmadness.gamestates.GameStateManager.java-popCurrentState.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:37:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
+reporter.wantedButNotInvoked(wanted,invocations);
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1266/pattern-ver1-serial/catroid.src.org.catrobat.catroid.livewallpaper.LiveWallpaper.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:37:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
+reporter.wantedButNotInvoked(wanted,invocations);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6301/pattern-ver1-serial/app.src.main.java.client.example.sj.pulltoscaleheaderlayout.PullToScaleHeaderLayout.java-computeScroll.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:38:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
-if(actualInvocations.isEmpty()){
+if((actualInvocations!=null)&&(actualInvocations.isEmpty())){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/4845/pattern-ver1-serial/app.src.main.java.hu.bme.aut.szabolcs.szokol.countryinfo.ui.main.MainActivity.java-onBackPressed.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:38:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
+import java.io.File;
+
+import java.util.HashSet;
+
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
+reporter.wantedButNotInvoked(wanted,invocations);
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/3878/pattern-ver1-serial/syssvc.src.main.java.com.emc.storageos.systemservices.impl.jobs.backupscheduler.UploadExecutor.java-doUpload.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:38:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
+reporter.wantedButNotInvoked(wanted,invocations);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/4025/pattern-ver1-serial/AZoCamSyncDesktop.src.de.quadrillenschule.azocamsyncd.gui.SwingBackgroundUpdater.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:38:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+if(argumentMatchingTool.getClass().getSimpleName().startsWith("SystemException")){
+return ;
+}
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:38:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
+if(wanted.getClass().getSimpleName().startsWith("SystemException")){
+return ;
+}
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:39:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
+if(invocations.getClass().getSimpleName().startsWith("SystemException")){
+return ;
+}
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:39:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
+if(wanted.getClass().getSimpleName().startsWith("SystemException")){
+return ;
+}
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:39:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
+}
+if(invocations.getClass().getSimpleName().startsWith("SystemException")){
+return ;
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:39:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
+}
+if(wanted.getClass().getSimpleName().startsWith("SystemException")){
+return ;
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:39:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
+}
 }
+if(invocations.getClass().getSimpleName().startsWith("SystemException")){
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:40:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
+}
 }
+if(wanted.getClass().getSimpleName().startsWith("SystemException")){
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:40:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
+reporter.wantedButNotInvoked(wanted,invocations);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
-reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/3822/pattern-ver1-serial/app.src.main.java.com.peprally.jeremy.peprally.activities.ProfileActivity.java-SetupNewUserProfile.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:40:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
+reporter.wantedButNotInvoked(wanted,invocations);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/3822/pattern-ver1-serial/app.src.main.java.com.peprally.jeremy.peprally.activities.ProfileActivity.java-SetupNewUserProfile.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:40:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:40:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:41:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:41:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:41:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+reporter.wantedButNotInvoked(wanted,invocations);
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
-reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V39/1103/pattern-ver1-serial/Graphs.src.com.jmga.graphs.classes.GView.java-update.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:41:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
-if(similar!=null){
+if(similar!=null||similar==null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/4704/pattern-ver1-serial/src.main.java.com.alibaba.fastjson.parser.ParserConfig.java-createJavaBeanDeserializer.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:41:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
-if(actualInvocations.isEmpty()){
+if(actualInvocations==null||actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/443/pattern-ver1-serial/bundles.opaeum-compilation.org.opaeum.compilation.java.src.org.opaeum.javageneration.bpm.actions.AbstractProtectedNodeBuilder.java-implementCallbackOnComplete.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:42:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:42:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:42:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:42:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:42:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+assert (argumentMatchingTool!=null):"Appointments day is not allowed to be null!";
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:43:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
+assert (invocations!=null):"Appointments day is not allowed to be null!";
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:43:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
+assert (wanted!=null):"Appointments day is not allowed to be null!";
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:43:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
+assert (wanted!=null):"Appointments day is not allowed to be null!";
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:43:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
+assert (invocations!=null):"Appointments day is not allowed to be null!";
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:43:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
+assert (wanted!=null):"Appointments day is not allowed to be null!";
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:44:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
+assert (invocations!=null):"Appointments day is not allowed to be null!";
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:44:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
+assert (wanted!=null):"Appointments day is not allowed to be null!";
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:44:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
+import java.util.Collections;
+
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
+Collections.sort(invocations,Collections.reverseOrder());
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V40/4441/pattern-ver1-serial/recruiting-core.src.main.java.it.f2informatica.core.model.builder.ConsultantModelBuilder.java-withExperiencesIn.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:44:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
+import java.util.Collections;
+
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
+Collections.sort(invocations,Collections.reverseOrder());
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V40/4441/pattern-ver1-serial/recruiting-core.src.main.java.it.f2informatica.core.model.builder.ConsultantModelBuilder.java-withExperiencesIn.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:44:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
+import java.util.Collections;
+
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
+Collections.sort(invocations,Collections.reverseOrder());
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V40/4441/pattern-ver1-serial/recruiting-core.src.main.java.it.f2informatica.core.model.builder.ConsultantModelBuilder.java-withExperiencesIn.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:45:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+if(wanted==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:45:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+if(similar==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:45:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+if(argumentMatchingTool==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:45:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
+if(similar==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:45:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
+if(smartPrinter==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:46:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
+if(reporter==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:46:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
+if(wanted==null){
+return ;
+}
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+if(argumentMatchingTool==null){
+return ;
+}
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V4/5645/pattern-ver1-serial/model.src.main.java.uk.ac.ebi.bioinvindex.utils.datasourceload.DataLocationManager.java-buildLocationFromRawParam.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:46:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
+if(smartPrinter==null){
+return ;
+}
+if(argumentMatchingTool==null){
+return ;
+}
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V4/5645/pattern-ver1-serial/model.src.main.java.uk.ac.ebi.bioinvindex.utils.datasourceload.DataLocationManager.java-buildLocationFromRawParam.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:46:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+if(argumentMatchingTool.equals("CALL_RECEIVED_AT")){
+return ;
+}
+if(argumentMatchingTool.equals("NAME")){
+return ;
+}
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:46:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
+if(wanted.equals("CALL_RECEIVED_AT")){
+return ;
+}
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
+if(wanted.equals("NAME")){
+return ;
+}
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:47:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
+if(invocations.equals("CALL_RECEIVED_AT")){
+return ;
+}
 reporter.wantedButNotInvoked(wanted,invocations);
+if(invocations.equals("NAME")){
+return ;
+}
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:47:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
+if(wanted.equals("CALL_RECEIVED_AT")){
+return ;
+}
 reporter.wantedButNotInvoked(wanted,invocations);
+if(wanted.equals("NAME")){
+return ;
+}
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:47:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
+if(invocations.equals("CALL_RECEIVED_AT")){
+return ;
+}
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
+}
+if(invocations.equals("NAME")){
+return ;
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:47:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
+if(wanted.equals("CALL_RECEIVED_AT")){
+return ;
+}
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
+}
+if(wanted.equals("NAME")){
+return ;
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:47:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
+if(invocations.equals("CALL_RECEIVED_AT")){
+return ;
+}
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
+}
 }
+if(invocations.equals("NAME")){
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:48:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
+if(wanted.equals("CALL_RECEIVED_AT")){
+return ;
+}
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
+}
 }
+if(wanted.equals("NAME")){
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:48:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
-if(similar!=null){
+if(similar!=null&&!similar.equals("")){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/6260/pattern-ver1-serial/Client.src.com.way.chat.activity.ChatActivity.java-onItemClick.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:48:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+if(argumentMatchingTool.equals("INFO")){
+return ;
+}
+if(argumentMatchingTool.equals("UNIT")){
+return ;
+}
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:48:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
+if(wanted.equals("INFO")){
+return ;
+}
+if(wanted.equals("UNIT")){
+return ;
+}
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:48:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
+if(invocations.equals("INFO")){
+return ;
+}
+if(invocations.equals("UNIT")){
+return ;
+}
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:49:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
+if(wanted.equals("INFO")){
+return ;
+}
+if(wanted.equals("UNIT")){
+return ;
+}
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:49:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
+}
+if(invocations.equals("INFO")){
+return ;
+}
+if(invocations.equals("UNIT")){
+return ;
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:49:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
+}
+if(wanted.equals("INFO")){
+return ;
+}
+if(wanted.equals("UNIT")){
+return ;
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:49:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
+}
+}
+if(invocations.equals("INFO")){
+return ;
 }
+if(invocations.equals("UNIT")){
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:49:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
+}
+}
+if(wanted.equals("INFO")){
+return ;
 }
+if(wanted.equals("UNIT")){
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:50:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+if(argumentMatchingTool==null){
+return ;
+}
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
+if(indexesOfSuspiciousArgs==null){
+return ;
+}
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/6299/pattern-ver1-serial/src.main.java.com.lothrazar.cyclicmagic.util.UtilNBT.java-countItemsFromNBT.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:50:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
+if(indexesOfSuspiciousArgs==null){
+return ;
+}
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
+if(smartPrinter==null){
+return ;
+}
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/6299/pattern-ver1-serial/src.main.java.com.lothrazar.cyclicmagic.util.UtilNBT.java-countItemsFromNBT.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:50:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
+if(wanted==null){
+return ;
+}
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
+if(smartPrinter==null){
+return ;
+}
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/6299/pattern-ver1-serial/src.main.java.com.lothrazar.cyclicmagic.util.UtilNBT.java-countItemsFromNBT.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:50:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
+if(similar==null){
+return ;
+}
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
+if(smartPrinter==null){
+return ;
+}
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/6299/pattern-ver1-serial/src.main.java.com.lothrazar.cyclicmagic.util.UtilNBT.java-countItemsFromNBT.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:50:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
+if(invocations!=null&&wanted!=null){
 reporter.wantedButNotInvoked(wanted,invocations);
+}
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/523/pattern-ver1-serial/src.se.chalmers.lidkopingsh.model.Order.java-sync.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:51:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
+if(smartPrinter==null||indexesOfSuspiciousArgs==null){
+return ;
+}
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V17/3334/pattern-ver1-serial/src.org.nschmidt.ldparteditor.data.VM03Adjacency.java-linkedCommonFaces.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 7, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:51:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
+if(indexesOfSuspiciousArgs==null||smartPrinter==null){
+return ;
+}
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V17/3334/pattern-ver1-serial/src.org.nschmidt.ldparteditor.data.VM03Adjacency.java-linkedCommonFaces.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 7, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:51:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
+if(indexesOfSuspiciousArgs==null||argumentMatchingTool==null){
+return ;
+}
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V17/3334/pattern-ver1-serial/src.org.nschmidt.ldparteditor.data.VM03Adjacency.java-linkedCommonFaces.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 7, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:51:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
+if(argumentMatchingTool==null||indexesOfSuspiciousArgs==null){
+return ;
+}
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V17/3334/pattern-ver1-serial/src.org.nschmidt.ldparteditor.data.VM03Adjacency.java-linkedCommonFaces.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 7, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:51:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
+Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
-Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2803/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.index.hashindex.local.OHashTableDirectory.java-deleteWithoutOpen.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:52:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
+if(indexesOfSuspiciousArgs==null){
+throw new IllegalStateException("User isn't registered! "+argumentMatchingTool);
+}
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:52:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
+if(indexesOfSuspiciousArgs==null){
+throw new IllegalStateException("User isn't registered! "+wanted);
+}
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:52:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
+if(similar==null){
+throw new IllegalStateException("User isn't registered! "+invocations);
+}
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:52:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
+if(similar==null){
+throw new IllegalStateException("User isn't registered! "+wanted);
+}
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:52:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
+reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:53:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+if(wanted==null||argumentMatchingTool==null){
+throw new NullPointerException();
+}
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:53:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+if(argumentMatchingTool==null||wanted==null){
+throw new NullPointerException();
+}
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:53:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+if(argumentMatchingTool==null||similar==null){
+throw new NullPointerException();
+}
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:53:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+if(similar==null||argumentMatchingTool==null){
+throw new NullPointerException();
+}
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:53:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
+for(int i=0;i<24;i++){
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
+}
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/7063/pattern-ver1-serial/src.application.rmi.Serveur.java-initalisationMain.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:53:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
+for(int i=0;i<24;i++){
 reporter.wantedButNotInvoked(wanted,invocations);
+}
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/7063/pattern-ver1-serial/src.application.rmi.Serveur.java-initalisationMain.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:54:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
+boolean atLeastOneNonProhibited=false;
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+atLeastOneNonProhibited=true;
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
+}
 }
+if(atLeastOneNonProhibited){
+throw new IllegalStateException("There should be a vertex satisfying these properties, but there is not, so there must be something wrong..");
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V12/4655/pattern-ver1-serial/src.Alg.Algorithms.IterativeCompression.SimpleDisjointAlg.java-findVertexWithOneNonProhibitedNeighbour.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:54:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
+boolean atLeastOneNonProhibited=false;
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+atLeastOneNonProhibited=true;
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
+}
+if(atLeastOneNonProhibited){
+throw new IllegalStateException("There should be a vertex satisfying these properties, but there is not, so there must be something wrong..");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V12/4655/pattern-ver1-serial/src.Alg.Algorithms.IterativeCompression.SimpleDisjointAlg.java-findVertexWithOneNonProhibitedNeighbour.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:54:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
+boolean atLeastOneNonProhibited=false;
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
+atLeastOneNonProhibited=true;
+}
 }
+if(atLeastOneNonProhibited){
+throw new IllegalStateException("There should be a vertex satisfying these properties, but there is not, so there must be something wrong..");
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V12/4655/pattern-ver1-serial/src.Alg.Algorithms.IterativeCompression.SimpleDisjointAlg.java-findVertexWithOneNonProhibitedNeighbour.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:54:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
+boolean atLeastOneNonProhibited=false;
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
+atLeastOneNonProhibited=true;
+}
+if(atLeastOneNonProhibited){
+throw new IllegalStateException("There should be a vertex satisfying these properties, but there is not, so there must be something wrong..");
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V12/4655/pattern-ver1-serial/src.Alg.Algorithms.IterativeCompression.SimpleDisjointAlg.java-findVertexWithOneNonProhibitedNeighbour.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:54:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
+boolean atLeastOneNonProhibited=false;
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
+atLeastOneNonProhibited=true;
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
+}
 }
+if(atLeastOneNonProhibited){
+throw new IllegalStateException("There should be a vertex satisfying these properties, but there is not, so there must be something wrong..");
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V12/4655/pattern-ver1-serial/src.Alg.Algorithms.IterativeCompression.SimpleDisjointAlg.java-findVertexWithOneNonProhibitedNeighbour.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:55:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
+if(smartPrinter==null||argumentMatchingTool==null||wanted==null){
+return ;
+}
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 11, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:55:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
+if(smartPrinter==null||wanted==null||argumentMatchingTool==null){
+return ;
+}
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 11, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:55:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
+if(wanted==null||smartPrinter==null||argumentMatchingTool==null){
+return ;
+}
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 11, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:55:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
+if(indexesOfSuspiciousArgs==null||argumentMatchingTool==null||wanted==null){
+return ;
+}
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 11, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:55:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+if(similar==null||argumentMatchingTool==null||wanted==null){
+return ;
+}
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 11, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:56:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
+if(argumentMatchingTool==null||indexesOfSuspiciousArgs==null||wanted==null){
+return ;
+}
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 11, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:56:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+if(argumentMatchingTool==null||similar==null||wanted==null){
+return ;
+}
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 11, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:56:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
+if(indexesOfSuspiciousArgs==null||wanted==null||argumentMatchingTool==null){
+return ;
+}
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 11, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:56:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
+if(similar==null||wanted==null||argumentMatchingTool==null){
+return ;
+}
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 11, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:56:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
+if(wanted==null||indexesOfSuspiciousArgs==null||argumentMatchingTool==null){
+return ;
+}
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 11, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:57:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
+long startTime=System.currentTimeMillis();
 reporter.wantedButNotInvoked(wanted,invocations);
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:57:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
+long startTime=System.currentTimeMillis();
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:57:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
+long startTime=System.currentTimeMillis();
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:57:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
+long startTime=System.currentTimeMillis();
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:57:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
+for(int i=0;i<4;i++){
+indexesOfSuspiciousArgs[i]=Math.min(1,Math.max(0,indexesOfSuspiciousArgs[i]));
+}
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/2980/pattern-ver1-serial/megamek.src.megamek.client.ui.swing.MiniMap.java-paintBVSection.pattern
MATCHLEVEL : ALL
ALL : 20, UPD : 0, INS : 20, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:58:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
+synchronized(this){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
+}
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 25, UPD : 25, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:58:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
+if(finder!=null){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
+}
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V19/258/pattern-ver1-serial/web.src.main.java.com.epam.freelancer.web.controller.UserController.java-addIsComplaintInOrderings.pattern
MATCHLEVEL : ALL
ALL : 35, UPD : 3, INS : 0, DEL : 32
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:58:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
+synchronized(this){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
+}
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 38, UPD : 38, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:58:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
 }
+}else {
+reporter.wantedButNotInvoked(wanted,invocations);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V54/1742/pattern-ver1-serial/obdalib-protege41.src.main.java.it.unibz.krdb.obda.protege4.gui.action.R2RMLImportAction.java-actionPerformed.pattern
MATCHLEVEL : ALL
ALL : 38, UPD : 38, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:58:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
 if(actualInvocations.isEmpty()){
-Invocation similar=finder.findSimilarInvocation(invocations,wanted);
-if(similar!=null){
-ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
-Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
-SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
-reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
-}else {
 reporter.wantedButNotInvoked(wanted,invocations);
-}
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/556/pattern-ver1-serial/onebusaway-android.src.main.java.org.onebusaway.android.report.ui.ReportProblemFragmentBase.java-onLoadFinished.pattern
MATCHLEVEL : ALL
ALL : 38, UPD : 38, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:59:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
-if(actualInvocations.isEmpty()){
-Invocation similar=finder.findSimilarInvocation(invocations,wanted);
-if(similar!=null){
-ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
-Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
-SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
-reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
-}else {
-reporter.wantedButNotInvoked(wanted,invocations);
-}
-}
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 40, UPD : 0, INS : 0, DEL : 40
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:59:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/checkers/MissingInvocationChecker.java[30,44]
------------Candidate---------------
 public void check(List<Invocation> invocations,InvocationMatcher wanted){
 List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted);
+if(actualInvocations==null){
+return ;
+}else {
 if(actualInvocations.isEmpty()){
 Invocation similar=finder.findSimilarInvocation(invocations,wanted);
 if(similar!=null){
 ArgumentMatchingTool argumentMatchingTool=new ArgumentMatchingTool();
 Integer[] indexesOfSuspiciousArgs=argumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(wanted.getMatchers(),similar.getArguments());
 SmartPrinter smartPrinter=new SmartPrinter(wanted,similar,indexesOfSuspiciousArgs);
 reporter.argumentsAreDifferent(smartPrinter.getWanted(),smartPrinter.getActual(),similar.getLocation());
 }else {
 reporter.wantedButNotInvoked(wanted,invocations);
+}
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/3795/pattern-ver1-serial/opentripplanner-routing.src.main.java.org.opentripplanner.routing.edgetype.PlainStreetEdge.java-calculateSpeed.pattern
MATCHLEVEL : ALL
ALL : 40, UPD : 40, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 08:59:28 CDT
--------------- END -----------------
Location : org.mockito.internal.verification.argumentmatching.ArgumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes:[21, 25, 26, 27, 28]#0.5
Compute Candidate : 2019.09.05 AD at 09:00:13 CDT - 2019.09.05 AD at 09:22:15 CDT , PNumber : 11282, CandNumber : 273 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
+continue;
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7570/pattern-ver1-serial/src.main.java.com.rayn.jflask.framework.mvc.MultipartHelper.java-parseMultipartParamList.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
+continue;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/5856/pattern-ver1-serial/internalLibraries.backup.src.main.java.com.emc.storageos.management.backup.DbBackupHandler.java-dumpBackup.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
-List<Integer> suspicious=new LinkedList<Integer>();
+ List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
-int i=0;
+ int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
+return null;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
+return null;
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
-List<Integer> suspicious=new LinkedList<Integer>();
+List<Integer> suspicious=new LinkedList<Integer>(null);
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V29/104/pattern-ver1-serial/cps.hu.bme.mit.inf.cps.patterns.src-gen.hu.bme.mit.inf.cps.patterns.AllApplicationInstanceIsRunningMatch.java-newEmptyMatch.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
+break;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
+break;
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
-if(matchers.size()!=arguments.length){
+if(matchers.size()==arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/6722/pattern-ver1-serial/collections.queue.IntArrayQueue.java-peek.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
-i++;
+i--;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V7/4666/pattern-ver1-serial/src.main.java.com.deanveloper.playtimeplus.commands.playtime.subcommand.TopSubCmd.java-execute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
-if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[1])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6103/pattern-ver1-serial/src.br.unicamp.ic.recod.gpsi.applications.gpsiJGAPEvolver.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
-if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[1])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6103/pattern-ver1-serial/src.br.unicamp.ic.recod.gpsi.applications.gpsiJGAPEvolver.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
-if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[1])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6103/pattern-ver1-serial/src.br.unicamp.ic.recod.gpsi.applications.gpsiJGAPEvolver.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
-int i=0;
+Integer i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7237/pattern-ver1-serial/Project.src.main.java.util.AdjacencyList.java-kruskal.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
-suspicious.add(i);
+suspicious.add(i,i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V16/6746/pattern-ver1-serial/controllersvc.src.main.java.com.emc.storageos.vplexcontroller.VPlexDeviceController.java-deleteStorageView.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
-if(matchers.size()!=arguments.length){
+if(matchers.size()<arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/1616/pattern-ver1-serial/src.PileRPL.java-sub.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
-if(matchers.size()!=arguments.length){
+if(matchers.size()>arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V36/3765/pattern-ver1-serial/app.src.main.java.com.xlythe.sms.MessageActivity.java-onGlobalLayout.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
-List<Integer> suspicious=new LinkedList<Integer>();
-int i=0;
+ List<Integer> suspicious=new LinkedList<Integer>();
+ int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
+i++;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
+i--;
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
+i--;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
+i--;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
+i--;
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
+suspicious.clear();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V41/6396/pattern-ver1-serial/core.src.com.FOS.Pixel.screens.GameScreen.java-checkCollectedOrbs.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
-if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i++])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V23/7673/pattern-ver1-serial/src.main.java.org.rapla.storage.dbrm.RemoteOperator.java-getFromId.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
-if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i++])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V23/7673/pattern-ver1-serial/src.main.java.org.rapla.storage.dbrm.RemoteOperator.java-getFromId.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
-if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i++])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V23/7673/pattern-ver1-serial/src.main.java.org.rapla.storage.dbrm.RemoteOperator.java-getFromId.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+synchronized(suspicious){
 suspicious.add(i);
+}
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V17/90/pattern-ver1-serial/PolibudaRun.src.HorizontalMove.java-down.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
+matchers.clear();
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/5987/pattern-ver1-serial/src.org.kjg.garderobe.ShiftDetailNumbersFragment.java-onCreateOptionsMenu.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
+suspicious.clear();
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/5987/pattern-ver1-serial/src.org.kjg.garderobe.ShiftDetailNumbersFragment.java-onCreateOptionsMenu.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
+suspicious.clear();
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/5987/pattern-ver1-serial/src.org.kjg.garderobe.ShiftDetailNumbersFragment.java-onCreateOptionsMenu.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
+matchers.clear();
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5052/pattern-ver1-serial/proxy.src.main.java.com.xqbase.tuna.proxy.ProxyServer.java-returnClient.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
+suspicious.clear();
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5052/pattern-ver1-serial/proxy.src.main.java.com.xqbase.tuna.proxy.ProxyServer.java-returnClient.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+suspicious.clear();
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5052/pattern-ver1-serial/proxy.src.main.java.com.xqbase.tuna.proxy.ProxyServer.java-returnClient.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
+matchers.clear();
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/400/pattern-ver1-serial/plan-comp.src.main.java.com.tissue.plan.web.spring.controllers.PlanController.java-joinPlan.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
+synchronized(this){
 i++;
+}
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
+return null;
 }
 i++;
+return null;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/144/pattern-ver1-serial/lettuce.src.main.java.com.lambdaworks.redis.Connections.java-close.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
+while(true){
+
+}
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
+while(true){
+
+}
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
+break;
 }
 i++;
+break;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1968/pattern-ver1-serial/src.main.java.com.ucmo.chat.controller.Controller.java-handleMessage.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
+matchers.clear();
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7642/pattern-ver1-serial/src.net.thecobix.openwsk.arena.WaterRemoveSystem.java-collectBlocks.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+matchers.clear();
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7642/pattern-ver1-serial/src.net.thecobix.openwsk.arena.WaterRemoveSystem.java-collectBlocks.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
+matchers.clear();
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7642/pattern-ver1-serial/src.net.thecobix.openwsk.arena.WaterRemoveSystem.java-collectBlocks.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
+synchronized(this){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
+}
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
+synchronized(this){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
+}
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+if(suspicious!=null){
 suspicious.add(i);
+}
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V8/6555/pattern-ver1-serial/app.src.main.java.com.example.uaharoni.tourdeplace.view.MapFragment.java-addPlaceMarker.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
+synchronized(this){
 return new Integer[0];
+}
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+synchronized(this){
 suspicious.add(i);
+}
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+if(i>0){
 suspicious.add(i);
+}
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V48/1583/pattern-ver1-serial/core.src.main.java.tachyon.client.CountingWritableBlockChannel.java-write.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
-if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i-1])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V20/1847/pattern-ver1-serial/33_CDIO3.src.boundary.GUIHandler.java-askPlayerBuyField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
-if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i-1])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V20/1847/pattern-ver1-serial/33_CDIO3.src.boundary.GUIHandler.java-askPlayerBuyField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
-if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i-1])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V20/1847/pattern-ver1-serial/33_CDIO3.src.boundary.GUIHandler.java-askPlayerBuyField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
+if(matchers!=null){
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
+}
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1943/pattern-ver1-serial/app.src.main.java.br.com.battista.myoffers.controller.OfferController.java-saveOfferInDatabase.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
+if(matchers!=null){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
+}
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/4155/pattern-ver1-serial/Calendar.src.edu.wpi.cs.wpisuitetng.modules.calendar.view.AddEventPanel.java-populateEvent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
+m=m;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
+suspicious.remove(null);
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/4839/pattern-ver1-serial/runtime.src.main.java.com.flipkart.flux.resource.StateMachineResource.java-getGraphData.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
+if(suspicious.isEmpty()){
+return null;
+}
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V35/2729/pattern-ver1-serial/davinci.src.main.java.cn.hadcn.davinci.image.DiskLruImageCache.java-getBitmap.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+suspicious.remove(0);
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V10/3880/pattern-ver1-serial/app.src.main.java.com.aiqing.niuniuheardsensor.activities.HSMainActivity.java-onNewIntent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
+suspicious.remove(0);
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V10/3880/pattern-ver1-serial/app.src.main.java.com.aiqing.niuniuheardsensor.activities.HSMainActivity.java-onNewIntent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
+suspicious.remove(0);
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V10/3880/pattern-ver1-serial/app.src.main.java.com.aiqing.niuniuheardsensor.activities.HSMainActivity.java-onNewIntent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
+i++;
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1266/pattern-ver1-serial/catroid.src.org.catrobat.catroid.livewallpaper.LiveWallpaper.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+i++;
 suspicious.add(i);
 }
-i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1266/pattern-ver1-serial/catroid.src.org.catrobat.catroid.livewallpaper.LiveWallpaper.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+i++;
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1266/pattern-ver1-serial/catroid.src.org.catrobat.catroid.livewallpaper.LiveWallpaper.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
+import java.util.Arrays;
+
+import java.util.Collections;
+
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
+Collections.sort(suspicious);
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2616/pattern-ver1-serial/app.app.src.main.java.adapters.versions.VersionViewModel.java-createModels.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
+int a=0;
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+int a=0;
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
+int a=0;
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
+int a=0;
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
+String OUTSTRING="";
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
+String OUTSTRING="";
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
+String OUTSTRING="";
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+String OUTSTRING="";
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
+if(matchers.isEmpty()){
+return null;
+}
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5856/pattern-ver1-serial/src.main.java.io.aif.associations.builder.ExperimentsConnectionsGraphReducer.java-normalize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
+if(suspicious.isEmpty()){
+return null;
+}
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5856/pattern-ver1-serial/src.main.java.io.aif.associations.builder.ExperimentsConnectionsGraphReducer.java-normalize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+if(suspicious.isEmpty()){
+return null;
+}
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5856/pattern-ver1-serial/src.main.java.io.aif.associations.builder.ExperimentsConnectionsGraphReducer.java-normalize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
+i++;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
-i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5076/pattern-ver1-serial/src.main.java.org.jsweet.transpiler.StaticInitilializerAnalyzer.java-visitClassDef.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
+if(equals(arguments)){
+return null;
+}
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
+if(equals(matchers)){
+return null;
+}
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
+if(equals(m)){
+return null;
+}
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
+if(equals(arguments)){
+return null;
+}
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
+int indexSelection=0;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
+int indexSelection=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
+int indexSelection=0;
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
+if(m.equals("sounds")){
+continue;
+}
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/2569/pattern-ver1-serial/src.main.java.net.dirtydeeds.discordsoundboard.chat.ListCategoriesProcessor.java-handleEvent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
+if(arguments.equals("sounds")){
+continue;
+}
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/2569/pattern-ver1-serial/src.main.java.net.dirtydeeds.discordsoundboard.chat.ListCategoriesProcessor.java-handleEvent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
+if(suspicious.equals("sounds")){
+continue;
+}
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/2569/pattern-ver1-serial/src.main.java.net.dirtydeeds.discordsoundboard.chat.ListCategoriesProcessor.java-handleEvent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
+int a=1;
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+int a=1;
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
+int a=1;
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
+int a=1;
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
-}
 i++;
+}
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2625/pattern-ver1-serial/app.src.main.java.de.aw.cash.action.FragmentBuchungRegelm.java-bindView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
+boolean b=true;
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
+boolean b=true;
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+boolean b=true;
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
+boolean b=true;
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
+if(m==null){
+continue;
+}
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7058/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.manager.FileManager.java-getExternalSDCardDirectory.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
+if(arguments==null){
+continue;
+}
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7058/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.manager.FileManager.java-getExternalSDCardDirectory.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
+if(suspicious==null){
+continue;
+}
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7058/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.manager.FileManager.java-getExternalSDCardDirectory.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+if(suspicious==null){
+continue;
+}
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7058/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.manager.FileManager.java-getExternalSDCardDirectory.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
-if(matchers.size()!=arguments.length){
+if(matchers!=null){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1221/pattern-ver1-serial/CransJavaAI.trunk.src.com.springrts.ai.crans.DGunControllerHandler.java-update.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
+if(m==null){
+return null;
+}
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
+if(arguments==null){
+return null;
+}
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
+if(arguments==null){
+return null;
+}
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
+if(matchers==null){
+return null;
+}
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
+if(suspicious==null){
+return null;
+}
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+if(suspicious==null){
+return null;
+}
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
+if(suspicious==null){
+return null;
+}
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/2822/pattern-ver1-serial/grib.src.main.java.ucar.nc2.grib.grib1.tables.NcepHtmlScraper.java-parseTable2.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
+if(suspicious==null){
+return null;
+}
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
-if(matchers.size()!=arguments.length){
+if(matchers.isEmpty()){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V27/7675/pattern-ver1-serial/libsrc.ffdec_lib.src.com.jpexs.decompiler.flash.action.swf4.ActionGotoFrame2.java-execute.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
+}
+if("&null".equals(m)){
+return null;
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
+}
+if("&null".equals(arguments)){
+return null;
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
+}
+if("&null".equals(arguments)){
+return null;
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
+}
+if("&null".equals(matchers)){
+return null;
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
+if("&null".equals(suspicious)){
+return null;
+}
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
+}
+if("&null".equals(suspicious)){
+return null;
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
+if("&null".equals(suspicious)){
+return null;
+}
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
+if("&null".equals(i)){
+return null;
+}
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
+}
+if("&null".equals(i)){
+return null;
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
+}
+if(suspicious==null){
+return null;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4514/pattern-ver1-serial/src.main.java.com.muzima.service.HTMLFormObservationCreator.java-createObservation.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
+suspicious.add(i);
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+suspicious.add(i);
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
+suspicious.add(i);
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
-suspicious.add(i);
 }
+suspicious.add(i);
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/2466/pattern-ver1-serial/tajo-core.src.main.java.org.apache.tajo.worker.Task.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
+suspicious.add(i);
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
+suspicious.add(i);
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
-suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2665/pattern-ver1-serial/channel.src.main.java.com.github.dm.jrt.channel.ReplayChannel.java-onError.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
+suspicious.add(i);
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2665/pattern-ver1-serial/channel.src.main.java.com.github.dm.jrt.channel.ReplayChannel.java-onError.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
-if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
+if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V2/3128/pattern-ver1-serial/src.cubicmadness.gamestates.GameStateManager.java-popCurrentState.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+if(suspicious.size()>0){
 suspicious.add(i);
+}
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V48/506/pattern-ver1-serial/app.src.main.java.com.jessie.guessnumber.MainActivity.java-delete.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+if(!suspicious.contains(i)){
 suspicious.add(i);
+}
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V27/7288/pattern-ver1-serial/Horizon.app.src.main.java.com.example.hesolutions.horizon.DataManager.java-datagetvalue.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
-if(matchers.size()!=arguments.length){
+if(true){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
-if(matchers.size()!=arguments.length){
+if(matchers.size()!=arguments.length==false){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3764/pattern-ver1-serial/uDig.org.locationtech.udig.processingtoolbox.src.org.locationtech.udig.processingtoolbox.tools.TextfileToPointDialog.java-getTextColumns.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
+if(suspicious.equals("-1")){
+return null;
+}
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
-if(matchers.size()!=arguments.length){
+if(matchers.size()!=arguments.length||matchers.size()==Long.MIN_VALUE){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
-if(matchers.size()!=arguments.length){
+if(matchers.size()!=arguments.length&&false){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/5079/pattern-ver1-serial/Server.src.server.model.players.packets.ClickNPC.java-processPacket.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
-int i=0;
 for(Matcher m : matchers){
+int i=0;
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V40/2943/pattern-ver1-serial/hadoop.order_inversion.src.main.java.org.mdp.learn.hadoop.order_inversion.pairs.CoOccurrenceMatrixMapperWithPairs.java-map.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
-if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i++])&&toStringEquals(m,arguments[i++])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3938/pattern-ver1-serial/src.main.java.de.topobyte.osm4j.geometry.CoordinateSequencesBuilder.java-createGeometry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
-if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i++])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i++])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3938/pattern-ver1-serial/src.main.java.de.topobyte.osm4j.geometry.CoordinateSequencesBuilder.java-createGeometry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
-if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i++])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i++])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3938/pattern-ver1-serial/src.main.java.de.topobyte.osm4j.geometry.CoordinateSequencesBuilder.java-createGeometry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
+try{
 i++;
+}finally{
+suspicious.add(i);
+}
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 1, INS : 0, DEL : 3
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
+assert (m!=null);
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
+assert (arguments!=null);
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
+assert (arguments!=null);
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
+assert (matchers!=null);
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
+assert (suspicious!=null);
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
+assert (suspicious!=null);
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+assert (suspicious!=null);
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
+assert (!matchers.isEmpty());
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
+assert (!suspicious.isEmpty());
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
+assert (!suspicious.isEmpty());
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
+assert (!suspicious.isEmpty());
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
-if(matchers.size()!=arguments.length){
+if(Double.isNaN(matchers.size())){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
-if(matchers.size()!=arguments.length){
+if(matchers.contains(".")){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V9/2868/pattern-ver1-serial/src.main.java.play.templates.GroovyTemplate.java-invokeTag.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
+if(matchers.contains(matchers)){
+return null;
+}
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V11/5787/pattern-ver1-serial/modules.web.web-impl.src.main.java.com.enonic.xp.web.impl.WebHandlerRegistry.java-add.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
-if(matchers.size()!=arguments.length){
+if(matchers.size()!=arguments.length==true){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1922/pattern-ver1-serial/app.src.main.java.ch.hsr.edu.sinv_56082.gastroginiapp.ui.activities.menu.ProductListListEditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
+if(matchers!=null){
+if(matchers.size()!=arguments.length){
+return new Integer[0];
+}
+List<Integer> suspicious=new LinkedList<Integer>();
+int i=0;
+for(Matcher m : matchers){
+if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+suspicious.add(i);
+}
+i++;
+}
+return suspicious.toArray(new Integer[0]);
+}
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
+if(arguments!=null){
+if(matchers.size()!=arguments.length){
+return new Integer[0];
+}
+List<Integer> suspicious=new LinkedList<Integer>();
+int i=0;
+for(Matcher m : matchers){
+if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+suspicious.add(i);
+}
+i++;
+}
+return suspicious.toArray(new Integer[0]);
+}
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
+if(m!=null){
+if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+suspicious.add(i);
+}
+i++;
+}
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
+if(arguments!=null){
+if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+suspicious.add(i);
+}
+i++;
+}
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
+assert (suspicious!=new LinkedList<Integer>());
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
+assert (i!=0);
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
+i++;
 }
+i++;
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 2, DEL : 2
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
+assert (m!=null);
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
+assert (arguments!=null);
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
+assert (suspicious!=null);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
+assert (arguments!=null);
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
+assert (matchers!=null);
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
+assert (suspicious!=null);
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
+if(suspicious.equals("655")){
+System.out.println();
+}
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
+}
+if(suspicious.equals("655")){
+System.out.println();
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
-if(matchers.size()!=arguments.length){
+if(matchers.size()!=arguments.length||"查看红包".equals(matchers.size())){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
-if(matchers.size()!=arguments.length){
+if(matchers.size()!=arguments.length||matchers.size()==3){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
-if(matchers.size()!=arguments.length){
+if(matchers!=null&&matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V15/6389/pattern-ver1-serial/src.org.ohmage.conditionevaluator.comparator.SingleChoiceDataPointComparator.java-lessThan.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
+}
+if(matchers.isEmpty()){
+matchers=null;
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
+if(suspicious.isEmpty()){
+suspicious=null;
+}
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
+}
+if(suspicious.isEmpty()){
+suspicious=null;
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
+if(suspicious.isEmpty()){
+suspicious=null;
+}
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
-if(matchers.size()!=arguments.length){
+if(matchers.size()<0||matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
+suspicious.remove(suspicious.get(0));
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V38/5778/pattern-ver1-serial/src.LinkedList.java-main.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
-if(matchers.size()!=arguments.length){
+if(matchers.size()!=arguments.length||matchers.size()==0){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
-if(matchers.size()!=arguments.length){
+if(matchers.size()!=arguments.length||matchers.size()>9){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
-if(matchers.size()!=arguments.length){
+if(matchers.size()!=arguments.length&&matchers.size()<4000000){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
-if(matchers.size()!=arguments.length){
+if(matchers.size()!=arguments.length&&matchers.size()!=9999){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
-if(matchers.size()!=arguments.length){
+if(arguments.length>0&&matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+assert (i>=0):"Receive a negative tratment";
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
+assert (i>=0):"Receive a negative tratment";
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
+if(suspicious!=null){
 return suspicious.toArray(new Integer[0]);
+}else {
+return null;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V35/3589/pattern-ver1-serial/HermesBucarBala.app.src.main.java.com.laboratoriodesoftware2015.hermesbucarbala.presenter.DashboardPresenter.java-getListTabsById.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
-if(matchers.size()!=arguments.length){
+if(matchers==null||matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V31/1012/pattern-ver1-serial/common.buildcraft.robotics.StationIndex.java-equals.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
+if(matchers.isEmpty()){
+System.out.println("Team has to have a name");
+return null;
+}
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
+assert (m!=null):"Appointments day is not allowed to be null!";
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
+assert (arguments!=null):"Appointments day is not allowed to be null!";
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+assert (suspicious!=null):"Appointments day is not allowed to be null!";
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
+assert (arguments!=null):"Appointments day is not allowed to be null!";
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
+assert (matchers!=null):"Appointments day is not allowed to be null!";
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
+assert (suspicious!=null):"Appointments day is not allowed to be null!";
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
+assert (suspicious!=null):"Appointments day is not allowed to be null!";
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+assert (i!=0):"Receive a size tratment";
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
+assert (i!=0):"Receive a size tratment";
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
+if(suspicious.isEmpty()){
+throw new IllegalArgumentException("Title must not be empty!");
+}
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/1109/pattern-ver1-serial/eclipse.src.stoberry.dataManagement.Management.java-sendMessage.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
+import java.util.Collections;
+
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+Collections.sort(suspicious,Collections.reverseOrder());
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V40/4441/pattern-ver1-serial/recruiting-core.src.main.java.it.f2informatica.core.model.builder.ConsultantModelBuilder.java-withExperiencesIn.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
+import java.util.Collections;
+
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
+Collections.sort(matchers,Collections.reverseOrder());
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V40/4441/pattern-ver1-serial/recruiting-core.src.main.java.it.f2informatica.core.model.builder.ConsultantModelBuilder.java-withExperiencesIn.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
+import java.util.Collections;
+
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
+Collections.sort(suspicious,Collections.reverseOrder());
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V40/4441/pattern-ver1-serial/recruiting-core.src.main.java.it.f2informatica.core.model.builder.ConsultantModelBuilder.java-withExperiencesIn.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
+import java.util.ArrayList;
+
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
+if(matchers.isEmpty()){
+matchers=new ArrayList<>();
+}
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V32/3439/pattern-ver1-serial/app.src.main.java.com.thompalmer.mocktwitterdemo.presentation.feed.FeedAdapter.java-addTweet.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
+import java.util.ArrayList;
+
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+if(suspicious.isEmpty()){
+suspicious=new ArrayList<>();
+}
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V32/3439/pattern-ver1-serial/app.src.main.java.com.thompalmer.mocktwitterdemo.presentation.feed.FeedAdapter.java-addTweet.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
+import java.util.ArrayList;
+
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
+if(suspicious.isEmpty()){
+suspicious=new ArrayList<>();
+}
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V32/3439/pattern-ver1-serial/app.src.main.java.com.thompalmer.mocktwitterdemo.presentation.feed.FeedAdapter.java-addTweet.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
+import java.util.ArrayList;
+
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
+if(suspicious.isEmpty()){
+suspicious=new ArrayList<>();
+}
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V32/3439/pattern-ver1-serial/app.src.main.java.com.thompalmer.mocktwitterdemo.presentation.feed.FeedAdapter.java-addTweet.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
-if(matchers.size()!=arguments.length){
+if(matchers.size()!=arguments.length||matchers.size()=='"'){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/1758/pattern-ver1-serial/modules.ImportPlugin.src.main.java.org.gephi.io.importer.plugin.file.ImporterDOT.java-edgeAttributes.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
+if(suspicious==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
+if(((ContainsExtraTypeInformation)m)==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
+if(i>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
+import java.util.ArrayList;
+
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
+if(suspicious==null){
+suspicious=new ArrayList<>();
+}
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V15/3179/pattern-ver1-serial/src.dev.televex.memecraftcore.lore.loreapi.java-addLoreLineTop.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
+import java.util.ArrayList;
+
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
+}
+if(suspicious==null){
+suspicious=new ArrayList<>();
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V15/3179/pattern-ver1-serial/src.dev.televex.memecraftcore.lore.loreapi.java-addLoreLineTop.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
+if(i<=0){
+i=1;
+}
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V19/2376/pattern-ver1-serial/src.br.com.siva.pinkmusic.list.RadioStationList.java-cancel.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
-if(matchers.size()!=arguments.length){
-return new Integer[0];
-}
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
+if(matchers.size()!=arguments.length){
+return new Integer[0];
+}
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V11/3655/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.placement.RecoverPointScheduler.java-scheduleStorageSourcePoolConstraint.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
+if(i<=0){
+i=1;
+}
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/1761/pattern-ver1-serial/JazminServer.src.jazmin.core.monitor.DispatcherMonitorAgent.java-sample.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
+if(suspicious!=null){
 i++;
+}
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V62/5851/pattern-ver1-serial/src.main.java.com.dynious.refinedrelocation.grid.GridMemberHandler.java-onTileRemoved.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
+if(i==100){
+i=0;
+}
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/7421/pattern-ver1-serial/MyDate.java-increment.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
-if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i-1])&&toStringEquals(m,arguments[i-1])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V11/6266/pattern-ver1-serial/src.uz.unicon.clg.Main.java-main.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
-if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i-1])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i-1])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V11/6266/pattern-ver1-serial/src.uz.unicon.clg.Main.java-main.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
-if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i-1])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i-1])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V11/6266/pattern-ver1-serial/src.uz.unicon.clg.Main.java-main.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
+if(suspicious!=null){
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
+}
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V2/5497/pattern-ver1-serial/app.src.main.java.hm.orz.chaos114.android.tumekyouen.TitleActivity.java-afterViews.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
+}
+if(suspicious.size()==0){
+suspicious.add(0);
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V8/7890/pattern-ver1-serial/app.src.main.java.me.anon.lib.helper.MigrationHelper.java-performMigration.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 7, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
+if(suspicious.size()==0){
+suspicious.add(0);
+}
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V8/7890/pattern-ver1-serial/app.src.main.java.me.anon.lib.helper.MigrationHelper.java-performMigration.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 7, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
+if(matchers!=null&&!matchers.isEmpty()){
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
+}
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7435/pattern-ver1-serial/mockserver-core.src.main.java.org.mockserver.model.NottableString.java-strings.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
-if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+if(!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V36/6358/pattern-ver1-serial/src.main.java.com.builtbroken.icbm.content.ams.TileAMSClient.java-onPlayerRightClick.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
-if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+if((m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i]))&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V8/4601/pattern-ver1-serial/core.src.by.matveev.rorty.entities.Robot.java-updateControlState.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
+if(m==null||arguments==null){
+throw new NullPointerException();
+}
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
+if(arguments==null||m==null){
+throw new NullPointerException();
+}
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
+boolean succeeded=false;
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
+succeeded=true;
+}
+if(!succeeded){
+return null;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
+boolean succeeded=false;
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
+succeeded=true;
 }
 i++;
+}
+if(!succeeded){
+return null;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
-return new Integer[0];
+Integer[] result=null;
+if(new Integer[0]!=null){
+result=new Integer[0].clone();
+}
+return result;
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/2121/pattern-ver1-serial/exportLibraries.xtremio.src.main.java.com.emc.storageos.xtremio.restapi.model.response.XtremIOTagsInfo.java-getTagsInfo.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 1, INS : 10, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
+Integer[] result=null;
+if(new Integer[0]!=null){
+result=new Integer[0].clone();
+}
 if(matchers.size()!=arguments.length){
-return new Integer[0];
+return result;
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/2121/pattern-ver1-serial/exportLibraries.xtremio.src.main.java.com.emc.storageos.xtremio.restapi.model.response.XtremIOTagsInfo.java-getTagsInfo.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 1, INS : 10, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
+if(suspicious==null||m==null||arguments==null){
+return null;
+}
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
+if(suspicious==null||arguments==null||m==null){
+return null;
+}
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
+if(arguments==null||suspicious==null||m==null){
+return null;
+}
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
+if(m==null||suspicious==null||arguments==null){
+return null;
+}
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
+if(arguments==null||m==null||suspicious==null){
+return null;
+}
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
+if(m==null||arguments==null||suspicious==null){
+return null;
+}
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
+boolean matchFound=false;
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
+if(!matchFound){
+i=-1;
+}
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+matchFound=true;
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V68/3537/pattern-ver1-serial/src.main.java.nl.giantit.minecraft.giantcore.Misc.Misc.java-startsWithAnyIgnoreCase.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
+boolean matchFound=false;
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
+if(!matchFound){
+i=-1;
+}
 for(Matcher m : matchers){
+matchFound=true;
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V68/3537/pattern-ver1-serial/src.main.java.nl.giantit.minecraft.giantcore.Misc.Misc.java-startsWithAnyIgnoreCase.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
-if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+if(toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V36/6358/pattern-ver1-serial/src.main.java.com.builtbroken.icbm.content.ams.TileAMSClient.java-onPlayerRightClick.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 13, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
-if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V15/578/pattern-ver1-serial/src.com.android.mms.model.ImageModel.java-resizeMedia.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 13, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
-if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+if((m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i]))&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V8/4601/pattern-ver1-serial/core.src.by.matveev.rorty.entities.Robot.java-updateControlState.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 13, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+long startTime=System.currentTimeMillis();
 suspicious.add(i);
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
+long startTime=System.currentTimeMillis();
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
+long startTime=System.currentTimeMillis();
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
+if(suspicious.size()==0){
+return null;
+}
 int i=0;
+if((suspicious.size()<=1)||(i==0)){
+return null;
+}
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4230/pattern-ver1-serial/src.main.java.net.sf.mzmine.modules.peaklistmethods.dataanalysis.heatmaps.HeatMapTask.java-groupingDataset.pattern
MATCHLEVEL : ALL
ALL : 14, UPD : 0, INS : 14, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
+arguments[28]=(byte)0x88;
+arguments[29]=0x58;
+arguments[30]=0x01;
+arguments[31]=0x00;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/2015/pattern-ver1-serial/src.info.dreamingfish123.wavetransdemo.MainActivity.java-writeWaveFile.pattern
MATCHLEVEL : ALL
ALL : 17, UPD : 0, INS : 17, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
-if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+if((m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i]))&&(!((ContainsExtraTypeInformation)m).typeMatches(arguments[i]))){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V17/5331/pattern-ver1-serial/src.main.java.groupProject.twentyFortyEight.GameLogic.java-gameOver.pattern
MATCHLEVEL : ALL
ALL : 19, UPD : 19, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
-if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])||"查看红包".equals(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i]))){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 20, UPD : 20, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
-if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/1014/pattern-ver1-serial/src.main.java.HxCKDMS.HxCEnchants.Handlers.EnchantHandlers.java-handleBootEnchant.pattern
MATCHLEVEL : ALL
ALL : 20, UPD : 20, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
-if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+if(true){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 20, UPD : 20, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
-if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])==false){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3764/pattern-ver1-serial/uDig.org.locationtech.udig.processingtoolbox.src.org.locationtech.udig.processingtoolbox.tools.TextfileToPointDialog.java-getTextColumns.pattern
MATCHLEVEL : ALL
ALL : 20, UPD : 20, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
-if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])&&false){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/5079/pattern-ver1-serial/Server.src.server.model.players.packets.ClickNPC.java-processPacket.pattern
MATCHLEVEL : ALL
ALL : 20, UPD : 20, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
-if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])==true){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1922/pattern-ver1-serial/app.src.main.java.ch.hsr.edu.sinv_56082.gastroginiapp.ui.activities.menu.ProductListListEditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 20, UPD : 20, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
-if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V38/69/pattern-ver1-serial/src.org.exoplatform.shareextension.AccountsFragment.java-onListItemClick.pattern
MATCHLEVEL : ALL
ALL : 20, UPD : 20, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
-if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+if(safelyMatches(m,arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/1959/pattern-ver1-serial/LowcostAvia.src.main.java.com.epam.lowcost.command.RegisterCommand.java-action.pattern
MATCHLEVEL : ALL
ALL : 20, UPD : 20, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
-if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+if(toStringEquals(m,arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/1959/pattern-ver1-serial/LowcostAvia.src.main.java.com.epam.lowcost.command.RegisterCommand.java-action.pattern
MATCHLEVEL : ALL
ALL : 20, UPD : 20, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
-if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+if(!safelyMatches(m,arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/1959/pattern-ver1-serial/LowcostAvia.src.main.java.com.epam.lowcost.command.RegisterCommand.java-action.pattern
MATCHLEVEL : ALL
ALL : 20, UPD : 20, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
-if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+if(!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/1959/pattern-ver1-serial/LowcostAvia.src.main.java.com.epam.lowcost.command.RegisterCommand.java-action.pattern
MATCHLEVEL : ALL
ALL : 20, UPD : 20, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
-if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+if(i!=1&&m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V25/1693/pattern-ver1-serial/src.main.java.net.h31ix.anticheat.manage.AnticheatManager.java-log.pattern
MATCHLEVEL : ALL
ALL : 20, UPD : 20, INS : 0, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
 int i=0;
 for(Matcher m : matchers){
 if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
 suspicious.add(i);
 }
 i++;
+if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+suspicious.add(i);
+}
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V11/3655/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.placement.RecoverPointScheduler.java-scheduleStorageSourcePoolConstraint.pattern
MATCHLEVEL : ALL
ALL : 24, UPD : 0, INS : 1, DEL : 23
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
+boolean haveBreadCrumbs=false;
 int i=0;
 for(Matcher m : matchers){
-if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])&&haveBreadCrumbs){
 suspicious.add(i);
 }
 i++;
+haveBreadCrumbs=true;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 26, UPD : 20, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_29_buggy/src/org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java[17,37]
------------Candidate---------------
 public Integer[] getSuspiciouslyNotMatchingArgsIndexes(List<Matcher> matchers,Object[] arguments){
 if(matchers.size()!=arguments.length){
 return new Integer[0];
 }
 List<Integer> suspicious=new LinkedList<Integer>();
+boolean haveBreadCrumbs=false;
 int i=0;
 for(Matcher m : matchers){
-if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])){
+if(m instanceof ContainsExtraTypeInformation&&!safelyMatches(m,arguments[i])&&toStringEquals(m,arguments[i])&&!((ContainsExtraTypeInformation)m).typeMatches(arguments[i])&&haveBreadCrumbs){
 suspicious.add(i);
+haveBreadCrumbs=true;
 }
 i++;
 }
 return suspicious.toArray(new Integer[0]);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 26, UPD : 20, INS : 6, DEL : 0
Failing Tests:[org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenNullPassedToSame]
---------START : 2019.09.05 AD at 04:22:15 CDT
---------TIME : 2019.09.05 AD at 09:22:15 CDT
--------------- END -----------------
Finish : mockito-29 > patch : 0 | Start : Thu Sep 05 04:22:15 CDT 2019 | End : 2019.09.05 AD at 09:22:15 CDT
