Repair : mockito_8
Current failed test : org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type | 2019.09.04 AD at 09:21:43 CDT
Location : org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor:[184, 185, 182, 183]#0.3333333333333333
Compute Candidate : 2019.09.04 AD at 09:24:44 CDT - 2019.09.04 AD at 09:35:02 CDT , PNumber : 11449, CandNumber : 80 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
 if(type instanceof TypeVariable){
-TypeVariable typeVariable=(TypeVariable)type;
+ TypeVariable typeVariable=(TypeVariable)type;
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 09:35:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
-Type type=this.contextualActualTypeParameters.get(typeParameter);
+ Type type=this.contextualActualTypeParameters.get(typeParameter);
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 09:36:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
 return getActualTypeArgumentFor(typeVariable);
 }
-return type;
+return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V8/1194/pattern-ver1-serial/src.backend.rest.SaveUserCompetences.java-saveUserCompetences.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 09:36:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
-Type type=this.contextualActualTypeParameters.get(typeParameter);
+Type type=this.contextualActualTypeParameters.remove(typeParameter);
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2015/V31/2156/pattern-ver1-serial/src.server.Server.java-addScheduledFailure.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 09:37:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
 return getActualTypeArgumentFor(typeVariable);
 }
-return type;
+return typeParameter;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/6187/pattern-ver1-serial/device-manager.core.src.main.java.org.dc.bco.manager.device.core.AbstractDeviceFactory.java-newInstance.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 09:37:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
-Type type=this.contextualActualTypeParameters.get(typeParameter);
+ final Type type=this.contextualActualTypeParameters.get(typeParameter);
 if(type instanceof TypeVariable){
-TypeVariable typeVariable=(TypeVariable)type;
+ final TypeVariable typeVariable=(TypeVariable)type;
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 09:38:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
-Type type=this.contextualActualTypeParameters.get(typeParameter);
+ Type type=this.contextualActualTypeParameters.get(typeParameter);
 if(type instanceof TypeVariable){
-TypeVariable typeVariable=(TypeVariable)type;
+ TypeVariable typeVariable=(TypeVariable)type;
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 09:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
-return getActualTypeArgumentFor(typeVariable);
+return null;
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 09:39:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
-if(type instanceof TypeVariable){
+if(true){
 TypeVariable typeVariable=(TypeVariable)type;
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 09:39:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
-return getActualTypeArgumentFor(typeVariable);
+return type;
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2016/V26/2138/pattern-ver1-serial/controllersvc.src.main.java.com.emc.storageos.blockorchestrationcontroller.VolumeDescriptor.java-getType.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 09:40:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
-return getActualTypeArgumentFor(typeVariable);
+return (Type)getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5127/pattern-ver1-serial/com.buglabs.common.com.buglabs.bug.sysfs.BMIDevice.java-apply.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 09:40:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
-return getActualTypeArgumentFor(typeVariable);
+return typeVariable;
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2016/V40/3906/pattern-ver1-serial/tetrad-lib.src.main.java.edu.cmu.tetrad.algcomparison.algorithm.oracle.pag.Ccd.java-getComparisonGraph.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 09:41:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
+getActualTypeArgumentFor(typeVariable);
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 09:41:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
 return getActualTypeArgumentFor(typeVariable);
 }
+getActualTypeArgumentFor(typeParameter);
 return type;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 09:42:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
-return getActualTypeArgumentFor(typeVariable);
+return typeParameter;
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/6187/pattern-ver1-serial/device-manager.core.src.main.java.org.dc.bco.manager.device.core.AbstractDeviceFactory.java-newInstance.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 09:42:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
-return getActualTypeArgumentFor(typeVariable);
+return (Type)(getActualTypeArgumentFor(typeVariable));
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 09:43:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
+synchronized(this){
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
 return getActualTypeArgumentFor(typeVariable);
+}
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 09:44:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
+type=typeVariable;
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 09:44:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
+typeVariable=typeVariable;
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 09:45:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
+type=type;
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 09:45:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
 if(type instanceof TypeVariable){
+int a=0;
 TypeVariable typeVariable=(TypeVariable)type;
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 09:46:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
+int a=0;
 Type type=this.contextualActualTypeParameters.get(typeParameter);
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 09:46:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
+String OUTSTRING="";
 Type type=this.contextualActualTypeParameters.get(typeParameter);
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 09:47:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
 if(type instanceof TypeVariable){
+String OUTSTRING="";
 TypeVariable typeVariable=(TypeVariable)type;
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 09:47:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
+if(equals(typeVariable)){
+return null;
+}
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 09:48:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
+if(equals(typeParameter)){
+return null;
+}
 Type type=this.contextualActualTypeParameters.get(typeParameter);
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 09:49:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
 if(type instanceof TypeVariable){
+if(equals(type)){
+return null;
+}
 TypeVariable typeVariable=(TypeVariable)type;
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 09:49:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
+if(equals(type)){
+return null;
+}
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 09:50:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
 if(type instanceof TypeVariable){
+int a=1;
 TypeVariable typeVariable=(TypeVariable)type;
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 09:50:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
+int a=1;
 Type type=this.contextualActualTypeParameters.get(typeParameter);
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 09:51:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
 if(type instanceof TypeVariable){
+boolean b=true;
 TypeVariable typeVariable=(TypeVariable)type;
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 09:51:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
+boolean b=true;
 Type type=this.contextualActualTypeParameters.get(typeParameter);
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 09:52:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
+if(typeVariable==null){
+return null;
+}
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 09:52:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
+if(typeParameter==null){
+return null;
+}
 Type type=this.contextualActualTypeParameters.get(typeParameter);
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 09:53:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
+if(type==null){
+return null;
+}
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 09:53:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
 if(type instanceof TypeVariable){
+if(type==null){
+return null;
+}
 TypeVariable typeVariable=(TypeVariable)type;
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 09:54:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
+if(this.contextualActualTypeParameters==null){
+return null;
+}
 Type type=this.contextualActualTypeParameters.get(typeParameter);
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 09:55:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
 return getActualTypeArgumentFor(typeVariable);
+}
+if(type==null){
+return null;
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V6/4291/pattern-ver1-serial/src.ar.edu.it.itba.pdc.Implementations.proxy.client.ProxyClientSelectorProtocol.java-handleWrite.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 09:55:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
+if("&null".equals(typeVariable)){
+return null;
+}
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 09:56:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
+if("&null".equals(typeParameter)){
+return null;
+}
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 09:56:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
+if("&null".equals(type)){
+return null;
+}
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 09:57:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
+if("&null".equals(type)){
+return null;
+}
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 09:57:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
+if(typeVariable.equals("-1")){
+return null;
+}
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 09:58:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
+if(type.equals("-1")){
+return null;
+}
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 09:59:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
+assert (typeVariable!=null);
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 09:59:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
+assert (typeParameter!=null);
 Type type=this.contextualActualTypeParameters.get(typeParameter);
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:00:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
+assert (type!=null);
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:00:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
 if(type instanceof TypeVariable){
+assert (type!=null);
 TypeVariable typeVariable=(TypeVariable)type;
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:01:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
+if(typeParameter.equals(InputStream.class)){
+return typeVariable;
+}
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:01:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
+if(type.equals(InputStream.class)){
+return typeVariable;
+}
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:02:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
+if(typeVariable.equals(InputStream.class)){
+return type;
+}
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:02:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
+if(type.equals(InputStream.class)){
+return typeParameter;
+}
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:03:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
 if(type instanceof TypeVariable){
+if(typeParameter.equals(InputStream.class)){
+return type;
+}
 TypeVariable typeVariable=(TypeVariable)type;
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:04:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
+if(typeParameter.equals(InputStream.class)){
+return type;
+}
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:04:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
 if(type instanceof TypeVariable){
+if(type!=null){
+TypeVariable typeVariable=(TypeVariable)type;
+return getActualTypeArgumentFor(typeVariable);
+}
 TypeVariable typeVariable=(TypeVariable)type;
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:05:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
+if(typeParameter!=null){
+Type type=this.contextualActualTypeParameters.get(typeParameter);
+if(type instanceof TypeVariable){
+TypeVariable typeVariable=(TypeVariable)type;
+return getActualTypeArgumentFor(typeVariable);
+}
+return type;
+}
 Type type=this.contextualActualTypeParameters.get(typeParameter);
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:05:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
+if(typeVariable.getName().isEmpty()){
+return null;
+}
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2015/V38/7204/pattern-ver1-serial/src.main.java.sg.edu.nus.cs2103t.omnitask.logic.DataImpl.java-addTask.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:06:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
+if(typeParameter.getName().isEmpty()){
+return null;
+}
 Type type=this.contextualActualTypeParameters.get(typeParameter);
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2015/V38/7204/pattern-ver1-serial/src.main.java.sg.edu.nus.cs2103t.omnitask.logic.DataImpl.java-addTask.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:06:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
+assert (typeVariable!=(TypeVariable)type);
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:07:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
+assert (type!=this.contextualActualTypeParameters.get(typeParameter));
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:07:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
+assert (typeParameter!=null);
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:08:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
+assert (type!=null);
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:09:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
+if(typeVariable.equals("655")){
+System.out.println();
+}
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:09:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
+if(type.equals("655")){
+System.out.println();
+}
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:10:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
 return getActualTypeArgumentFor(typeVariable);
+}
+if(type.equals("655")){
+System.out.println();
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:10:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
+if((Thread.currentThread().interrupted())){
+return null;
+}
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:11:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
+if((Thread.currentThread().interrupted())){
+return null;
+}
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:11:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
 return getActualTypeArgumentFor(typeVariable);
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 return type;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:12:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
+assert (typeVariable!=null):"Appointments day is not allowed to be null!";
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:12:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
+assert (typeParameter!=null):"Appointments day is not allowed to be null!";
 Type type=this.contextualActualTypeParameters.get(typeParameter);
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:13:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
 if(type instanceof TypeVariable){
+assert (type!=null):"Appointments day is not allowed to be null!";
 TypeVariable typeVariable=(TypeVariable)type;
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:13:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
+assert (type!=null):"Appointments day is not allowed to be null!";
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:14:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
+import java.util.HashSet;
+
+import java.util.Collections;
+
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
+if(this.contextualActualTypeParameters.isEmpty()){
+this.contextualActualTypeParameters=null;
+}
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/6949/pattern-ver1-serial/app.src.main.java.com.peprally.jeremy.peprally.db_models.DBUserProfile.java-removeConversationId.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:14:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
-if(type instanceof TypeVariable){
+if(type!=null&&type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/1721/pattern-ver1-serial/src.com.sebrichard.mfgen.inspection.InspectingMetaFields.java-visitClass.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:15:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
 if(type instanceof TypeVariable){
+synchronized(this){
 TypeVariable typeVariable=(TypeVariable)type;
 return getActualTypeArgumentFor(typeVariable);
+}
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:15:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
+if(this.contextualActualTypeParameters==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 Type type=this.contextualActualTypeParameters.get(typeParameter);
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:16:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
+if(typeParameter==null){
+throw new IllegalStateException("Cannot instantiate Page whitout String url constructor parameter or @PageURL class annotation");
+}
 Type type=this.contextualActualTypeParameters.get(typeParameter);
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/4732/pattern-ver1-serial/src.main.java.com.mgiorda.page.AbstractPage.java-AbstractPage.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:17:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
+Type t=type;
+type=null;
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
 return getActualTypeArgumentFor(typeVariable);
 }
-return type;
+return t;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5100/pattern-ver1-serial/CityGenJava.src.gameObjects.player.Player.java-drop.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 1, INS : 6, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:17:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
+if(typeVariable==null){
+throw new IllegalStateException("User isn't registered! "+type);
+}
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:18:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[181,189]
------------Candidate---------------
 protected Type getActualTypeArgumentFor(TypeVariable typeParameter){
 Type type=this.contextualActualTypeParameters.get(typeParameter);
+if(type==null){
+throw new IllegalStateException("User isn't registered! "+typeParameter);
+}
 if(type instanceof TypeVariable){
 TypeVariable typeVariable=(TypeVariable)type;
 return getActualTypeArgumentFor(typeVariable);
 }
 return type;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:18:46 CDT
--------------- END -----------------
Location : org.mockito.internal.util.reflection.GenericMetadataSupport.resolveGenericReturnType:[209, 210, 206, 200, 203]#0.2773500981126146
Compute Candidate : 2019.09.04 AD at 10:20:12 CDT - 2019.09.04 AD at 10:37:11 CDT , PNumber : 11335, CandNumber : 122 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
-Type genericReturnType=method.getGenericReturnType();
+ Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:37:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
-throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
+throw new MockitoException("Ouch, it shouldn't happen, type '"+method.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/668/pattern-ver1-serial/src.jp.ac.aiit.jointry.controllers.MainController.java-initialize.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:38:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
-throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
+throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+method);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/174/pattern-ver1-serial/src.main.java.fr.novia.zaproxyplugin.ZAProxy.java-setUpAuthenticationMethod.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:38:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
-throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
+throw new MockitoException("Ouch, it shouldn't happen, type '"+getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3451/pattern-ver1-serial/src.main.java.com.ohnosequences.typedGraphs.TypedVertex.java-outMany.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:39:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
-throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
+throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+genericReturnType+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/4130/pattern-ver1-serial/view.ProgramLoop.java-createNewUser.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:39:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
-throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
+throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+genericReturnType+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/4130/pattern-ver1-serial/view.ProgramLoop.java-createNewUser.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:40:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
-if(genericReturnType instanceof TypeVariable){
+if(true){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:40:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
-if(genericReturnType instanceof ParameterizedType){
+if(true){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:41:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
-if(genericReturnType instanceof Class){
+if(true){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:41:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
+resolveGenericReturnType(method);
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:42:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
-throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
+throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType.toString());
 }

PATTERN : /home/jiajun/GithubData/2016/V3/7313/pattern-ver1-serial/Core.astra.interpreter.src.astra.reasoner.util.ContentCodec.java-test_predicate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:43:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
-throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
+throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+genericReturnType+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/4130/pattern-ver1-serial/view.ProgramLoop.java-createNewUser.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:43:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
+synchronized(this){
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
+}
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:44:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
+synchronized(this){
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
+}
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:44:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
+synchronized(this){
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
+}
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:45:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
+synchronized(this){
 return new NotGenericReturnTypeSupport(genericReturnType);
+}
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:45:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
+method=method;
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:46:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
-throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
+throw new MockitoException("Ouch, it shouldn't happen, type '"+method+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/174/pattern-ver1-serial/src.main.java.fr.novia.zaproxyplugin.ZAProxy.java-setUpAuthenticationMethod.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:46:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
-throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
+throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/174/pattern-ver1-serial/src.main.java.fr.novia.zaproxyplugin.ZAProxy.java-setUpAuthenticationMethod.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:47:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
+int a=0;
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:47:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
+int a=0;
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:48:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
+int a=0;
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:48:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
+int a=0;
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:49:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
+String OUTSTRING="";
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:49:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
+String OUTSTRING="";
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:50:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
+String OUTSTRING="";
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:51:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
+String OUTSTRING="";
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:51:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:52:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
+if(equals(method)){
+return null;
+}
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:52:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
+}
+if(equals(genericReturnType)){
+return null;
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:53:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
+}
+if(equals(method)){
+return null;
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:53:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
+if(equals(genericReturnType)){
+return null;
+}
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:54:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
+if(equals(method)){
+return null;
+}
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:54:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
+int indexSelection=0;
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:55:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
+int a=1;
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:56:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
+int a=1;
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:56:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
+int a=1;
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:57:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
+int a=1;
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:57:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
+boolean b=true;
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:58:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
+boolean b=true;
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:59:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
+boolean b=true;
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 10:59:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
+boolean b=true;
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:00:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
+if(method==null){
+return null;
+}
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:00:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
+if(method==null){
+return null;
+}
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:01:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
+if(genericReturnType==null){
+return null;
+}
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:01:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
+if(method==null){
+return null;
+}
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:02:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
+if(genericReturnType==null){
+return null;
+}
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:03:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
+if(genericReturnType==null){
+return null;
+}
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:03:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
+}
+if(method==null){
+return null;
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:04:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
+}
+if(method==null){
+return null;
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2016/V45/2972/pattern-ver1-serial/app.src.main.java.com.nealyi.app.activity.UserProfileActivity.java-onActivityResult.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:04:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
+}
+if(genericReturnType==null){
+return null;
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V6/4291/pattern-ver1-serial/src.ar.edu.it.itba.pdc.Implementations.proxy.client.ProxyClientSelectorProtocol.java-handleWrite.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:05:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
+}
+if(genericReturnType==null){
+return null;
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V6/4291/pattern-ver1-serial/src.ar.edu.it.itba.pdc.Implementations.proxy.client.ProxyClientSelectorProtocol.java-handleWrite.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:05:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
+}
+if(genericReturnType==null){
+return null;
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V6/4291/pattern-ver1-serial/src.ar.edu.it.itba.pdc.Implementations.proxy.client.ProxyClientSelectorProtocol.java-handleWrite.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:06:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
+if("&null".equals(method)){
+return null;
+}
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:06:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
+if("&null".equals(genericReturnType)){
+return null;
+}
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:07:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
+if(genericReturnType.equals("-1")){
+return null;
+}
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:07:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
+assert (method!=null);
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:08:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
+assert (method!=null);
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:08:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
+assert (genericReturnType!=null);
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:09:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
+assert (method!=null);
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:09:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
+assert (genericReturnType!=null);
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:10:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
+assert (genericReturnType!=null);
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:11:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
+if(method!=null){
+return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
+}
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:11:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
+if(method!=null){
+Type genericReturnType=method.getGenericReturnType();
+if(genericReturnType instanceof Class){
+return new NotGenericReturnTypeSupport(genericReturnType);
+}
+if(genericReturnType instanceof ParameterizedType){
+return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
+}
+if(genericReturnType instanceof TypeVariable){
+return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
+}
+throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
+}
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:12:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
+if(method!=null){
+return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
+}
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:12:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
+if(genericReturnType!=null){
+return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
+}
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:13:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
+if(method.getName().isEmpty()){
+return null;
+}
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2015/V38/7204/pattern-ver1-serial/src.main.java.sg.edu.nus.cs2103t.omnitask.logic.DataImpl.java-addTask.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:13:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
+}
+if(method.getName().isEmpty()){
+return null;
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2015/V38/7204/pattern-ver1-serial/src.main.java.sg.edu.nus.cs2103t.omnitask.logic.DataImpl.java-addTask.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:14:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
+if(method.getName().isEmpty()){
+return null;
+}
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2015/V38/7204/pattern-ver1-serial/src.main.java.sg.edu.nus.cs2103t.omnitask.logic.DataImpl.java-addTask.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:14:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
+if(method.getName().isEmpty()){
+return null;
+}
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2015/V38/7204/pattern-ver1-serial/src.main.java.sg.edu.nus.cs2103t.omnitask.logic.DataImpl.java-addTask.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:15:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
+}
+if(method.getName().isEmpty()){
+return null;
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2015/V38/7204/pattern-ver1-serial/src.main.java.sg.edu.nus.cs2103t.omnitask.logic.DataImpl.java-addTask.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:16:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
+assert (genericReturnType!=method.getGenericReturnType());
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:16:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
+assert (method!=null);
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:17:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
+}
+if(genericReturnType.equals("655")){
+System.out.println();
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:17:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
+}
+if(genericReturnType.equals("655")){
+System.out.println();
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:18:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
+}
+if(genericReturnType.equals("655")){
+System.out.println();
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:18:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
+if((Thread.currentThread().interrupted())){
+return null;
+}
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:19:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
-throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
+throw new MockitoException(method+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/222/pattern-ver1-serial/src.com.yuval.aiconnotation.FileSystem.java-saveObject.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:19:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
-throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
+throw new MockitoException(genericReturnType+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/222/pattern-ver1-serial/src.com.yuval.aiconnotation.FileSystem.java-saveObject.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:20:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:20:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:20:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
+assert (method!=null):"Appointments day is not allowed to be null!";
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:21:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
+assert (genericReturnType!=null):"Appointments day is not allowed to be null!";
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:21:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
+assert (method!=null):"Appointments day is not allowed to be null!";
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
+assert (method!=null):"Appointments day is not allowed to be null!";
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:23:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
+assert (genericReturnType!=null):"Appointments day is not allowed to be null!";
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:23:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
+assert (genericReturnType!=null):"Appointments day is not allowed to be null!";
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:24:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
-if(genericReturnType instanceof TypeVariable){
+if(genericReturnType!=null&&genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/1721/pattern-ver1-serial/src.com.sebrichard.mfgen.inspection.InspectingMetaFields.java-visitClass.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:24:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
-if(genericReturnType instanceof ParameterizedType){
+if(genericReturnType!=null&&genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/1721/pattern-ver1-serial/src.com.sebrichard.mfgen.inspection.InspectingMetaFields.java-visitClass.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:25:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
-if(genericReturnType instanceof Class){
+if(genericReturnType!=null&&genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/1721/pattern-ver1-serial/src.com.sebrichard.mfgen.inspection.InspectingMetaFields.java-visitClass.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:25:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
-return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
+return this;
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2015/V4/2420/pattern-ver1-serial/Nian_Karl.QL.src.org.uva.ql.ast.value.Undefined.java-getValue.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:27:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
-return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
+return null;
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:28:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
+synchronized(this){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
+}
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:28:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
+if(method==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:29:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
+}
+if(method==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:29:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
+if(method==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:30:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
+if(method==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:31:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
+}
+if(method==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:31:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
+}
+if(method==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:32:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
-return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
+return (GenericMetadataSupport)new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5127/pattern-ver1-serial/com.buglabs.common.com.buglabs.bug.sysfs.BMIDevice.java-apply.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:32:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
+boolean haveBreadCrumbs=false;
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
-if(genericReturnType instanceof TypeVariable){
+if(genericReturnType instanceof TypeVariable&&haveBreadCrumbs){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:33:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
-if(genericReturnType instanceof ParameterizedType){
+boolean haveBreadCrumbs=false;
+if(genericReturnType instanceof ParameterizedType&&haveBreadCrumbs){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:33:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
-return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
+return (GenericMetadataSupport)(new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType));
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:34:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
+synchronized(this){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
+}
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:34:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
-throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
+throw new MockitoException(method+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/222/pattern-ver1-serial/src.com.yuval.aiconnotation.FileSystem.java-saveObject.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:35:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
+if(genericReturnType==null){
+throw new IllegalStateException("User isn't registered! "+method);
+}
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:36:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
-return new NotGenericReturnTypeSupport(genericReturnType);
+return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
-return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
+return new NotGenericReturnTypeSupport(genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/606/pattern-ver1-serial/aws-java-sdk-s3.src.main.java.com.amazonaws.services.s3.internal.BucketNameUtils.java-isValidV2BucketName.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:36:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
-return new NotGenericReturnTypeSupport(genericReturnType);
+return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof ParameterizedType){
-return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
+return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/606/pattern-ver1-serial/aws-java-sdk-s3.src.main.java.com.amazonaws.services.s3.internal.BucketNameUtils.java-isValidV2BucketName.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:37:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
+if(method==null||genericReturnType==null){
+throw new NullPointerException();
+}
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:37:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
+if(genericReturnType==null||method==null){
+throw new NullPointerException();
+}
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:38:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
+}
+if(method==null||genericReturnType==null){
+throw new NullPointerException();
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:38:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
+}
+if(genericReturnType==null||method==null){
+throw new NullPointerException();
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:39:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
+}
+if(method==null||genericReturnType==null){
+throw new NullPointerException();
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:39:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
+}
+if(genericReturnType==null||method==null){
+throw new NullPointerException();
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:40:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
-throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
+throw new MockitoException(method+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/222/pattern-ver1-serial/src.com.yuval.aiconnotation.FileSystem.java-saveObject.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:41:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
-return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
+return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 if(genericReturnType instanceof TypeVariable){
-return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
+return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/606/pattern-ver1-serial/aws-java-sdk-s3.src.main.java.com.amazonaws.services.s3.internal.BucketNameUtils.java-isValidV2BucketName.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 13, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:41:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
+long startTime=System.currentTimeMillis();
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
 throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:42:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
-throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
+throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType+" -u "+method);
 }

PATTERN : /home/jiajun/GithubData/2015/V38/5800/pattern-ver1-serial/tools.gsissh.src.main.java.org.apache.airavata.gsi.ssh.api.job.SlurmJobConfiguration.java-getJobIdMonitorCommand.pattern
MATCHLEVEL : ALL
ALL : 14, UPD : 14, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:42:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
-throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
+throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType+" -u "+genericReturnType);
 }

PATTERN : /home/jiajun/GithubData/2015/V38/5800/pattern-ver1-serial/tools.gsissh.src.main.java.org.apache.airavata.gsi.ssh.api.job.SlurmJobConfiguration.java-getJobIdMonitorCommand.pattern
MATCHLEVEL : ALL
ALL : 14, UPD : 14, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:43:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
+String loc="Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType;
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
-throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
+throw new MockitoException(loc);
 }

PATTERN : /home/jiajun/GithubData/2016/V8/5610/pattern-ver1-serial/app.src.main.java.com.toddburgessmedia.stackoverflowretrofit.MeetupActivity.java-onNext.pattern
MATCHLEVEL : ALL
ALL : 17, UPD : 14, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:43:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
+ final String currency="Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType;
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
-throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
+throw new MockitoException(currency);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/3650/pattern-ver1-serial/projects.OG-Financial.src.com.opengamma.financial.analytics.model.future.InterestRateFutureDefaultValuesFunction.java-canApplyTo.pattern
MATCHLEVEL : ALL
ALL : 17, UPD : 14, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:44:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[193,214]
------------Candidate---------------
 public GenericMetadataSupport resolveGenericReturnType(Method method){
 Type genericReturnType=method.getGenericReturnType();
+ final String currency="Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType;
 if(genericReturnType instanceof Class){
 return new NotGenericReturnTypeSupport(genericReturnType);
 }
 if(genericReturnType instanceof ParameterizedType){
 return new ParameterizedReturnType(this,method.getTypeParameters(),(ParameterizedType)method.getGenericReturnType());
 }
 if(genericReturnType instanceof TypeVariable){
 return new TypeVariableReturnType(this,method.getTypeParameters(),(TypeVariable)genericReturnType);
 }
-throw new MockitoException("Ouch, it shouldn't happen, type '"+genericReturnType.getClass().getCanonicalName()+"' on method : '"+method.toGenericString()+"' is not supported : "+genericReturnType);
+throw new MockitoException(currency);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/3650/pattern-ver1-serial/projects.OG-Financial.src.com.opengamma.financial.analytics.model.future.InterestRateFutureDefaultValuesFunction.java-canApplyTo.pattern
MATCHLEVEL : ALL
ALL : 17, UPD : 14, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:44:57 CDT
--------------- END -----------------
Location : org.mockito.internal.util.reflection.GenericMetadataSupport.TypeVariableReturnType:[362, 363, 364, 365, 367, 368]#0.2773500981126146
Compute Candidate : 2019.09.04 AD at 11:46:19 CDT - 2019.09.04 AD at 11:53:29 CDT , PNumber : 11276, CandNumber : 92 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
 this.typeParameters=typeParameters;
 this.typeVariable=typeVariable;
-this.contextualActualTypeParameters=source.contextualActualTypeParameters;
+this.contextualActualTypeParameters=null;
 readTypeParameters();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2015/V19/2637/pattern-ver1-serial/de.bund.bfr.knime.openkrise.views.src.de.bund.bfr.knime.openkrise.views.gisgraphview.GraphSettings.java-GraphSettings.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:54:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
-this.typeParameters=typeParameters;
+this.typeParameters=null;
 this.typeVariable=typeVariable;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2015/V19/2637/pattern-ver1-serial/de.bund.bfr.knime.openkrise.views.src.de.bund.bfr.knime.openkrise.views.gisgraphview.GraphSettings.java-GraphSettings.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:54:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
 this.typeParameters=typeParameters;
-this.typeVariable=typeVariable;
+this.typeVariable=null;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2015/V19/2637/pattern-ver1-serial/de.bund.bfr.knime.openkrise.views.src.de.bund.bfr.knime.openkrise.views.gisgraphview.GraphSettings.java-GraphSettings.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:55:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
 this.typeParameters=typeParameters;
 this.typeVariable=typeVariable;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
-readTypeParameters();
+toString();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2015/V31/7441/pattern-ver1-serial/HelloWorld.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:55:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
 this.typeParameters=typeParameters;
 this.typeVariable=typeVariable;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
-readTypeVariables();
+toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V31/7441/pattern-ver1-serial/HelloWorld.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:57:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
+synchronized(this){
 this.typeParameters=typeParameters;
+}
 this.typeVariable=typeVariable;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2015/V20/1267/pattern-ver1-serial/src.main.java.io.vertx.ext.shell.command.impl.ProcessImpl.java-endHandler.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:58:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
 this.typeParameters=typeParameters;
+synchronized(this){
 this.typeVariable=typeVariable;
+}
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2015/V20/1267/pattern-ver1-serial/src.main.java.io.vertx.ext.shell.command.impl.ProcessImpl.java-endHandler.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:58:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
-public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
-this.typeParameters=typeParameters;
+public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] bindingModes,TypeVariable typeVariable){
+this.typeParameters=bindingModes;
 this.typeVariable=typeVariable;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2015/V15/912/pattern-ver1-serial/leshan-core.src.main.java.org.eclipse.leshan.core.request.RegisterRequest.java-RegisterRequest.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 11:59:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
-public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
+public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable bindingModes){
 this.typeParameters=typeParameters;
-this.typeVariable=typeVariable;
+this.typeVariable=bindingModes;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2015/V15/912/pattern-ver1-serial/leshan-core.src.main.java.org.eclipse.leshan.core.request.RegisterRequest.java-RegisterRequest.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:00:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
-public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
-this.typeParameters=typeParameters;
+public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] collectorManager,TypeVariable typeVariable){
+this.typeParameters=collectorManager;
 this.typeVariable=typeVariable;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2016/V3/328/pattern-ver1-serial/hadoop-yarn-project.hadoop-yarn.hadoop-yarn-server.hadoop-yarn-server-resourcemanager.src.main.java.org.apache.hadoop.yarn.server.resourcemanager.RMActiveServiceContext.java-setRMTimelineCollectorManager.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:00:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
-public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
+public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable collectorManager){
 this.typeParameters=typeParameters;
-this.typeVariable=typeVariable;
+this.typeVariable=collectorManager;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2016/V3/328/pattern-ver1-serial/hadoop-yarn-project.hadoop-yarn.hadoop-yarn-server.hadoop-yarn-server-resourcemanager.src.main.java.org.apache.hadoop.yarn.server.resourcemanager.RMActiveServiceContext.java-setRMTimelineCollectorManager.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:01:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
-this.typeParameters=typeParameters;
+this.typeParameters=typeParameters.clone();
 this.typeVariable=typeVariable;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V24/52/pattern-ver1-serial/src.nl.esciencecenter.diffevo.ListOfParameterCombinations.java-setModelResults.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:01:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
-public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
-this.typeParameters=typeParameters;
+public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] parentFileShare,TypeVariable typeVariable){
+this.typeParameters=parentFileShare;
 this.typeVariable=typeVariable;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2016/V26/5246/pattern-ver1-serial/dbclient.src.main.java.com.emc.storageos.db.client.model.FileShare.java-setParentFileShare.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:02:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
-public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
+public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable parentFileShare){
 this.typeParameters=typeParameters;
-this.typeVariable=typeVariable;
+this.typeVariable=parentFileShare;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2016/V26/5246/pattern-ver1-serial/dbclient.src.main.java.com.emc.storageos.db.client.model.FileShare.java-setParentFileShare.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:02:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
-public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
-this.typeParameters=typeParameters;
+public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] pIssued,TypeVariable typeVariable){
+this.typeParameters=pIssued;
 this.typeVariable=typeVariable;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4702/pattern-ver1-serial/snp.core.src.main.java.com.github.jlgrock.snp.core.domain.Observation.java-setIssued.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:03:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
-public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
+public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable pIssued){
 this.typeParameters=typeParameters;
-this.typeVariable=typeVariable;
+this.typeVariable=pIssued;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4702/pattern-ver1-serial/snp.core.src.main.java.com.github.jlgrock.snp.core.domain.Observation.java-setIssued.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:03:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
-public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
-this.typeParameters=typeParameters;
+public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] Pin,TypeVariable typeVariable){
+this.typeParameters=Pin;
 this.typeVariable=typeVariable;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2016/V18/3652/pattern-ver1-serial/CircuitSimulator.src.main.java.model.NotGate.java-setPin.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:04:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
-public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
+public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable Pin){
 this.typeParameters=typeParameters;
-this.typeVariable=typeVariable;
+this.typeVariable=Pin;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2016/V18/3652/pattern-ver1-serial/CircuitSimulator.src.main.java.model.NotGate.java-setPin.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:05:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
 this.typeParameters=typeParameters;
 this.typeVariable=typeVariable;
+synchronized(this){
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
+}
 readTypeParameters();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2016/V27/3450/pattern-ver1-serial/hbase-server.src.main.java.org.apache.hadoop.hbase.security.visibility.VisibilityController.java-postOpen.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:05:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
 this.typeParameters=typeParameters;
 this.typeVariable=typeVariable;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
-readTypeParameters();
+try{
 readTypeVariables();
+}finally{
+readTypeParameters();
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 1, INS : 0, DEL : 1
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:06:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
 this.typeParameters=typeParameters;
 this.typeVariable=typeVariable;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
+try{
 readTypeParameters();
+}finally{
 readTypeVariables();
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 1, INS : 0, DEL : 1
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:06:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
+try{
 this.typeParameters=typeParameters;
+}finally{
+readTypeParameters();
+}
 this.typeVariable=typeVariable;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
-readTypeParameters();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 1, INS : 0, DEL : 1
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:07:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
 this.typeParameters=typeParameters;
+try{
 this.typeVariable=typeVariable;
-this.contextualActualTypeParameters=source.contextualActualTypeParameters;
+}finally{
 readTypeParameters();
+}
+this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 1, INS : 0, DEL : 1
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:07:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
+try{
 this.typeParameters=typeParameters;
+}finally{
+readTypeVariables();
+}
 this.typeVariable=typeVariable;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
-readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 1, INS : 0, DEL : 1
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:08:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
 this.typeParameters=typeParameters;
+try{
 this.typeVariable=typeVariable;
+}finally{
+readTypeVariables();
+}
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
-readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 1, INS : 0, DEL : 1
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:08:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
-public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
-this.typeParameters=typeParameters;
+public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] graphdbInput,TypeVariable typeVariable){
+this.typeParameters=graphdbInput;
 this.typeVariable=typeVariable;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2015/V2/6934/pattern-ver1-serial/src.main.java.graph.ItemGraph.java-ItemGraph.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:09:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
-public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
+public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable graphdbInput){
 this.typeParameters=typeParameters;
-this.typeVariable=typeVariable;
+this.typeVariable=graphdbInput;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2015/V2/6934/pattern-ver1-serial/src.main.java.graph.ItemGraph.java-ItemGraph.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:09:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
 this.typeParameters=typeParameters;
 this.typeVariable=typeVariable;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
+synchronized(this){
 readTypeParameters();
+}
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:10:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
 this.typeParameters=typeParameters;
 this.typeVariable=typeVariable;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
+synchronized(this){
 readTypeVariables();
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:11:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
-public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
-this.typeParameters=typeParameters;
+public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] thePrescribeMedicationCntl,TypeVariable typeVariable){
+this.typeParameters=thePrescribeMedicationCntl;
 this.typeVariable=typeVariable;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2016/V2/1366/pattern-ver1-serial/src.healthhub.PrescribeMedicationUI_2.java-PrescribeMedicationUI_2.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:11:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
-public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
+public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable thePrescribeMedicationCntl){
 this.typeParameters=typeParameters;
-this.typeVariable=typeVariable;
+this.typeVariable=thePrescribeMedicationCntl;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2016/V2/1366/pattern-ver1-serial/src.healthhub.PrescribeMedicationUI_2.java-PrescribeMedicationUI_2.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:12:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
 this.typeParameters=typeParameters;
 this.typeVariable=typeVariable;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
 readTypeVariables();
+while(true){
+
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:12:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
-public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
-this.typeParameters=typeParameters;
+public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] pScore,TypeVariable typeVariable){
+this.typeParameters=pScore;
 this.typeVariable=typeVariable;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2015/V31/2501/pattern-ver1-serial/plugins.idea.betterdocsidea.src.main.java.com.imaginea.betterdocs.ESQuery.java-setScore.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:13:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
-public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
+public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable pScore){
 this.typeParameters=typeParameters;
-this.typeVariable=typeVariable;
+this.typeVariable=pScore;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2015/V31/2501/pattern-ver1-serial/plugins.idea.betterdocsidea.src.main.java.com.imaginea.betterdocs.ESQuery.java-setScore.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:13:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
-public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
-this.typeParameters=typeParameters;
+public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] pterm,TypeVariable typeVariable){
+this.typeParameters=pterm;
 this.typeVariable=typeVariable;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2015/V24/2712/pattern-ver1-serial/plugins.idea.betterdocsidea.src.main.java.com.imaginea.betterdocs.ESFileContent.java-setTerm.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:14:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
-public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
+public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable pterm){
 this.typeParameters=typeParameters;
-this.typeVariable=typeVariable;
+this.typeVariable=pterm;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2015/V24/2712/pattern-ver1-serial/plugins.idea.betterdocsidea.src.main.java.com.imaginea.betterdocs.ESFileContent.java-setTerm.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:14:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
-public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
-this.typeParameters=typeParameters;
+public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] boid,TypeVariable typeVariable){
+this.typeParameters=boid;
 this.typeVariable=typeVariable;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2016/V11/6684/pattern-ver1-serial/src.veiw.BoidVeiwer.java-BoidVeiwer.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:15:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
-public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
+public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable boid){
 this.typeParameters=typeParameters;
-this.typeVariable=typeVariable;
+this.typeVariable=boid;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2016/V11/6684/pattern-ver1-serial/src.veiw.BoidVeiwer.java-BoidVeiwer.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:16:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
 this.typeParameters=typeParameters;
 this.typeVariable=typeVariable;
+source=this;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2016/V22/4878/pattern-ver1-serial/app.src.main.java.com.trukr.shipper.activity.Notification.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:16:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
 this.typeParameters=typeParameters;
 this.typeVariable=typeVariable;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
+source=source;
 readTypeParameters();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:17:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
 this.typeParameters=typeParameters;
 this.typeVariable=typeVariable;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
+typeParameters=typeParameters;
 readTypeParameters();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:17:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
 this.typeParameters=typeParameters;
 this.typeVariable=typeVariable;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
+typeVariable=typeVariable;
 readTypeParameters();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:18:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
+Arrays.sort(typeParameters);
 this.typeParameters=typeParameters;
 this.typeVariable=typeVariable;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V24/5055/pattern-ver1-serial/cli.src.main.java.com.vmware.bdd.cli.commands.ClusterCommands.java-getCluster.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:18:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
 this.typeParameters=typeParameters;
 this.typeVariable=typeVariable;
+if(this.contextualActualTypeParameters==null){
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
+}
 readTypeParameters();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V53/4035/pattern-ver1-serial/whois-client.src.main.java.net.ripe.db.whois.common.rpsl.RpslAttribute.java-extractCleanValueAndComment.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:19:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
+int a=0;
 this.typeParameters=typeParameters;
 this.typeVariable=typeVariable;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:19:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
+String OUTSTRING="";
 this.typeParameters=typeParameters;
 this.typeVariable=typeVariable;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:20:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
 this.typeParameters=typeParameters;
 this.typeVariable=typeVariable;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
 readTypeVariables();
+int contextualActualTypeParameters=5;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:21:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
 this.typeParameters=typeParameters;
 this.typeVariable=typeVariable;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:21:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
+int contextualActualTypeParameters=8;
 this.typeParameters=typeParameters;
 this.typeVariable=typeVariable;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2016/V32/2823/pattern-ver1-serial/app.src.main.java.com.scanner.cardreader.BradleyThreshold.java-getHalfOfFrame.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:22:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
 this.typeParameters=typeParameters;
 this.typeVariable=typeVariable;
+if(equals(source)){
+return ;
+}
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:22:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
 this.typeParameters=typeParameters;
 this.typeVariable=typeVariable;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
+int indexSelection=0;
 readTypeParameters();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:23:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
+int a=1;
 this.typeParameters=typeParameters;
 this.typeVariable=typeVariable;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:24:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
+String contextualActualTypeParameters="%#.&f";
 this.typeParameters=typeParameters;
 this.typeVariable=typeVariable;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4517/pattern-ver1-serial/src.com.amadeus.cmath.MatrixPrinter.java-printMatrix.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:24:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
 this.typeParameters=typeParameters;
 this.typeVariable=typeVariable;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
 readTypeVariables();
+boolean contextualActualTypeParameters=true;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:25:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
+boolean b=true;
 this.typeParameters=typeParameters;
 this.typeVariable=typeVariable;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:25:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
+try{
 this.typeParameters=typeParameters;
+}finally{
+readTypeVariables();
+}
 this.typeVariable=typeVariable;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
-readTypeParameters();
-readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2113/pattern-ver1-serial/src.main.java.hudson.plugins.perforce.QuickRestoreCall.java-call.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 1, INS : 0, DEL : 2
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:26:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
 this.typeParameters=typeParameters;
 this.typeVariable=typeVariable;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
 readTypeVariables();
+boolean loggingIn=false;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/2030/pattern-ver1-serial/src.client.gui.batchstate.BatchState.java-BatchState.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:26:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
 this.typeParameters=typeParameters;
 this.typeVariable=typeVariable;
+if(source==null){
+return ;
+}
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:27:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
+assert (source!=null);
 this.typeParameters=typeParameters;
 this.typeVariable=typeVariable;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:27:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
+assert (typeParameters!=null);
 this.typeParameters=typeParameters;
 this.typeVariable=typeVariable;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:28:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
+assert (typeVariable!=null);
 this.typeParameters=typeParameters;
 this.typeVariable=typeVariable;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:29:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
-public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
-this.typeParameters=typeParameters;
+public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] r,TypeVariable typeVariable){
+typeParameters=r;
 this.typeVariable=typeVariable;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2016/V20/3960/pattern-ver1-serial/Ports.iOSPort.src.com.codename1.impl.ios.IOSImplementation.java-setBounds.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:29:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
-public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
+public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable r){
 this.typeParameters=typeParameters;
-this.typeVariable=typeVariable;
+typeVariable=r;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2016/V20/3960/pattern-ver1-serial/Ports.iOSPort.src.com.codename1.impl.ios.IOSImplementation.java-setBounds.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:30:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
 this.typeParameters=typeParameters;
 this.typeVariable=typeVariable;
+if(this.contextualActualTypeParameters==null){
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
-readTypeParameters();
+}
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2016/V17/2963/pattern-ver1-serial/src.in.tamchow.fractal.fractals.complex.ComplexFractalGenerator.java-initFractal.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 3, INS : 0, DEL : 1
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:30:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
 this.typeParameters=typeParameters;
 this.typeVariable=typeVariable;
+if(this.contextualActualTypeParameters==null){
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
+}
 readTypeParameters();
-readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2016/V17/2963/pattern-ver1-serial/src.in.tamchow.fractal.fractals.complex.ComplexFractalGenerator.java-initFractal.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 3, INS : 0, DEL : 1
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:31:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
 this.typeParameters=typeParameters;
 this.typeVariable=typeVariable;
+if(this.contextualActualTypeParameters!=null){
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
-readTypeParameters();
+}
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2015/V24/3931/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.fetch.OFetchHelper.java-fetchCollectionRidMap.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 3, INS : 0, DEL : 1
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:31:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
 this.typeParameters=typeParameters;
 this.typeVariable=typeVariable;
+if(this.contextualActualTypeParameters!=null){
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
+}
 readTypeParameters();
-readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2015/V24/3931/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.fetch.OFetchHelper.java-fetchCollectionRidMap.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 3, INS : 0, DEL : 1
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:33:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
 this.typeParameters=typeParameters;
+assert (source!=null);
 this.typeVariable=typeVariable;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:34:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
 this.typeParameters=typeParameters;
+assert (typeParameters!=null);
 this.typeVariable=typeVariable;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:34:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
 this.typeParameters=typeParameters;
+assert (typeVariable!=null);
 this.typeVariable=typeVariable;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:35:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
 this.typeParameters=typeParameters;
 this.typeVariable=typeVariable;
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:35:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
-this.typeParameters=typeParameters;
 this.typeVariable=typeVariable;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
+try{
 readTypeParameters();
+}finally{
+this.typeParameters=typeParameters;
+}
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 1, INS : 0, DEL : 4
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:36:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
-this.typeParameters=typeParameters;
 this.typeVariable=typeVariable;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
+try{
 readTypeVariables();
+}finally{
+this.typeParameters=typeParameters;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 1, INS : 0, DEL : 4
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:36:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
 this.typeParameters=typeParameters;
-this.typeVariable=typeVariable;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
+try{
 readTypeParameters();
+}finally{
+this.typeVariable=typeVariable;
+}
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 1, INS : 0, DEL : 4
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:37:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
 this.typeParameters=typeParameters;
-this.typeVariable=typeVariable;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
+try{
 readTypeVariables();
+}finally{
+this.typeVariable=typeVariable;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 1, INS : 0, DEL : 4
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:38:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
 this.typeParameters=typeParameters;
 this.typeVariable=typeVariable;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:38:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
+assert (source!=null):"Appointments day is not allowed to be null!";
 this.typeParameters=typeParameters;
 this.typeVariable=typeVariable;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:38:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
+assert (typeParameters!=null):"Appointments day is not allowed to be null!";
 this.typeParameters=typeParameters;
 this.typeVariable=typeVariable;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:39:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
+assert (typeVariable!=null):"Appointments day is not allowed to be null!";
 this.typeParameters=typeParameters;
 this.typeVariable=typeVariable;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:40:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
 this.typeParameters=typeParameters;
 this.typeVariable=typeVariable;
+if(this.contextualActualTypeParameters==null){
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
-readTypeParameters();
-readTypeVariables();
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V32/4209/pattern-ver1-serial/app.src.main.java.com.example.sdp11.wmd.DataFragment.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 3, INS : 0, DEL : 2
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:40:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
 this.typeParameters=typeParameters;
 this.typeVariable=typeVariable;
-this.contextualActualTypeParameters=source.contextualActualTypeParameters;
+try{
 readTypeParameters();
+}finally{
 readTypeVariables();
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2113/pattern-ver1-serial/src.main.java.hudson.plugins.perforce.QuickRestoreCall.java-call.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 1, INS : 0, DEL : 5
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:41:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
 this.typeParameters=typeParameters;
 this.typeVariable=typeVariable;
-this.contextualActualTypeParameters=source.contextualActualTypeParameters;
-readTypeParameters();
+try{
 readTypeVariables();
+}finally{
+readTypeParameters();
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2113/pattern-ver1-serial/src.main.java.hudson.plugins.perforce.QuickRestoreCall.java-call.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 1, INS : 0, DEL : 5
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:41:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
 this.typeParameters=typeParameters;
 this.typeVariable=typeVariable;
-this.contextualActualTypeParameters=source.contextualActualTypeParameters;
+if(this.contextualActualTypeParameters!=source.contextualActualTypeParameters){
 readTypeParameters();
+}
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/529/pattern-ver1-serial/src.com.crankcode.threads.MediaThread.java-end.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 3, INS : 0, DEL : 4
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:42:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
 this.typeParameters=typeParameters;
 this.typeVariable=typeVariable;
-this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
+if(this.contextualActualTypeParameters!=source.contextualActualTypeParameters){
 readTypeVariables();
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/529/pattern-ver1-serial/src.com.crankcode.threads.MediaThread.java-end.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 3, INS : 0, DEL : 4
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:42:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
+if(typeParameters==null||source==null){
+throw new NullPointerException();
+}
 this.typeParameters=typeParameters;
 this.typeVariable=typeVariable;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2016/V44/1218/pattern-ver1-serial/app.src.main.java.net.danielpalma.lineupshaker.DefaultSportDataListener.java-DefaultSportDataListener.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:43:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
+if(typeParameters==null||typeVariable==null){
+throw new NullPointerException();
+}
 this.typeParameters=typeParameters;
 this.typeVariable=typeVariable;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2016/V44/1218/pattern-ver1-serial/app.src.main.java.net.danielpalma.lineupshaker.DefaultSportDataListener.java-DefaultSportDataListener.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:43:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
 this.typeParameters=typeParameters;
+if(typeVariable==null||source==null){
+throw new NullPointerException();
+}
 this.typeVariable=typeVariable;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2016/V44/1218/pattern-ver1-serial/app.src.main.java.net.danielpalma.lineupshaker.DefaultSportDataListener.java-DefaultSportDataListener.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:44:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
 this.typeParameters=typeParameters;
+if(typeVariable==null||typeParameters==null){
+throw new NullPointerException();
+}
 this.typeVariable=typeVariable;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2016/V44/1218/pattern-ver1-serial/app.src.main.java.net.danielpalma.lineupshaker.DefaultSportDataListener.java-DefaultSportDataListener.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:44:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
 this.typeParameters=typeParameters;
 this.typeVariable=typeVariable;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
+for(int i=0;i<24;i++){
 readTypeParameters();
+}
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2016/V34/7063/pattern-ver1-serial/src.application.rmi.Serveur.java-initalisationMain.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:45:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
 this.typeParameters=typeParameters;
 this.typeVariable=typeVariable;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
 readTypeParameters();
+for(int i=0;i<24;i++){
 readTypeVariables();
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V34/7063/pattern-ver1-serial/src.application.rmi.Serveur.java-initalisationMain.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:46:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
 this.typeParameters=typeParameters;
 this.typeVariable=typeVariable;
+for(int i=0;i<24;i++){
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
+}
 readTypeParameters();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2016/V34/7063/pattern-ver1-serial/src.application.rmi.Serveur.java-initalisationMain.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:46:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[362,369]
------------Candidate---------------
 public TypeVariableReturnType(GenericMetadataSupport source,TypeVariable[] typeParameters,TypeVariable typeVariable){
+long startTime=System.currentTimeMillis();
 this.typeParameters=typeParameters;
 this.typeVariable=typeVariable;
 this.contextualActualTypeParameters=source.contextualActualTypeParameters;
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 readTypeParameters();
 readTypeVariables();
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:47:12 CDT
--------------- END -----------------
Location : org.mockito.internal.util.reflection.GenericMetadataSupport.readTypeParameters:[372, 373]#0.2773500981126146
Compute Candidate : 2019.09.04 AD at 12:48:39 CDT - 2019.09.04 AD at 12:52:52 CDT , PNumber : 11280, CandNumber : 18 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[371,373]
------------Candidate---------------
 private void readTypeParameters(){
 registerTypeParametersOn(typeParameters);
+return ;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:53:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[371,373]
------------Candidate---------------
 private void readTypeParameters(){
+this.readTypeParameters();
 registerTypeParametersOn(typeParameters);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:53:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[371,373]
------------Candidate---------------
 private void readTypeParameters(){
+synchronized(this){
 registerTypeParametersOn(typeParameters);
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:54:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[371,373]
------------Candidate---------------
 private void readTypeParameters(){
 registerTypeParametersOn(typeParameters);
+while(true){
+
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:56:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[371,373]
------------Candidate---------------
 private void readTypeParameters(){
+int a=0;
 registerTypeParametersOn(typeParameters);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:57:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[371,373]
------------Candidate---------------
 private void readTypeParameters(){
+String OUTSTRING="";
 registerTypeParametersOn(typeParameters);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:57:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[371,373]
------------Candidate---------------
 private void readTypeParameters(){
 registerTypeParametersOn(typeParameters);
+int typeParameters=5;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:58:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[371,373]
------------Candidate---------------
 private void readTypeParameters(){
 registerTypeParametersOn(typeParameters);
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:58:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[371,373]
------------Candidate---------------
 private void readTypeParameters(){
 registerTypeParametersOn(typeParameters);
+int indexSelection=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:59:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[371,373]
------------Candidate---------------
 private void readTypeParameters(){
+int a=1;
 registerTypeParametersOn(typeParameters);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 12:59:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[371,373]
------------Candidate---------------
 private void readTypeParameters(){
 registerTypeParametersOn(typeParameters);
+boolean typeParameters=true;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:00:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[371,373]
------------Candidate---------------
 private void readTypeParameters(){
+boolean b=true;
 registerTypeParametersOn(typeParameters);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:00:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[371,373]
------------Candidate---------------
 private void readTypeParameters(){
 registerTypeParametersOn(typeParameters);
+if((Thread.currentThread().interrupted())){
+return ;
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:01:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[371,373]
------------Candidate---------------
 private void readTypeParameters(){
 registerTypeParametersOn(typeParameters);
+boolean loggingIn=false;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/2030/pattern-ver1-serial/src.client.gui.batchstate.BatchState.java-BatchState.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:02:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[371,373]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void readTypeParameters(){
 registerTypeParametersOn(typeParameters);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:02:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[371,373]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void readTypeParameters(){
 registerTypeParametersOn(typeParameters);
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:02:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[371,373]
------------Candidate---------------
 private void readTypeParameters(){
+for(int i=0;i<24;i++){
 registerTypeParametersOn(typeParameters);
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V34/7063/pattern-ver1-serial/src.application.rmi.Serveur.java-initalisationMain.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:03:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[371,373]
------------Candidate---------------
 private void readTypeParameters(){
+long startTime=System.currentTimeMillis();
 registerTypeParametersOn(typeParameters);
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:03:48 CDT
--------------- END -----------------
Location : org.mockito.internal.util.reflection.GenericMetadataSupport.readTypeVariables:[376, 377, 379]#0.2773500981126146
Compute Candidate : 2019.09.04 AD at 13:05:22 CDT - 2019.09.04 AD at 13:12:24 CDT , PNumber : 11283, CandNumber : 67 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
 private void readTypeVariables(){
 for(Type type : typeVariable.getBounds()){
 registerTypeVariablesOn(type);
+return ;
 }
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:12:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
 private void readTypeVariables(){
 for(Type type : typeVariable.getBounds()){
 registerTypeVariablesOn(type);
 }
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
+return ;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:13:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
 private void readTypeVariables(){
 for(Type type : typeVariable.getBounds()){
 registerTypeVariablesOn(type);
+continue;
 }
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7570/pattern-ver1-serial/src.main.java.com.rayn.jflask.framework.mvc.MultipartHelper.java-parseMultipartParamList.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:14:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
 private void readTypeVariables(){
 for(Type type : typeVariable.getBounds()){
 registerTypeVariablesOn(type);
+return ;
 }
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
+return ;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/144/pattern-ver1-serial/lettuce.src.main.java.com.lambdaworks.redis.Connections.java-close.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:14:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
 private void readTypeVariables(){
 for(Type type : typeVariable.getBounds()){
 registerTypeVariablesOn(type);
+break;
 }
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:15:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
 private void readTypeVariables(){
 for(Type type : typeVariable.getBounds()){
 registerTypeVariablesOn(type);
+registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
 }
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
 }

PATTERN : /home/jiajun/GithubData/2015/V29/3884/pattern-ver1-serial/TcpChat.src.client.gui.ClientGuiThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:15:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
 private void readTypeVariables(){
-for(Type type : typeVariable.getBounds()){
+for(Type type : this.typeVariable.getBounds()){
 registerTypeVariablesOn(type);
 }
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
 }

PATTERN : /home/jiajun/GithubData/2015/V18/4298/pattern-ver1-serial/src.main.java.org.spongepowered.api.service.command.SimpleCommandService.java-getHelp.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:16:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
 private void readTypeVariables(){
 for(Type type : typeVariable.getBounds()){
+this.readTypeVariables();
 registerTypeVariablesOn(type);
 }
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:17:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
 private void readTypeVariables(){
+this.readTypeVariables();
 for(Type type : typeVariable.getBounds()){
 registerTypeVariablesOn(type);
 }
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:17:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
 private void readTypeVariables(){
 for(Type type : typeVariable.getBounds()){
+synchronized(this){
 registerTypeVariablesOn(type);
+}
 }
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:18:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
 private void readTypeVariables(){
 for(Type type : typeVariable.getBounds()){
 registerTypeVariablesOn(type);
 }
+synchronized(this){
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:18:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
 private void readTypeVariables(){
 for(Type type : typeVariable.getBounds()){
+if(equals(type)){
+return ;
+}
 registerTypeVariablesOn(type);
 }
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:19:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
 private void readTypeVariables(){
 for(Type type : typeVariable.getBounds()){
 registerTypeVariablesOn(type);
+while(true){
+
+}
 }
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:21:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
 private void readTypeVariables(){
 for(Type type : typeVariable.getBounds()){
 registerTypeVariablesOn(type);
 }
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
+while(true){
+
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:22:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
 private void readTypeVariables(){
 for(Type type : typeVariable.getBounds()){
 registerTypeVariablesOn(type);
+if(type==null){
+return ;
+}
 }
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:22:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
 private void readTypeVariables(){
 for(Type type : typeVariable.getBounds()){
+if(type==null){
+return ;
+}
 registerTypeVariablesOn(type);
 }
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:23:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
 private void readTypeVariables(){
+if(typeVariable==null){
+return ;
+}
 for(Type type : typeVariable.getBounds()){
 registerTypeVariablesOn(type);
 }
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:23:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
 private void readTypeVariables(){
 for(Type type : typeVariable.getBounds()){
+if("index".equals(type)){
+return ;
+}
 registerTypeVariablesOn(type);
 }
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:24:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
 private void readTypeVariables(){
 for(Type type : typeVariable.getBounds()){
+if(type.equals("TIME")){
+return ;
+}
 registerTypeVariablesOn(type);
 }
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:25:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
 private void readTypeVariables(){
 for(Type type : typeVariable.getBounds()){
 registerTypeVariablesOn(type);
+if("&null".equals(type)){
+return ;
+}
 }
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:25:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 private void readTypeVariables(){
 for(Type type : typeVariable.getBounds()){
 registerTypeVariablesOn(type);
+if(type.equals("DATETIME")){
+return ;
+}
 }
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:26:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
 private void readTypeVariables(){
 for(Type type : typeVariable.getBounds()){
+registerTypeVariablesOn(type);
 registerTypeVariablesOn(type);
 }
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:26:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
 private void readTypeVariables(){
 for(Type type : typeVariable.getBounds()){
 registerTypeVariablesOn(type);
+type=type;
 }
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:27:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
 private void readTypeVariables(){
+if(typeVariable.getBounds()!=null){
 for(Type type : typeVariable.getBounds()){
 registerTypeVariablesOn(type);
+}
 }
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1943/pattern-ver1-serial/app.src.main.java.br.com.battista.myoffers.controller.OfferController.java-saveOfferInDatabase.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:28:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
 private void readTypeVariables(){
 for(Type type : typeVariable.getBounds()){
+int a=0;
 registerTypeVariablesOn(type);
 }
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:28:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
 private void readTypeVariables(){
+int a=0;
 for(Type type : typeVariable.getBounds()){
 registerTypeVariablesOn(type);
 }
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:29:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
 private void readTypeVariables(){
 for(Type type : typeVariable.getBounds()){
+String OUTSTRING="";
 registerTypeVariablesOn(type);
 }
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:29:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
 private void readTypeVariables(){
+String OUTSTRING="";
 for(Type type : typeVariable.getBounds()){
 registerTypeVariablesOn(type);
 }
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:30:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
 private void readTypeVariables(){
 for(Type type : typeVariable.getBounds()){
 registerTypeVariablesOn(type);
 }
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
+int type=5;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:30:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
 private void readTypeVariables(){
 for(Type type : typeVariable.getBounds()){
 registerTypeVariablesOn(type);
 }
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
+int typeVariable=5;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:31:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
 private void readTypeVariables(){
 for(Type type : typeVariable.getBounds()){
 registerTypeVariablesOn(type);
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:32:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
 private void readTypeVariables(){
 for(Type type : typeVariable.getBounds()){
 registerTypeVariablesOn(type);
 }
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:32:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
 private void readTypeVariables(){
 for(Type type : typeVariable.getBounds()){
 registerTypeVariablesOn(type);
+int indexSelection=0;
 }
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:33:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
 private void readTypeVariables(){
 for(Type type : typeVariable.getBounds()){
 registerTypeVariablesOn(type);
 }
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
+int indexSelection=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:33:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
 private void readTypeVariables(){
 for(Type type : typeVariable.getBounds()){
+if(type.equals("sounds")){
+continue;
+}
 registerTypeVariablesOn(type);
 }
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
 }

PATTERN : /home/jiajun/GithubData/2016/V49/2569/pattern-ver1-serial/src.main.java.net.dirtydeeds.discordsoundboard.chat.ListCategoriesProcessor.java-handleEvent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:34:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
 private void readTypeVariables(){
 for(Type type : typeVariable.getBounds()){
+int a=1;
 registerTypeVariablesOn(type);
 }
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:35:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
 private void readTypeVariables(){
+int a=1;
 for(Type type : typeVariable.getBounds()){
 registerTypeVariablesOn(type);
 }
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:35:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
 private void readTypeVariables(){
 for(Type type : typeVariable.getBounds()){
 registerTypeVariablesOn(type);
 }
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
+boolean type=true;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:36:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
 private void readTypeVariables(){
 for(Type type : typeVariable.getBounds()){
 registerTypeVariablesOn(type);
 }
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
+boolean typeVariable=true;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:37:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
 private void readTypeVariables(){
 for(Type type : typeVariable.getBounds()){
+boolean b=true;
 registerTypeVariablesOn(type);
 }
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:37:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
 private void readTypeVariables(){
+boolean b=true;
 for(Type type : typeVariable.getBounds()){
 registerTypeVariablesOn(type);
 }
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:38:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
 private void readTypeVariables(){
 for(Type type : typeVariable.getBounds()){
+if(type==null){
+continue;
+}
 registerTypeVariablesOn(type);
 }
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7058/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.manager.FileManager.java-getExternalSDCardDirectory.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:39:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
 private void readTypeVariables(){
 for(Type type : typeVariable.getBounds()){
 registerTypeVariablesOn(type);
+if((Thread.currentThread().interrupted())){
+return ;
+}
 }
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:39:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
 private void readTypeVariables(){
 for(Type type : typeVariable.getBounds()){
 registerTypeVariablesOn(type);
+}
+if((Thread.currentThread().interrupted())){
+return ;
 }
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:40:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
 private void readTypeVariables(){
 for(Type type : typeVariable.getBounds()){
 registerTypeVariablesOn(type);
+boolean loggingIn=false;
 }
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
 }

PATTERN : /home/jiajun/GithubData/2015/V28/2030/pattern-ver1-serial/src.client.gui.batchstate.BatchState.java-BatchState.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:40:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
 private void readTypeVariables(){
 for(Type type : typeVariable.getBounds()){
 registerTypeVariablesOn(type);
 }
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
+boolean loggingIn=false;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/2030/pattern-ver1-serial/src.client.gui.batchstate.BatchState.java-BatchState.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:41:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
 private void readTypeVariables(){
 for(Type type : typeVariable.getBounds()){
+registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
 registerTypeVariablesOn(type);
 }
-registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:42:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
 private void readTypeVariables(){
 for(Type type : typeVariable.getBounds()){
 registerTypeVariablesOn(type);
-}
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:42:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
 private void readTypeVariables(){
 for(Type type : typeVariable.getBounds()){
+assert (type!=null);
 registerTypeVariablesOn(type);
 }
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:43:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
 private void readTypeVariables(){
 for(Type type : typeVariable.getBounds()){
+if(type!=null){
+registerTypeVariablesOn(type);
+}
 registerTypeVariablesOn(type);
 }
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:43:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 private void readTypeVariables(){
 for(Type type : typeVariable.getBounds()){
+if(type.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 registerTypeVariablesOn(type);
 }
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:44:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
 private void readTypeVariables(){
 for(Type type : typeVariable.getBounds()){
 registerTypeVariablesOn(type);
+assert (type!=null);
 }
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:44:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
 private void readTypeVariables(){
 for(Type type : typeVariable.getBounds()){
 registerTypeVariablesOn(type);
+if(type.getClass().getSimpleName().startsWith("SystemException")){
+return ;
+}
 }
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:45:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void readTypeVariables(){
 for(Type type : typeVariable.getBounds()){
 registerTypeVariablesOn(type);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:45:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void readTypeVariables(){
 for(Type type : typeVariable.getBounds()){
 registerTypeVariablesOn(type);
 }
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:46:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void readTypeVariables(){
 for(Type type : typeVariable.getBounds()){
 registerTypeVariablesOn(type);
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:46:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void readTypeVariables(){
 for(Type type : typeVariable.getBounds()){
 registerTypeVariablesOn(type);
 }
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:46:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
 private void readTypeVariables(){
 for(Type type : typeVariable.getBounds()){
+assert (type!=null):"Appointments day is not allowed to be null!";
 registerTypeVariablesOn(type);
 }
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:47:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
 private void readTypeVariables(){
+if(typeVariable==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 for(Type type : typeVariable.getBounds()){
 registerTypeVariablesOn(type);
 }
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:47:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
 private void readTypeVariables(){
 for(Type type : typeVariable.getBounds()){
+if(type.equals("CALL_RECEIVED_AT")){
+return ;
+}
 registerTypeVariablesOn(type);
+if(type.equals("NAME")){
+return ;
+}
 }
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:48:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
 private void readTypeVariables(){
 for(Type type : typeVariable.getBounds()){
 registerTypeVariablesOn(type);
+if(type.equals("INFO")){
+return ;
+}
+if(type.equals("UNIT")){
+return ;
+}
 }
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:49:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
 private void readTypeVariables(){
 for(Type type : typeVariable.getBounds()){
 registerTypeVariablesOn(type);
-}
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
+registerTypeVariablesOn(type);
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5607/pattern-ver1-serial/src.main.java.com.jsoft.iot.mqttloadapp.runtime.RunningLoadConfiguration.java-stop.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 2, DEL : 5
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:49:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
 private void readTypeVariables(){
 for(Type type : typeVariable.getBounds()){
+registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
+registerTypeVariablesOn(type);
 registerTypeVariablesOn(type);
 }
-registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5607/pattern-ver1-serial/src.main.java.com.jsoft.iot.mqttloadapp.runtime.RunningLoadConfiguration.java-stop.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 2, DEL : 5
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:50:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
 private void readTypeVariables(){
 for(Type type : typeVariable.getBounds()){
+for(int i=0;i<24;i++){
 registerTypeVariablesOn(type);
+}
 }
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
 }

PATTERN : /home/jiajun/GithubData/2016/V34/7063/pattern-ver1-serial/src.application.rmi.Serveur.java-initalisationMain.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:51:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
 private void readTypeVariables(){
 for(Type type : typeVariable.getBounds()){
 registerTypeVariablesOn(type);
 }
+for(int i=0;i<24;i++){
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V34/7063/pattern-ver1-serial/src.application.rmi.Serveur.java-initalisationMain.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:51:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
 private void readTypeVariables(){
 for(Type type : typeVariable.getBounds()){
+long startTime=System.currentTimeMillis();
 registerTypeVariablesOn(type);
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:52:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[375,380]
------------Candidate---------------
 private void readTypeVariables(){
+long startTime=System.currentTimeMillis();
 for(Type type : typeVariable.getBounds()){
 registerTypeVariablesOn(type);
 }
 registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 13:53:07 CDT
--------------- END -----------------
Location : org.mockito.internal.util.reflection.GenericMetadataSupport.registerTypeVariableIfNotPresent:[94, 93, 97]#0.20851441405707477
Compute Candidate : 2019.09.04 AD at 13:54:45 CDT - 2019.09.04 AD at 14:02:47 CDT , PNumber : 11428, CandNumber : 104 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:03:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 }
+return ;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:04:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
+return ;
 }
+return ;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:04:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
-contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
+contextualActualTypeParameters.putIfAbsent(typeVariable,boundsOf(typeVariable));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V22/5128/pattern-ver1-serial/mbhd-core.src.main.java.org.multibit.hd.core.services.WalletService.java-addTransactionInfo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:04:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
-if(!contextualActualTypeParameters.containsKey(typeVariable)){
+if(!contextualActualTypeParameters.containsValue(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4692/pattern-ver1-serial/src.com.github.tnerevival.utils.MISCUtils.java-genUUID.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:05:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
-contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
+contextualActualTypeParameters.remove(typeVariable,boundsOf(typeVariable));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/4998/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.Adapters.CommentAdapter.java-doInBackground.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:05:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 }
+contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 }

PATTERN : /home/jiajun/GithubData/2015/V29/3884/pattern-ver1-serial/TcpChat.src.client.gui.ClientGuiThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:06:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
-contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
+this.contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V18/4298/pattern-ver1-serial/src.main.java.org.spongepowered.api.service.command.SimpleCommandService.java-getHelp.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:06:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
-if(!contextualActualTypeParameters.containsKey(typeVariable)){
+if(!this.contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V18/4298/pattern-ver1-serial/src.main.java.org.spongepowered.api.service.command.SimpleCommandService.java-getHelp.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:07:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
+synchronized(contextualActualTypeParameters){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V17/90/pattern-ver1-serial/PolibudaRun.src.HorizontalMove.java-down.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:07:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
+registerTypeVariableIfNotPresent(typeVariable);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:08:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 }
+registerTypeVariableIfNotPresent(typeVariable);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:09:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
+if(equals(typeVariable)){
+return ;
+}
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:09:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
+if(equals(typeVariable)){
+return ;
+}
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:10:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
+while(true){
+
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:12:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
+}
+while(true){
+
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:14:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
+synchronized(this){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:14:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
-if(!contextualActualTypeParameters.containsKey(typeVariable)){
+if(!contextualActualTypeParameters.remove(typeVariable,false)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/133/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.SubmissionViews.PopulateSubmissionViewHolder.java-doInBackground.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 1, INS : 1, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:15:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
+if(typeVariable==null){
+return ;
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:15:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
+}
+if(typeVariable==null){
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:16:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
+if(typeVariable==null){
+return ;
+}
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:17:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
+if(typeVariable==null){
+return ;
+}
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:17:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
+if(contextualActualTypeParameters!=null){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V8/6555/pattern-ver1-serial/app.src.main.java.com.example.uaharoni.tourdeplace.view.MapFragment.java-addPlaceMarker.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:18:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
+if(contextualActualTypeParameters==null){
+return ;
+}
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:18:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
+if(contextualActualTypeParameters==null){
+return ;
+}
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:19:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
+if("index".equals(typeVariable)){
+return ;
+}
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:19:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
+if("index".equals(typeVariable)){
+return ;
+}
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:20:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
+if(typeVariable.equals("TIME")){
+return ;
+}
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:20:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
+if(typeVariable.equals("TIME")){
+return ;
+}
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:21:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
+if("&null".equals(typeVariable)){
+return ;
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
+}
+if("&null".equals(typeVariable)){
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
+if(typeVariable.equals("DATETIME")){
+return ;
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
+}
+if(typeVariable.equals("DATETIME")){
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 }
+typeVariable=typeVariable;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
+typeVariable=typeVariable;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
+if(boundsOf(typeVariable)!=null){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/6062/pattern-ver1-serial/src.main.java.org.openarchives.resourcesync.ResourceSyncDescription.java-addCapabilityList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
+if(typeVariable!=null){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V43/991/pattern-ver1-serial/CEO.src.cs2103.CommandParser.java-separateParameters.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
+int a=0;
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
+int a=0;
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
+String OUTSTRING="";
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
+String OUTSTRING="";
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 }
+int contextualActualTypeParameters=5;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
+int contextualActualTypeParameters=5;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
+int indexSelection=0;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 }
+int indexSelection=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
+}
+if(contextualActualTypeParameters.containsKey("post")){
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/1601/pattern-ver1-serial/app.src.main.java.com.home.giraffe.objects.Jive.JivePost.java-getType.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
+if(typeVariable.getName().isEmpty()){
+return ;
+}
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V38/7204/pattern-ver1-serial/src.main.java.sg.edu.nus.cs2103t.omnitask.logic.DataImpl.java-addTask.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
+if(typeVariable.getName().isEmpty()){
+return ;
+}
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V38/7204/pattern-ver1-serial/src.main.java.sg.edu.nus.cs2103t.omnitask.logic.DataImpl.java-addTask.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
+int a=1;
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
+int a=1;
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 }
+boolean contextualActualTypeParameters=true;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
+boolean contextualActualTypeParameters=true;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
+boolean b=true;
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
+boolean b=true;
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
+if((Thread.currentThread().interrupted())){
+return ;
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
+}
+if((Thread.currentThread().interrupted())){
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
+boolean loggingIn=false;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/2030/pattern-ver1-serial/src.client.gui.batchstate.BatchState.java-BatchState.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 }
+boolean loggingIn=false;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/2030/pattern-ver1-serial/src.client.gui.batchstate.BatchState.java-BatchState.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
-if(!contextualActualTypeParameters.containsKey(typeVariable)){
+if(!!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V12/6908/pattern-ver1-serial/mainModule.src.backend.building.ProductionBuilding.java-canBuild.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
+if(contextualActualTypeParameters.size()>0){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/506/pattern-ver1-serial/app.src.main.java.com.jessie.guessnumber.MainActivity.java-delete.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
-if(!contextualActualTypeParameters.containsKey(typeVariable)){
+if(true){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
-if(!contextualActualTypeParameters.containsKey(typeVariable)){
+if(!contextualActualTypeParameters.containsKey(typeVariable)==false){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3764/pattern-ver1-serial/uDig.org.locationtech.udig.processingtoolbox.src.org.locationtech.udig.processingtoolbox.tools.TextfileToPointDialog.java-getTextColumns.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
-if(!contextualActualTypeParameters.containsKey(typeVariable)){
+if(!contextualActualTypeParameters.containsKey(typeVariable)&&false){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/5079/pattern-ver1-serial/Server.src.server.model.players.packets.ClickNPC.java-processPacket.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
-if(!contextualActualTypeParameters.containsKey(typeVariable)){
+if(contextualActualTypeParameters!=null){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/2504/pattern-ver1-serial/app.src.main.java.com.projectmanagement.benson.homeinventoryapp.Models.List.java-setKeys.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
-if(!contextualActualTypeParameters.containsKey(typeVariable)){
+if(contextualActualTypeParameters.size()==1){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/2574/pattern-ver1-serial/src.main.java.edu.umich.med.mbni.lkq.cyontology.internal.view.OntologyControlPanel.java-handleEvent.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
+assert (typeVariable!=null);
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
+assert (typeVariable!=null);
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
-if(!contextualActualTypeParameters.containsKey(typeVariable)){
+if(!contextualActualTypeParameters.containsKey(typeVariable)==true){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1922/pattern-ver1-serial/app.src.main.java.ch.hsr.edu.sinv_56082.gastroginiapp.ui.activities.menu.ProductListListEditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
+if(typeVariable!=null){
+contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
+}
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
+if(typeVariable!=null){
+if(!contextualActualTypeParameters.containsKey(typeVariable)){
+contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
+}
+}
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
+if(typeVariable.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
+if(typeVariable.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
+assert (typeVariable!=null);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 }
+assert (typeVariable!=null);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
+if(!contextualActualTypeParameters.containsKey(typeVariable)){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V39/7615/pattern-ver1-serial/src.mudmap2.backend.World.java-put.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
-if(!contextualActualTypeParameters.containsKey(typeVariable)){
+if(contextualActualTypeParameters!=null&&!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V22/4226/pattern-ver1-serial/src.main.java.org.walkmod.javalang.walkers.ChangeLogVisitor.java-visit.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
+synchronized(this){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
+if(typeVariable.getClass().getSimpleName().startsWith("SystemException")){
+return ;
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
+}
+if(typeVariable.getClass().getSimpleName().startsWith("SystemException")){
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
-if(!contextualActualTypeParameters.containsKey(typeVariable)){
+if(!contextualActualTypeParameters.containsKey(typeVariable)&&contextualActualTypeParameters.containsKey("url")){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/2242/pattern-ver1-serial/spring-boot-autoconfigure.src.main.java.org.springframework.boot.autoconfigure.jdbc.DataSourceBuilder.java-maybeGetDriverClassName.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
+assert (typeVariable!=null):"Appointments day is not allowed to be null!";
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
+assert (typeVariable!=null):"Appointments day is not allowed to be null!";
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
+import java.util.HashSet;
+
+import java.util.Collections;
+
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
+if(contextualActualTypeParameters.isEmpty()){
+contextualActualTypeParameters=null;
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/6949/pattern-ver1-serial/app.src.main.java.com.peprally.jeremy.peprally.db_models.DBUserProfile.java-removeConversationId.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
+import java.util.HashSet;
+
+import java.util.Collections;
+
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
+}
+if(contextualActualTypeParameters.isEmpty()){
+contextualActualTypeParameters=null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/6949/pattern-ver1-serial/app.src.main.java.com.peprally.jeremy.peprally.db_models.DBUserProfile.java-removeConversationId.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
+if(contextualActualTypeParameters==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
+if(contextualActualTypeParameters==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
+contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
+if(typeVariable==null){
+throw new IllegalStateException("Cannot instantiate Page whitout String url constructor parameter or @PageURL class annotation");
+}
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/4732/pattern-ver1-serial/src.main.java.com.mgiorda.page.AbstractPage.java-AbstractPage.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
-contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 }
+contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/2466/pattern-ver1-serial/tajo-core.src.main.java.org.apache.tajo.worker.Task.java-run.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
-if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
+if(!contextualActualTypeParameters.containsKey(typeVariable)){
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V2/3128/pattern-ver1-serial/src.cubicmadness.gamestates.GameStateManager.java-popCurrentState.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
+if(typeVariable.equals("CALL_RECEIVED_AT")){
+return ;
+}
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
+if(typeVariable.equals("NAME")){
+return ;
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
+if(typeVariable.equals("CALL_RECEIVED_AT")){
+return ;
+}
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
+}
+if(typeVariable.equals("NAME")){
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
+if(typeVariable.equals("INFO")){
+return ;
+}
+if(typeVariable.equals("UNIT")){
+return ;
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
+}
+if(typeVariable.equals("INFO")){
+return ;
+}
+if(typeVariable.equals("UNIT")){
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
+if(boundsOf(typeVariable)!=null&&typeVariable!=null){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/523/pattern-ver1-serial/src.se.chalmers.lidkopingsh.model.Order.java-sync.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
+for(int i=0;i<24;i++){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/7063/pattern-ver1-serial/src.application.rmi.Serveur.java-initalisationMain.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
+long startTime=System.currentTimeMillis();
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/mockito/mockito_8_buggy/src/org/mockito/internal/util/reflection/GenericMetadataSupport.java[92,97]
------------Candidate---------------
 private void registerTypeVariableIfNotPresent(TypeVariable typeVariable){
+long startTime=System.currentTimeMillis();
 if(!contextualActualTypeParameters.containsKey(typeVariable)){
 contextualActualTypeParameters.put(typeVariable,boundsOf(typeVariable));
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.mockito.internal.util.reflection.GenericMetadataSupportTest::typeVariable_of_self_type]
---------START : 2019.09.04 AD at 09:21:43 CDT
---------TIME : 2019.09.04 AD at 14:22:14 CDT
--------------- END -----------------
Finish : mockito-8 > patch : 0 | Start : Wed Sep 04 09:21:43 CDT 2019 | End : 2019.09.04 AD at 14:22:15 CDT
