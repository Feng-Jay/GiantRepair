Repair : jacksoncore_25
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/0.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/0.java
Following are 0th generated patches:
Validating 2 patches...
Following are 1th generated patches:
Validating 40 patches...
Following are 2th generated patches:
Validating 1 patches...
Tested:43 patches
Compile failed:28 patches
Compilation rate:0.3488372093023256
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/1.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/1.java
Following are 0th generated patches:
Validating 14 patches...
Following are 1th generated patches:
Validating 508 patches...
Following are 2th generated patches:
Validating 762 patches...
Following are 3th generated patches:
Validating 507 patches...
Following are 4th generated patches:
Validating 1 patches...
Tested:1786 patches
Compile failed:1631 patches
Compilation rate:0.08678611422172453
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/2.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/2.java
Tested:0 patches
Compile failed:0 patches
Compilation rate:NaN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/3.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/3.java
Following are 0th generated patches:
Validating 173 patches...
Following are 1th generated patches:
Validating 594 patches...
Following are 2th generated patches:
Validating 242 patches...
Following are 3th generated patches:
Validating 1000 patches...
Following are 4th generated patches:
Validating 1000 patches...
Tested:3004 patches
Compile failed:3003 patches
Compilation rate:3.3288948069241014E-4
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/4.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/4.java
Following are 0th generated patches:
Validating 1 patches...
Following are 1th generated patches:
Validating 1 patches...
Tested:2 patches
Compile failed:1 patches
Compilation rate:0.5
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/5.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/5.java
Following are 0th generated patches:
Validating 85 patches...
Following are 1th generated patches:
Validating 48 patches...
Following are 2th generated patches:
Validating 52 patches...
Following are 3th generated patches:
Validating 6 patches...
Following are 4th generated patches:
Validating 54 patches...
Tested:151 patches
Compile failed:134 patches
Compilation rate:0.11258278145695365
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/6.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/6.java
Following are 0th generated patches:
Validating 21 patches...
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
      if (i <= maxCode) {
      }
if(!Character.isJavaIdentifierPart(c)){
break;
}
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

1 th patch/24
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:33:49 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
      if (i <= maxCode) {
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

2 th patch/24
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:33:49 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
      if (i <= maxCode) {
      }
if(!Character.isJavaIdentifierPart(c)){
break;
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

3 th patch/24
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:33:49 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

4 th patch/24
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:33:49 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!Character.isJavaIdentifierPart(c)){
break;
}
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

5 th patch/24
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:33:49 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!Character.isJavaIdentifierPart(c)){
break;
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

6 th patch/24
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:33:49 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
      if (i <= maxCode) {
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

7 th patch/24
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:33:49 HKT
--------------- END -----------------
Following are 1th generated patches:
Validating 234 patches...
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i<=maxCode){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

8 th patch/258
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:34:26 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i<=maxCode&&codes[_nameStartRow]!=0){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

9 th patch/258
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:34:26 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i>=maxCode){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

10 th patch/258
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:34:26 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(codes[outPtr]!=0){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

11 th patch/258
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:34:26 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(_inputBuffer[i]!=0){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

12 th patch/258
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:34:26 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(codes[_nameStartRow]!=0){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

13 th patch/258
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:34:26 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(_bufferRecyclable){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

14 th patch/258
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:34:26 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!_tokenIncomplete){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

15 th patch/258
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:34:26 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i<=maxCode&&codes[outPtr]!=0){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

16 th patch/258
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:34:26 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i<=maxCode&&_inputBuffer[i]!=0){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

17 th patch/258
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:34:26 HKT
--------------- END -----------------
Following are 2th generated patches:
Validating 20 patches...
Following are 3th generated patches:
Validating 256 patches...
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i<=maxCode){
break;
}
if(!Character.isJavaIdentifierPart(c)){
break;
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

18 th patch/528
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:35:13 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i<=maxCode&&codes[_nameStartRow]!=0){
break;
}
if(!Character.isJavaIdentifierPart(c)){
break;
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

19 th patch/528
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:35:13 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i>=maxCode){
break;
}
if(!Character.isJavaIdentifierPart(c)){
break;
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

20 th patch/528
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:35:13 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i<maxCode){
break;
}
if(!Character.isJavaIdentifierPart(c)){
break;
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

21 th patch/528
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:35:13 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(_tokenIncomplete&&codes[i]!=0){
break;
}
if(!Character.isJavaIdentifierPart(c)){
break;
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

22 th patch/528
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:35:13 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(codes[outPtr]!=0){
break;
}
if(!Character.isJavaIdentifierPart(c)){
break;
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

23 th patch/528
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:35:13 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!_bufferRecyclable&&codes[i]!=0){
break;
}
if(!Character.isJavaIdentifierPart(c)){
break;
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

24 th patch/528
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:35:13 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(_inputBuffer[i]!=0){
break;
}
if(!Character.isJavaIdentifierPart(c)){
break;
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

25 th patch/528
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:35:13 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(_bufferRecyclable){
break;
}
if(!Character.isJavaIdentifierPart(c)){
break;
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

26 th patch/528
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:35:13 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(codes[_nameStartRow]!=0){
break;
}
if(!Character.isJavaIdentifierPart(c)){
break;
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

27 th patch/528
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:35:13 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(_tokenIncomplete){
break;
}
if(!Character.isJavaIdentifierPart(c)){
break;
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

28 th patch/528
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:35:13 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!_bufferRecyclable){
break;
}
if(!Character.isJavaIdentifierPart(c)){
break;
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

29 th patch/528
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:35:13 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!_tokenIncomplete){
break;
}
if(!Character.isJavaIdentifierPart(c)){
break;
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

30 th patch/528
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:35:13 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i<maxCode&&codes[i]!=0){
break;
}
if(!Character.isJavaIdentifierPart(c)){
break;
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

31 th patch/528
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:35:13 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i<=maxCode&&codes[outPtr]!=0){
break;
}
if(!Character.isJavaIdentifierPart(c)){
break;
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

32 th patch/528
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:35:13 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i<=maxCode&&_inputBuffer[i]!=0){
break;
}
if(!Character.isJavaIdentifierPart(c)){
break;
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

33 th patch/528
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:35:13 HKT
--------------- END -----------------
Following are 4th generated patches:
Validating 256 patches...
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i<=maxCode&&codes[_nameStartRow]!=0){
break;
}
      if (i <= maxCode) {
      }
if(!Character.isJavaIdentifierPart(c)){
break;
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

34 th patch/784
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:36:00 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i<=maxCode){
break;
}
      if (i <= maxCode) {
      }
if(!Character.isJavaIdentifierPart(c)){
break;
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

35 th patch/784
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:36:00 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i>=maxCode){
break;
}
      if (i <= maxCode) {
      }
if(!Character.isJavaIdentifierPart(c)){
break;
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

36 th patch/784
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:36:00 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(_tokenIncomplete&&codes[i]!=0){
break;
}
      if (i <= maxCode) {
      }
if(!Character.isJavaIdentifierPart(c)){
break;
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

37 th patch/784
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:36:00 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i<maxCode){
break;
}
      if (i <= maxCode) {
      }
if(!Character.isJavaIdentifierPart(c)){
break;
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

38 th patch/784
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:36:00 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(codes[outPtr]!=0){
break;
}
      if (i <= maxCode) {
      }
if(!Character.isJavaIdentifierPart(c)){
break;
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

39 th patch/784
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:36:00 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!_bufferRecyclable&&codes[i]!=0){
break;
}
      if (i <= maxCode) {
      }
if(!Character.isJavaIdentifierPart(c)){
break;
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

40 th patch/784
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:36:00 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(_inputBuffer[i]!=0){
break;
}
      if (i <= maxCode) {
      }
if(!Character.isJavaIdentifierPart(c)){
break;
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

41 th patch/784
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:36:00 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(_tokenIncomplete){
break;
}
      if (i <= maxCode) {
      }
if(!Character.isJavaIdentifierPart(c)){
break;
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

42 th patch/784
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:36:00 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!_tokenIncomplete){
break;
}
      if (i <= maxCode) {
      }
if(!Character.isJavaIdentifierPart(c)){
break;
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

43 th patch/784
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:36:00 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!_bufferRecyclable){
break;
}
      if (i <= maxCode) {
      }
if(!Character.isJavaIdentifierPart(c)){
break;
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

44 th patch/784
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:36:00 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(codes[_nameStartRow]!=0){
break;
}
      if (i <= maxCode) {
      }
if(!Character.isJavaIdentifierPart(c)){
break;
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

45 th patch/784
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:36:00 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(_bufferRecyclable){
break;
}
      if (i <= maxCode) {
      }
if(!Character.isJavaIdentifierPart(c)){
break;
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

46 th patch/784
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:36:00 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i<maxCode&&codes[i]!=0){
break;
}
      if (i <= maxCode) {
      }
if(!Character.isJavaIdentifierPart(c)){
break;
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

47 th patch/784
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:36:00 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i<=maxCode&&codes[outPtr]!=0){
break;
}
      if (i <= maxCode) {
      }
if(!Character.isJavaIdentifierPart(c)){
break;
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

48 th patch/784
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:36:00 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i<=maxCode&&_inputBuffer[i]!=0){
break;
}
      if (i <= maxCode) {
      }
if(!Character.isJavaIdentifierPart(c)){
break;
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

49 th patch/784
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:36:00 HKT
--------------- END -----------------
Tested:772 patches
Compile failed:598 patches
Compilation rate:0.22538860103626943
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/7.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/7.java
Following are 0th generated patches:
Validating 54 patches...
Following are 1th generated patches:
Validating 1000 patches...
Following are 2th generated patches:
Validating 170 patches...
Following are 3th generated patches:
Validating 496 patches...
Following are 4th generated patches:
Validating 330 patches...
Tested:2049 patches
Compile failed:1805 patches
Compilation rate:0.11908247925817472
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/8.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/8.java
Following are 0th generated patches:
Validating 5 patches...
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
      if (i <= maxCode) {
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

50 th patch/8
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:39:03 HKT
--------------- END -----------------
Following are 1th generated patches:
Validating 234 patches...
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i<=maxCode&&codes[_nameStartRow]!=0){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

51 th patch/242
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:39:40 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i<=maxCode){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

52 th patch/242
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:39:40 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i>=maxCode){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

53 th patch/242
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:39:40 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(codes[outPtr]!=0){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

54 th patch/242
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:39:40 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(_inputBuffer[i]!=0){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

55 th patch/242
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:39:40 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(codes[_nameStartRow]!=0){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

56 th patch/242
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:39:40 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!_tokenIncomplete){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

57 th patch/242
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:39:40 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(_bufferRecyclable){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

58 th patch/242
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:39:40 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i<=maxCode&&codes[outPtr]!=0){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

59 th patch/242
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:39:40 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i<=maxCode&&_inputBuffer[i]!=0){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

60 th patch/242
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:39:40 HKT
--------------- END -----------------
Following are 2th generated patches:
Validating 1 patches...
Following are 3th generated patches:
Validating 235 patches...
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i<=maxCode&&codes[_nameStartRow]!=0){
break;
}
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

61 th patch/478
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:40:23 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i<=maxCode){
break;
}
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

62 th patch/478
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:40:23 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i>=maxCode){
break;
}
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

63 th patch/478
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:40:23 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(_tokenIncomplete&&codes[i]!=0){
break;
}
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

64 th patch/478
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:40:23 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i<maxCode){
break;
}
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

65 th patch/478
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:40:23 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(codes[outPtr]!=0){
break;
}
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

66 th patch/478
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:40:23 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!_bufferRecyclable&&codes[i]!=0){
break;
}
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

67 th patch/478
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:40:23 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(_inputBuffer[i]!=0){
break;
}
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

68 th patch/478
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:40:23 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(codes[_nameStartRow]!=0){
break;
}
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

69 th patch/478
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:40:23 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!_tokenIncomplete){
break;
}
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

70 th patch/478
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:40:23 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(_tokenIncomplete){
break;
}
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

71 th patch/478
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:40:23 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(_bufferRecyclable){
break;
}
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

72 th patch/478
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:40:23 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!_bufferRecyclable){
break;
}
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

73 th patch/478
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:40:23 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i<maxCode&&codes[i]!=0){
break;
}
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

74 th patch/478
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:40:23 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i<=maxCode&&codes[outPtr]!=0){
break;
}
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

75 th patch/478
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:40:23 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i<=maxCode&&_inputBuffer[i]!=0){
break;
}
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

76 th patch/478
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:40:23 HKT
--------------- END -----------------
Following are 4th generated patches:
Validating 1 patches...
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
      if (i <= maxCode) {
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

77 th patch/479
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:40:39 HKT
--------------- END -----------------
Tested:473 patches
Compile failed:392 patches
Compilation rate:0.17124735729386892
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/9.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/9.java
Following are 0th generated patches:
Validating 1 patches...
Following are 1th generated patches:
Validating 117 patches...
Tested:118 patches
Compile failed:91 patches
Compilation rate:0.2288135593220339
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/10.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/10.java
Following are 0th generated patches:
Validating 3 patches...
Following are 1th generated patches:
Validating 329 patches...
Following are 2th generated patches:
Validating 328 patches...
Following are 3th generated patches:
Validating 1 patches...
Tested:660 patches
Compile failed:596 patches
Compilation rate:0.09696969696969697
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/11.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/11.java
Following are 0th generated patches:
Validating 1 patches...
Following are 1th generated patches:
Validating 117 patches...
Tested:118 patches
Compile failed:91 patches
Compilation rate:0.2288135593220339
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/12.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/12.java
Following are 0th generated patches:
Validating 2 patches...
Following are 1th generated patches:
Validating 864 patches...
Following are 2th generated patches:
Validating 18 patches...
Tested:884 patches
Compile failed:865 patches
Compilation rate:0.021493212669683258
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/13.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/13.java
Following are 0th generated patches:
Validating 1 patches...
Following are 1th generated patches:
Validating 117 patches...
Tested:118 patches
Compile failed:91 patches
Compilation rate:0.2288135593220339
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/14.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/14.java
Following are 0th generated patches:
Validating 1 patches...
Following are 0th generated patches:
Validating 1 patches...
Tested:2 patches
Compile failed:0 patches
Compilation rate:1.0
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/15.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/15.java
Following are 0th generated patches:
Validating 3 patches...
Following are 1th generated patches:
Validating 118 patches...
Following are 2th generated patches:
Validating 117 patches...
Following are 3th generated patches:
Validating 1 patches...
Tested:238 patches
Compile failed:211 patches
Compilation rate:0.1134453781512605
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/16.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/16.java
Following are 0th generated patches:
Validating 2 patches...
Following are 1th generated patches:
Validating 1000 patches...
Following are 2th generated patches:
Validating 383 patches...
Tested:1385 patches
Compile failed:1385 patches
Compilation rate:0.0
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/17.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/17.java
Following are 0th generated patches:
Validating 3 patches...
Following are 1th generated patches:
Validating 1 patches...
Following are 2th generated patches:
Validating 234 patches...
Following are 3th generated patches:
Validating 235 patches...
Tested:472 patches
Compile failed:464 patches
Compilation rate:0.01694915254237288
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/18.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/18.java
Tested:0 patches
Compile failed:0 patches
Compilation rate:NaN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/19.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/19.java
Following are 0th generated patches:
Validating 63 patches...
Following are 1th generated patches:
Validating 430 patches...
Following are 2th generated patches:
Validating 430 patches...
Following are 3th generated patches:
Validating 3 patches...
Following are 4th generated patches:
Validating 4 patches...
Tested:913 patches
Compile failed:913 patches
Compilation rate:0.0
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/20.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/20.java
Tested:0 patches
Compile failed:0 patches
Compilation rate:NaN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/21.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/21.java
Following are 0th generated patches:
Validating 63 patches...
Following are 1th generated patches:
Validating 42 patches...
Following are 2th generated patches:
Validating 40 patches...
Following are 3th generated patches:
Validating 41 patches...
Following are 4th generated patches:
Validating 1 patches...
Tested:168 patches
Compile failed:167 patches
Compilation rate:0.005952380952380952
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/22.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/22.java
Following are 0th generated patches:
Validating 26 patches...
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
      if (i <= maxCode) {
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

78 th patch/29
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:47:18 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
      if (i <= maxCode) {
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

79 th patch/29
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:47:18 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
      if (i <= maxCode) {
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

80 th patch/29
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:47:19 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!Character.isJavaIdentifierPart(c)){
break;
}
      if (i <= maxCode) {
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

81 th patch/29
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:47:19 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!Character.isJavaIdentifierPart(c)){
break;
}
      if (i <= maxCode) {
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

82 th patch/29
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:47:19 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!Character.isJavaIdentifierPart(c)){
break;
}
 else       if (!Character.isJavaIdentifierPart(c)) {
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

83 th patch/29
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:47:19 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!Character.isJavaIdentifierPart(c)){
break;
}
      if (i <= maxCode) {
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

84 th patch/29
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:47:19 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!Character.isJavaIdentifierPart(c)){
break;
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

85 th patch/29
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:47:19 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

86 th patch/29
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:47:19 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!Character.isJavaIdentifierPart(c)){
break;
}
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

87 th patch/29
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:47:19 HKT
--------------- END -----------------
Following are 1th generated patches:
Validating 1000 patches...
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!(i>maxCode||codes[outPtr]==0)){
if( Character.isJavaIdentifierPart(c)){
break;
}
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

88 th patch/279
Trace:
IfStmt;NOT IfCondition;InfixExpr;InfixExpr;AryAcc;SName;Blk;PrefixExpr;PREFIXNOT;IfStmt;PrefixExpr;PREFIXNOT
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:47:54 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i>=maxCode||codes[i]==0){
if(!(!Character.isJavaIdentifierPart(c))){
break;
}
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

89 th patch/279
Trace:
InfixExpr;InfixExpr;CMPOP;Blk;IfStmt;NOT IfCondition;IfStmt;InfixExpr;InfixExpr;CMPOP;Blk;IfStmt;NOT IfCondition
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:47:54 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i>=maxCode||codes[i]==0){
if( Character.isJavaIdentifierPart(c)){
break;
}
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

90 th patch/279
Trace:
InfixExpr;InfixExpr;CMPOP;Blk;PrefixExpr;PREFIXNOT;IfStmt;PrefixExpr;PREFIXNOT;IfStmt;InfixExpr;InfixExpr;CMPOP;Blk;PrefixExpr;PREFIXNOT;IfStmt;PrefixExpr;PREFIXNOT
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:47:54 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!(i>maxCode||codes[outPtr]==0)){
if(!(!Character.isJavaIdentifierPart(c))){
break;
}
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

91 th patch/529
Trace:
IfStmt;NOT IfCondition;InfixExpr;InfixExpr;AryAcc;SName;Blk;IfStmt;NOT IfCondition
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:48:28 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!(i>maxCode)){
if( Character.isJavaIdentifierPart(c)){
break;
}
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

92 th patch/779
Trace:
IfStmt;NOT IfCondition;InfixExpr;RHSEMPTY;Blk;PrefixExpr;PREFIXNOT;IfStmt;PrefixExpr;PREFIXNOT
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:49:02 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!(codes[outPtr]==0)){
if( Character.isJavaIdentifierPart(c)){
break;
}
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

93 th patch/779
Trace:
IfStmt;NOT IfCondition;InfixExpr;InfixExpr;AryAcc;SName;LHSEMPTY;Blk;PrefixExpr;PREFIXNOT;IfStmt;PrefixExpr;PREFIXNOT
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:49:02 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!(i>maxCode||_inputBuffer[i]==0)){
if( Character.isJavaIdentifierPart(c)){
break;
}
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

94 th patch/779
Trace:
IfStmt;NOT IfCondition;InfixExpr;InfixExpr;AryAcc;SName;Blk;PrefixExpr;PREFIXNOT;IfStmt;PrefixExpr;PREFIXNOT
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:49:02 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i>=maxCode){
if( Character.isJavaIdentifierPart(c)){
break;
}
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

95 th patch/779
Trace:
InfixExpr;InfixExpr;CMPOP;RHSEMPTY;Blk;PrefixExpr;PREFIXNOT;IfStmt;PrefixExpr;PREFIXNOT;IfStmt;InfixExpr;InfixExpr;CMPOP;RHSEMPTY;Blk;PrefixExpr;PREFIXNOT;IfStmt;PrefixExpr;PREFIXNOT
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:49:02 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!(i<maxCode)){
if( Character.isJavaIdentifierPart(c)){
break;
}
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

96 th patch/1029
Trace:
IfStmt;NOT IfCondition;InfixExpr;InfixExpr;CMPOP;RHSEMPTY;Blk;PrefixExpr;PREFIXNOT;IfStmt;PrefixExpr;PREFIXNOT
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:49:41 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!(i>maxCode)){
if(!(!Character.isJavaIdentifierPart(c))){
break;
}
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

97 th patch/1029
Trace:
IfStmt;NOT IfCondition;InfixExpr;RHSEMPTY;Blk;IfStmt;NOT IfCondition
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:49:41 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!(codes[outPtr]==0)){
if(!(!Character.isJavaIdentifierPart(c))){
break;
}
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

98 th patch/1029
Trace:
IfStmt;NOT IfCondition;InfixExpr;InfixExpr;AryAcc;SName;LHSEMPTY;Blk;IfStmt;NOT IfCondition
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:49:41 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i>=maxCode){
if(!(!Character.isJavaIdentifierPart(c))){
break;
}
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

99 th patch/1029
Trace:
InfixExpr;InfixExpr;CMPOP;RHSEMPTY;Blk;IfStmt;NOT IfCondition;IfStmt;InfixExpr;InfixExpr;CMPOP;RHSEMPTY;Blk;IfStmt;NOT IfCondition
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:49:41 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!(i>maxCode||codes[_nameStartRow]==0)){
if(!(!Character.isJavaIdentifierPart(c))){
break;
}
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

100 th patch/1029
Trace:
IfStmt;NOT IfCondition;InfixExpr;InfixExpr;AryAcc;SName;Blk;IfStmt;NOT IfCondition
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:49:41 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!(i>maxCode||_inputBuffer[i]==0)){
if(!(!Character.isJavaIdentifierPart(c))){
break;
}
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

101 th patch/1029
Trace:
IfStmt;NOT IfCondition;InfixExpr;InfixExpr;AryAcc;SName;Blk;IfStmt;NOT IfCondition
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:49:41 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!(_inputBuffer[i]==0)){
if( Character.isJavaIdentifierPart(c)){
break;
}
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

102 th patch/1029
Trace:
IfStmt;NOT IfCondition;InfixExpr;InfixExpr;AryAcc;SName;LHSEMPTY;Blk;PrefixExpr;PREFIXNOT;IfStmt;PrefixExpr;PREFIXNOT
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:49:41 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(_bufferRecyclable||codes[i]==0){
if( Character.isJavaIdentifierPart(c)){
break;
}
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

103 th patch/1029
Trace:
InfixExpr;InfixExpr;SName;RHSEMPTY;Blk;PrefixExpr;PREFIXNOT;IfStmt;PrefixExpr;PREFIXNOT;IfStmt;InfixExpr;InfixExpr;SName;RHSEMPTY;Blk;PrefixExpr;PREFIXNOT;IfStmt;PrefixExpr;PREFIXNOT
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:49:41 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!(i>maxCode||codes[_nameStartRow]==0)){
if( Character.isJavaIdentifierPart(c)){
break;
}
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

104 th patch/1029
Trace:
IfStmt;NOT IfCondition;InfixExpr;InfixExpr;AryAcc;SName;Blk;PrefixExpr;PREFIXNOT;IfStmt;PrefixExpr;PREFIXNOT
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:49:41 HKT
--------------- END -----------------
Following are 2th generated patches:
Validating 20 patches...
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if( this.nextBooleanValue()){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

105 th patch/1049
Trace:
PrefixExpr;PREFIXNOT;MethodInv;THISMETHOD;IfStmt;PrefixExpr;PREFIXNOT;MethodInv;THISMETHOD
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:49:59 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!( this._skipYAMLComment())){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

106 th patch/1049
Trace:
IfStmt;NOT IfCondition;PrefixExpr;PREFIXNOT;MethodInv;THISMETHOD
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:49:59 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!this._skipYAMLComment()){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

107 th patch/1049
Trace:
PrefixExpr;MethodInv;THISMETHOD;IfStmt;PrefixExpr;MethodInv;THISMETHOD
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:49:59 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!(!this.nextBooleanValue())){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

108 th patch/1049
Trace:
IfStmt;NOT IfCondition;PrefixExpr;MethodInv;THISMETHOD
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:49:59 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if( Character.isJavaIdentifierPart(c)){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

109 th patch/1049
Trace:
PrefixExpr;PREFIXNOT;IfStmt;PrefixExpr;PREFIXNOT
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:49:59 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!this._loadMore()){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

110 th patch/1049
Trace:
PrefixExpr;MethodInv;THISMETHOD;IfStmt;PrefixExpr;MethodInv;THISMETHOD
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:49:59 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!this.nextBooleanValue()){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

111 th patch/1049
Trace:
PrefixExpr;MethodInv;THISMETHOD;IfStmt;PrefixExpr;MethodInv;THISMETHOD
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:49:59 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!( this._loadMore())){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

112 th patch/1049
Trace:
IfStmt;NOT IfCondition;PrefixExpr;PREFIXNOT;MethodInv;THISMETHOD
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:49:59 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!( this.nextBooleanValue())){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

113 th patch/1049
Trace:
IfStmt;NOT IfCondition;PrefixExpr;PREFIXNOT;MethodInv;THISMETHOD
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:49:59 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!(!Character.isJavaIdentifierPart(c))){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

114 th patch/1049
Trace:
IfStmt;NOT IfCondition
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:49:59 HKT
--------------- END -----------------
Following are 3th generated patches:
Validating 21 patches...
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!this.nextBooleanValue()){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
          break;
        }
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

115 th patch/1070
Trace:
PrefixExpr;MethodInv;THISMETHOD;IfStmt;PrefixExpr;MethodInv;THISMETHOD
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:50:17 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!this._loadMore()){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
          break;
        }
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

116 th patch/1070
Trace:
PrefixExpr;MethodInv;THISMETHOD;IfStmt;PrefixExpr;MethodInv;THISMETHOD
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:50:17 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!(!Character.isJavaIdentifierPart(c))){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
          break;
        }
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

117 th patch/1070
Trace:
IfStmt;NOT IfCondition
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:50:17 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!this._skipYAMLComment()){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
          break;
        }
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

118 th patch/1070
Trace:
PrefixExpr;MethodInv;THISMETHOD;IfStmt;PrefixExpr;MethodInv;THISMETHOD
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:50:17 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!( this._skipYAMLComment())){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
          break;
        }
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

119 th patch/1070
Trace:
IfStmt;NOT IfCondition;PrefixExpr;PREFIXNOT;MethodInv;THISMETHOD
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:50:17 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!( this.nextBooleanValue())){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
          break;
        }
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

120 th patch/1070
Trace:
IfStmt;NOT IfCondition;PrefixExpr;PREFIXNOT;MethodInv;THISMETHOD
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:50:17 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!( this._loadMore())){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
          break;
        }
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

121 th patch/1070
Trace:
IfStmt;NOT IfCondition;PrefixExpr;PREFIXNOT;MethodInv;THISMETHOD
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:50:17 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!(!this.nextBooleanValue())){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
          break;
        }
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

122 th patch/1070
Trace:
IfStmt;NOT IfCondition;PrefixExpr;MethodInv;THISMETHOD
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:50:17 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if( Character.isJavaIdentifierPart(c)){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
          break;
        }
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

123 th patch/1070
Trace:
PrefixExpr;PREFIXNOT;IfStmt;PrefixExpr;PREFIXNOT
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:50:17 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if( this.nextBooleanValue()){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
          break;
        }
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

124 th patch/1070
Trace:
PrefixExpr;PREFIXNOT;MethodInv;THISMETHOD;IfStmt;PrefixExpr;PREFIXNOT;MethodInv;THISMETHOD
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 00:50:17 HKT
--------------- END -----------------
Following are 4th generated patches:
Validating 1 patches...
Tested:1067 patches
Compile failed:811 patches
Compilation rate:0.23992502343017807
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/23.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/23.java
Following are 0th generated patches:
Validating 2 patches...
Following are 1th generated patches:
Validating 1000 patches...
Following are 2th generated patches:
Validating 232 patches...
Tested:1234 patches
Compile failed:445 patches
Compilation rate:0.6393841166936791
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/24.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/24.java
Following are 0th generated patches:
Validating 2 patches...
Following are 1th generated patches:
Validating 1000 patches...
Following are 2th generated patches:
Validating 49 patches...
Tested:1051 patches
Compile failed:791 patches
Compilation rate:0.24738344433872503
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/25.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/25.java
Following are 0th generated patches:
Validating 3 patches...
Following are 1th generated patches:
Validating 48 patches...
Following are 2th generated patches:
Validating 66 patches...
Following are 3th generated patches:
Validating 18 patches...
Tested:133 patches
Compile failed:123 patches
Compilation rate:0.07518796992481203
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/26.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/26.java
Following are 0th generated patches:
Validating 5 patches...
Following are 1th generated patches:
Validating 1000 patches...
Following are 2th generated patches:
Validating 1000 patches...
Following are 3th generated patches:
Validating 321 patches...
Following are 4th generated patches:
Validating 161 patches...
Tested:2485 patches
Compile failed:2073 patches
Compilation rate:0.16579476861167003
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/27.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/27.java
Following are 0th generated patches:
Validating 63 patches...
Following are 1th generated patches:
Validating 3 patches...
Following are 2th generated patches:
Validating 4 patches...
Following are 3th generated patches:
Validating 502 patches...
Following are 4th generated patches:
Validating 503 patches...
Tested:1061 patches
Compile failed:1061 patches
Compilation rate:0.0
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/28.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/28.java
Following are 0th generated patches:
Validating 2 patches...
Following are 1th generated patches:
Validating 864 patches...
Following are 2th generated patches:
Validating 18 patches...
Tested:884 patches
Compile failed:865 patches
Compilation rate:0.021493212669683258
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/29.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/29.java
Following are 0th generated patches:
Validating 1 patches...
Following are 1th generated patches:
Validating 117 patches...
Tested:118 patches
Compile failed:91 patches
Compilation rate:0.2288135593220339
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/30.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/30.java
Following are 0th generated patches:
Validating 1 patches...
Following are 1th generated patches:
Validating 117 patches...
Tested:118 patches
Compile failed:91 patches
Compilation rate:0.2288135593220339
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/31.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/31.java
Following are 0th generated patches:
Validating 25 patches...
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
      if (i <= maxCode) {
      }
else{
if(codes[i]==0){
break;
}
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

125 th patch/28
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:00:59 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
      if (i <= maxCode) {
if(!Character.isJavaIdentifierPart(c)){
break;
}
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

126 th patch/28
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:00:59 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
      if (i <= maxCode) {
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

127 th patch/28
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:01:00 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i>maxCode){
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

128 th patch/28
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:01:00 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
      if (i <= maxCode) {
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

129 th patch/28
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:01:00 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i>maxCode){
if(!Character.isJavaIdentifierPart(c)){
break;
}
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

130 th patch/28
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:01:00 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i>maxCode){
if(!Character.isJavaIdentifierPart(c)){
break;
}
        if (codes[i] != 0) {
          break;
        }
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

131 th patch/28
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:01:00 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i>maxCode){
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

132 th patch/28
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:01:00 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
      if (i <= maxCode) {
if(!Character.isJavaIdentifierPart(c)){
break;
}
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

133 th patch/28
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:01:00 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i>maxCode){
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

134 th patch/28
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:01:00 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i>maxCode){
        if (codes[i] != 0) {
          break;
        }
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

135 th patch/28
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:01:00 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i>maxCode){
if(!Character.isJavaIdentifierPart(c)){
break;
}
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

136 th patch/28
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:01:00 HKT
--------------- END -----------------
Following are 1th generated patches:
Validating 7 patches...
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i<maxCode){
if(!Character.isJavaIdentifierPart(c)){
break;
}
}
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

137 th patch/35
Trace:
UPDATEIfStmt;InfixExpr;CMPOP;UPDATEInfixExpr
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:01:16 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i>maxCode){
if(!Character.isJavaIdentifierPart(c)){
break;
}
}
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

138 th patch/35
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:01:16 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(_tokenIncomplete){
if(!Character.isJavaIdentifierPart(c)){
break;
}
}
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

139 th patch/35
Trace:
UPDATEIfStmt;InfixExpr;SName;RHSEMPTY;UPDATEInfixExpr
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:01:16 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i>=maxCode){
if(!Character.isJavaIdentifierPart(c)){
break;
}
}
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

140 th patch/35
Trace:
UPDATEIfStmt;InfixExpr;CMPOP;UPDATEInfixExpr
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:01:16 HKT
--------------- END -----------------
Following are 2th generated patches:
Validating 20 patches...
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
      if (i <= maxCode) {
if(!( this._loadMore())){
break;
}
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

141 th patch/55
Trace:
IfStmt;NOT IfCondition;PrefixExpr;PREFIXNOT;MethodInv;THISMETHOD
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:01:34 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
      if (i <= maxCode) {
if( Character.isJavaIdentifierPart(c)){
break;
}
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

142 th patch/55
Trace:
PrefixExpr;PREFIXNOT;IfStmt;PrefixExpr;PREFIXNOT
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:01:34 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
      if (i <= maxCode) {
if(!this._skipYAMLComment()){
break;
}
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

143 th patch/55
Trace:
PrefixExpr;MethodInv;THISMETHOD;IfStmt;PrefixExpr;MethodInv;THISMETHOD
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:01:34 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
      if (i <= maxCode) {
if( this.nextBooleanValue()){
break;
}
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

144 th patch/55
Trace:
PrefixExpr;PREFIXNOT;MethodInv;THISMETHOD;IfStmt;PrefixExpr;PREFIXNOT;MethodInv;THISMETHOD
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:01:34 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
      if (i <= maxCode) {
if(!(!Character.isJavaIdentifierPart(c))){
break;
}
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

145 th patch/55
Trace:
IfStmt;NOT IfCondition
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:01:34 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
      if (i <= maxCode) {
if(!( this.nextBooleanValue())){
break;
}
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

146 th patch/55
Trace:
IfStmt;NOT IfCondition;PrefixExpr;PREFIXNOT;MethodInv;THISMETHOD
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:01:34 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
      if (i <= maxCode) {
if(!( this._skipYAMLComment())){
break;
}
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

147 th patch/55
Trace:
IfStmt;NOT IfCondition;PrefixExpr;PREFIXNOT;MethodInv;THISMETHOD
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:01:34 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
      if (i <= maxCode) {
if(!this.nextBooleanValue()){
break;
}
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

148 th patch/55
Trace:
PrefixExpr;MethodInv;THISMETHOD;IfStmt;PrefixExpr;MethodInv;THISMETHOD
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:01:34 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
      if (i <= maxCode) {
if(!this._loadMore()){
break;
}
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

149 th patch/55
Trace:
PrefixExpr;MethodInv;THISMETHOD;IfStmt;PrefixExpr;MethodInv;THISMETHOD
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:01:34 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
      if (i <= maxCode) {
if(!(!this.nextBooleanValue())){
break;
}
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

150 th patch/55
Trace:
IfStmt;NOT IfCondition;PrefixExpr;MethodInv;THISMETHOD
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:01:34 HKT
--------------- END -----------------
Following are 3th generated patches:
Validating 1 patches...
Following are 4th generated patches:
Validating 21 patches...
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
      if (i <= maxCode) {
if(!this.nextBooleanValue()){
break;
}
        if (codes[i] != 0) {
          break;
        }
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

151 th patch/77
Trace:
PrefixExpr;MethodInv;THISMETHOD;IfStmt;PrefixExpr;MethodInv;THISMETHOD
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:01:53 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
      if (i <= maxCode) {
if(!this._skipYAMLComment()){
break;
}
        if (codes[i] != 0) {
          break;
        }
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

152 th patch/77
Trace:
PrefixExpr;MethodInv;THISMETHOD;IfStmt;PrefixExpr;MethodInv;THISMETHOD
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:01:53 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
      if (i <= maxCode) {
if( Character.isJavaIdentifierPart(c)){
break;
}
        if (codes[i] != 0) {
          break;
        }
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

153 th patch/77
Trace:
PrefixExpr;PREFIXNOT;IfStmt;PrefixExpr;PREFIXNOT
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:01:53 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
      if (i <= maxCode) {
if(!( this._skipYAMLComment())){
break;
}
        if (codes[i] != 0) {
          break;
        }
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

154 th patch/77
Trace:
IfStmt;NOT IfCondition;PrefixExpr;PREFIXNOT;MethodInv;THISMETHOD
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:01:53 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
      if (i <= maxCode) {
if( this.nextBooleanValue()){
break;
}
        if (codes[i] != 0) {
          break;
        }
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

155 th patch/77
Trace:
PrefixExpr;PREFIXNOT;MethodInv;THISMETHOD;IfStmt;PrefixExpr;PREFIXNOT;MethodInv;THISMETHOD
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:01:53 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
      if (i <= maxCode) {
if(!( this._loadMore())){
break;
}
        if (codes[i] != 0) {
          break;
        }
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

156 th patch/77
Trace:
IfStmt;NOT IfCondition;PrefixExpr;PREFIXNOT;MethodInv;THISMETHOD
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:01:53 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
      if (i <= maxCode) {
if(!(!this.nextBooleanValue())){
break;
}
        if (codes[i] != 0) {
          break;
        }
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

157 th patch/77
Trace:
IfStmt;NOT IfCondition;PrefixExpr;MethodInv;THISMETHOD
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:01:53 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
      if (i <= maxCode) {
if(!( this.nextBooleanValue())){
break;
}
        if (codes[i] != 0) {
          break;
        }
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

158 th patch/77
Trace:
IfStmt;NOT IfCondition;PrefixExpr;PREFIXNOT;MethodInv;THISMETHOD
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:01:53 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
      if (i <= maxCode) {
if(!this._loadMore()){
break;
}
        if (codes[i] != 0) {
          break;
        }
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

159 th patch/77
Trace:
PrefixExpr;MethodInv;THISMETHOD;IfStmt;PrefixExpr;MethodInv;THISMETHOD
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:01:53 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
      if (i <= maxCode) {
if(!(!Character.isJavaIdentifierPart(c))){
break;
}
        if (codes[i] != 0) {
          break;
        }
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

160 th patch/77
Trace:
IfStmt;NOT IfCondition
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:01:53 HKT
--------------- END -----------------
Tested:73 patches
Compile failed:19 patches
Compilation rate:0.7397260273972602
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/32.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/32.java
Following are 0th generated patches:
Validating 1 patches...
Following are 1th generated patches:
Validating 199 patches...
Tested:200 patches
Compile failed:173 patches
Compilation rate:0.135
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/33.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/33.java
Following are 0th generated patches:
Validating 1 patches...
Following are 1th generated patches:
Validating 117 patches...
Tested:118 patches
Compile failed:91 patches
Compilation rate:0.2288135593220339
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/34.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/34.java
Following are 0th generated patches:
Validating 3 patches...
Following are 1th generated patches:
Validating 1 patches...
Following are 2th generated patches:
Validating 2 patches...
Following are 3th generated patches:
Validating 1 patches...
Tested:6 patches
Compile failed:0 patches
Compilation rate:1.0
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/35.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/35.java
Following are 0th generated patches:
Validating 15 patches...
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
      if (i <= maxCode) {
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

161 th patch/18
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:02:49 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

162 th patch/18
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:02:49 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
      if (i <= maxCode) {
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

163 th patch/18
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:02:49 HKT
--------------- END -----------------
Following are 1th generated patches:
Validating 234 patches...
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!(i<maxCode&&codes[i]!=0)){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

164 th patch/252
Trace:
IfStmt;NOT IfCondition;InfixExpr;InfixExpr;CMPOP
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:03:31 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i<=maxCode&&codes[_nameStartRow]!=0){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

165 th patch/252
Trace:
InfixExpr;InfixExpr;AryAcc;SName;IfStmt;InfixExpr;InfixExpr;AryAcc;SName
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:03:31 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i>=maxCode){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

166 th patch/252
Trace:
InfixExpr;InfixExpr;CMPOP;RHSEMPTY;IfStmt;InfixExpr;InfixExpr;CMPOP;RHSEMPTY
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:03:31 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(codes[outPtr]!=0){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

167 th patch/252
Trace:
InfixExpr;InfixExpr;AryAcc;SName;LHSEMPTY;IfStmt;InfixExpr;InfixExpr;AryAcc;SName;LHSEMPTY
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:03:31 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!(i<maxCode)){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

168 th patch/252
Trace:
IfStmt;NOT IfCondition;InfixExpr;InfixExpr;CMPOP;RHSEMPTY
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:03:31 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(_inputBuffer[i]!=0){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

169 th patch/252
Trace:
InfixExpr;InfixExpr;AryAcc;SName;LHSEMPTY;IfStmt;InfixExpr;InfixExpr;AryAcc;SName;LHSEMPTY
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:03:31 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!(_tokenIncomplete&&codes[i]!=0)){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

170 th patch/252
Trace:
IfStmt;NOT IfCondition;InfixExpr;InfixExpr;SName;RHSEMPTY
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:03:31 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(codes[_nameStartRow]!=0){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

171 th patch/252
Trace:
InfixExpr;InfixExpr;AryAcc;SName;LHSEMPTY;IfStmt;InfixExpr;InfixExpr;AryAcc;SName;LHSEMPTY
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:03:32 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!(_tokenIncomplete)){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

172 th patch/252
Trace:
IfStmt;NOT IfCondition;InfixExpr;InfixExpr;SName;RHSEMPTY;RHSEMPTY
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:03:32 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(_bufferRecyclable){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

173 th patch/252
Trace:
InfixExpr;InfixExpr;SName;RHSEMPTY;RHSEMPTY;IfStmt;InfixExpr;InfixExpr;SName;RHSEMPTY;RHSEMPTY
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:03:32 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i<=maxCode&&codes[outPtr]!=0){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

174 th patch/252
Trace:
InfixExpr;InfixExpr;AryAcc;SName;IfStmt;InfixExpr;InfixExpr;AryAcc;SName
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:03:32 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i<=maxCode&&_inputBuffer[i]!=0){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

175 th patch/252
Trace:
InfixExpr;InfixExpr;AryAcc;SName;IfStmt;InfixExpr;InfixExpr;AryAcc;SName
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:03:32 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i<=maxCode){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

176 th patch/252
Trace:
InfixExpr;RHSEMPTY;IfStmt;InfixExpr;RHSEMPTY
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:03:32 HKT
--------------- END -----------------
Following are 2th generated patches:
Validating 2 patches...
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

177 th patch/254
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:03:47 HKT
--------------- END -----------------
Following are 3th generated patches:
Validating 236 patches...
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!(i<=maxCode&&_inputBuffer[i]!=0)){
break;
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

178 th patch/490
Trace:
IfStmt;NOT IfCondition;InfixExpr;InfixExpr;AryAcc;SName
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:04:37 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i>=maxCode){
break;
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

179 th patch/490
Trace:
InfixExpr;InfixExpr;CMPOP;RHSEMPTY;IfStmt;InfixExpr;InfixExpr;CMPOP;RHSEMPTY
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:04:37 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(_tokenIncomplete&&codes[i]!=0){
break;
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

180 th patch/490
Trace:
InfixExpr;InfixExpr;SName;RHSEMPTY;IfStmt;InfixExpr;InfixExpr;SName;RHSEMPTY
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:04:37 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i<maxCode){
break;
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

181 th patch/490
Trace:
InfixExpr;InfixExpr;CMPOP;RHSEMPTY;IfStmt;InfixExpr;InfixExpr;CMPOP;RHSEMPTY
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:04:37 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i<=maxCode&&codes[_nameStartRow]!=0){
break;
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

182 th patch/490
Trace:
InfixExpr;InfixExpr;AryAcc;SName;IfStmt;InfixExpr;InfixExpr;AryAcc;SName
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:04:38 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i<=maxCode){
break;
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

183 th patch/490
Trace:
InfixExpr;RHSEMPTY;IfStmt;InfixExpr;RHSEMPTY
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:04:38 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!(i<maxCode&&codes[i]!=0)){
break;
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

184 th patch/490
Trace:
IfStmt;NOT IfCondition;InfixExpr;InfixExpr;CMPOP
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:04:38 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!(i<=maxCode)){
break;
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

185 th patch/490
Trace:
IfStmt;NOT IfCondition;InfixExpr;RHSEMPTY
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:04:38 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(codes[outPtr]!=0){
break;
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

186 th patch/490
Trace:
InfixExpr;InfixExpr;AryAcc;SName;LHSEMPTY;IfStmt;InfixExpr;InfixExpr;AryAcc;SName;LHSEMPTY
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:04:38 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!(i<=maxCode&&codes[_nameStartRow]!=0)){
break;
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

187 th patch/490
Trace:
IfStmt;NOT IfCondition;InfixExpr;InfixExpr;AryAcc;SName
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:04:38 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!(codes[outPtr]!=0)){
break;
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

188 th patch/490
Trace:
IfStmt;NOT IfCondition;InfixExpr;InfixExpr;AryAcc;SName;LHSEMPTY
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:04:38 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!(i>=maxCode)){
break;
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

189 th patch/490
Trace:
IfStmt;NOT IfCondition;InfixExpr;InfixExpr;CMPOP;RHSEMPTY
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:04:38 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!(i<maxCode)){
break;
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

190 th patch/490
Trace:
IfStmt;NOT IfCondition;InfixExpr;InfixExpr;CMPOP;RHSEMPTY
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:04:38 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(_inputBuffer[i]!=0){
break;
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

191 th patch/490
Trace:
InfixExpr;InfixExpr;AryAcc;SName;LHSEMPTY;IfStmt;InfixExpr;InfixExpr;AryAcc;SName;LHSEMPTY
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:04:38 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!(_tokenIncomplete&&codes[i]!=0)){
break;
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

192 th patch/490
Trace:
IfStmt;NOT IfCondition;InfixExpr;InfixExpr;SName;RHSEMPTY
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:04:38 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!(_inputBuffer[i]!=0)){
break;
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

193 th patch/490
Trace:
IfStmt;NOT IfCondition;InfixExpr;InfixExpr;AryAcc;SName;LHSEMPTY
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:04:38 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(codes[_nameStartRow]!=0){
break;
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

194 th patch/490
Trace:
InfixExpr;InfixExpr;AryAcc;SName;LHSEMPTY;IfStmt;InfixExpr;InfixExpr;AryAcc;SName;LHSEMPTY
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:04:38 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(_tokenIncomplete){
break;
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

195 th patch/490
Trace:
InfixExpr;InfixExpr;SName;RHSEMPTY;RHSEMPTY;IfStmt;InfixExpr;InfixExpr;SName;RHSEMPTY;RHSEMPTY
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:04:38 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!(_tokenIncomplete)){
break;
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

196 th patch/490
Trace:
IfStmt;NOT IfCondition;InfixExpr;InfixExpr;SName;RHSEMPTY;RHSEMPTY
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:04:38 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(_bufferRecyclable){
break;
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

197 th patch/490
Trace:
InfixExpr;InfixExpr;SName;RHSEMPTY;RHSEMPTY;IfStmt;InfixExpr;InfixExpr;SName;RHSEMPTY;RHSEMPTY
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:04:38 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!(codes[_nameStartRow]!=0)){
break;
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

198 th patch/490
Trace:
IfStmt;NOT IfCondition;InfixExpr;InfixExpr;AryAcc;SName;LHSEMPTY
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:04:38 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!(_bufferRecyclable)){
break;
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

199 th patch/490
Trace:
IfStmt;NOT IfCondition;InfixExpr;InfixExpr;SName;RHSEMPTY;RHSEMPTY
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:04:38 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i<=maxCode&&codes[outPtr]!=0){
break;
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

200 th patch/490
Trace:
InfixExpr;InfixExpr;AryAcc;SName;IfStmt;InfixExpr;InfixExpr;AryAcc;SName
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:04:38 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i<maxCode&&codes[i]!=0){
break;
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

201 th patch/490
Trace:
InfixExpr;InfixExpr;CMPOP;IfStmt;InfixExpr;InfixExpr;CMPOP
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:04:38 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!(i<=maxCode&&codes[outPtr]!=0)){
break;
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

202 th patch/490
Trace:
IfStmt;NOT IfCondition;InfixExpr;InfixExpr;AryAcc;SName
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:04:38 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i<=maxCode&&_inputBuffer[i]!=0){
break;
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

203 th patch/490
Trace:
InfixExpr;InfixExpr;AryAcc;SName;IfStmt;InfixExpr;InfixExpr;AryAcc;SName
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:04:38 HKT
--------------- END -----------------
Following are 4th generated patches:
Validating 235 patches...
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i<=maxCode&&codes[_nameStartRow]!=0){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

204 th patch/725
Trace:
InfixExpr;InfixExpr;AryAcc;SName;IfStmt;InfixExpr;InfixExpr;AryAcc;SName
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:05:20 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i>=maxCode){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

205 th patch/725
Trace:
InfixExpr;InfixExpr;CMPOP;RHSEMPTY;IfStmt;InfixExpr;InfixExpr;CMPOP;RHSEMPTY
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:05:20 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!(i<maxCode&&codes[i]!=0)){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

206 th patch/725
Trace:
IfStmt;NOT IfCondition;InfixExpr;InfixExpr;CMPOP
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:05:20 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(codes[outPtr]!=0){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

207 th patch/725
Trace:
InfixExpr;InfixExpr;AryAcc;SName;LHSEMPTY;IfStmt;InfixExpr;InfixExpr;AryAcc;SName;LHSEMPTY
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:05:20 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!(i<maxCode)){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

208 th patch/725
Trace:
IfStmt;NOT IfCondition;InfixExpr;InfixExpr;CMPOP;RHSEMPTY
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:05:20 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(_inputBuffer[i]!=0){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

209 th patch/725
Trace:
InfixExpr;InfixExpr;AryAcc;SName;LHSEMPTY;IfStmt;InfixExpr;InfixExpr;AryAcc;SName;LHSEMPTY
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:05:20 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!(_tokenIncomplete&&codes[i]!=0)){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

210 th patch/725
Trace:
IfStmt;NOT IfCondition;InfixExpr;InfixExpr;SName;RHSEMPTY
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:05:20 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(codes[_nameStartRow]!=0){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

211 th patch/725
Trace:
InfixExpr;InfixExpr;AryAcc;SName;LHSEMPTY;IfStmt;InfixExpr;InfixExpr;AryAcc;SName;LHSEMPTY
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:05:20 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(!(_tokenIncomplete)){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

212 th patch/725
Trace:
IfStmt;NOT IfCondition;InfixExpr;InfixExpr;SName;RHSEMPTY;RHSEMPTY
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:05:20 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(_bufferRecyclable){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

213 th patch/725
Trace:
InfixExpr;InfixExpr;SName;RHSEMPTY;RHSEMPTY;IfStmt;InfixExpr;InfixExpr;SName;RHSEMPTY;RHSEMPTY
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:05:20 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i<=maxCode&&codes[outPtr]!=0){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

214 th patch/725
Trace:
InfixExpr;InfixExpr;AryAcc;SName;IfStmt;InfixExpr;InfixExpr;AryAcc;SName
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:05:20 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i<=maxCode&&_inputBuffer[i]!=0){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

215 th patch/725
Trace:
InfixExpr;InfixExpr;AryAcc;SName;IfStmt;InfixExpr;InfixExpr;AryAcc;SName
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:05:20 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i<=maxCode){
break;
}
      if (i <= maxCode) {
        if (codes[i] != 0) {
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

216 th patch/725
Trace:
InfixExpr;RHSEMPTY;IfStmt;InfixExpr;RHSEMPTY
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:05:20 HKT
--------------- END -----------------
Tested:718 patches
Compile failed:493 patches
Compilation rate:0.31337047353760444
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/36.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/36.java
Following are 0th generated patches:
Validating 2 patches...
Following are 1th generated patches:
Validating 298 patches...
Following are 2th generated patches:
Validating 1 patches...
Tested:301 patches
Compile failed:202 patches
Compilation rate:0.3289036544850498
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/37.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/37.java
Following are 0th generated patches:
Validating 1 patches...
Following are 1th generated patches:
Validating 233 patches...
Tested:234 patches
Compile failed:67 patches
Compilation rate:0.7136752136752137
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/38.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/38.java
Following are 0th generated patches:
Validating 7 patches...
Following are 1th generated patches:
Validating 35 patches...
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i<codes.length){
if(codes[i]!=0){
break;
}
}
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

217 th patch/45
Trace:
UPDATEIfStmt;InfixExpr;CMPOP;UPDATEInfixExpr
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:06:43 HKT
--------------- END -----------------
Following are 2th generated patches:
Validating 36 patches...
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i<codes.length){
if(codes[i]!=0){
break;
}
}
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

218 th patch/81
Trace:
UPDATEIfStmt;InfixExpr;CMPOP;UPDATEInfixExpr
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:07:00 HKT
--------------- END -----------------
Following are 3th generated patches:
Validating 1 patches...
Following are 4th generated patches:
Validating 37 patches...
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i<codes.length){
if(codes[i]!=0){
break;
}
}
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

219 th patch/119
Trace:
UPDATEIfStmt;InfixExpr;CMPOP;UPDATEInfixExpr
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:07:20 HKT
--------------- END -----------------
Tested:115 patches
Compile failed:98 patches
Compilation rate:0.14782608695652175
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/39.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/39.java
Following are 0th generated patches:
Validating 1 patches...
Following are 1th generated patches:
Validating 90 patches...
Tested:91 patches
Compile failed:90 patches
Compilation rate:0.01098901098901099
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/40.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/40.java
Following are 0th generated patches:
Validating 2 patches...
Following are 1th generated patches:
Validating 48 patches...
Following are 2th generated patches:
Validating 1 patches...
Tested:51 patches
Compile failed:28 patches
Compilation rate:0.45098039215686275
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/41.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/41.java
Following are 0th generated patches:
Validating 23 patches...
Following are 1th generated patches:
Validating 1000 patches...
Following are 2th generated patches:
Validating 1000 patches...
Following are 3th generated patches:
Validating 1000 patches...
Following are 4th generated patches:
Validating 1000 patches...
Tested:4022 patches
Compile failed:3180 patches
Compilation rate:0.20934858279462953
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/42.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_20/jacksoncore_25/42.java
Following are 0th generated patches:
Validating 25 patches...
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
      if (i <= maxCode) {
      }
else{
if(codes[i]!=0){
break;
}
}
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

220 th patch/28
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:13:49 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i>maxCode){
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

221 th patch/28
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:13:49 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
      if (i <= maxCode) {
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

222 th patch/28
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:13:49 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i>maxCode){
if(!Character.isJavaIdentifierPart(c)){
break;
}
        if (codes[i] != 0) {
          break;
        }
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

223 th patch/28
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:13:49 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i>maxCode){
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

224 th patch/28
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:13:49 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i>maxCode){
if(!Character.isJavaIdentifierPart(c)){
break;
}
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

225 th patch/28
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:13:49 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
      if (i <= maxCode) {
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

226 th patch/28
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:13:49 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i>maxCode){
if(!Character.isJavaIdentifierPart(c)){
break;
}
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

227 th patch/28
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:13:49 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i>maxCode){
        if (codes[i] != 0) {
          break;
        }
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

228 th patch/28
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:13:49 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i>maxCode){
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

229 th patch/28
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:13:49 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
      if (i <= maxCode) {
if(!Character.isJavaIdentifierPart(c)){
break;
}
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

230 th patch/28
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:13:49 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
      if (i <= maxCode) {
if(!Character.isJavaIdentifierPart(c)){
break;
}
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

231 th patch/28
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:13:49 HKT
--------------- END -----------------
Following are 1th generated patches:
Validating 7 patches...
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(_tokenIncomplete){
if(!Character.isJavaIdentifierPart(c)){
break;
}
}
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

232 th patch/35
Trace:
UPDATEIfStmt;InfixExpr;SName;RHSEMPTY;UPDATEInfixExpr
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:14:06 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i>maxCode){
if(!Character.isJavaIdentifierPart(c)){
break;
}
}
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

233 th patch/35
Trace:

START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:14:06 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i<maxCode){
if(!Character.isJavaIdentifierPart(c)){
break;
}
}
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

234 th patch/35
Trace:
UPDATEIfStmt;InfixExpr;CMPOP;UPDATEInfixExpr
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:14:06 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i>=maxCode){
if(!Character.isJavaIdentifierPart(c)){
break;
}
}
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

235 th patch/35
Trace:
UPDATEIfStmt;InfixExpr;CMPOP;UPDATEInfixExpr
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:14:06 HKT
--------------- END -----------------
Following are 2th generated patches:
Validating 20 patches...
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
      if (i <= maxCode) {
if( this.nextBooleanValue()){
break;
}
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

236 th patch/55
Trace:
PrefixExpr;PREFIXNOT;MethodInv;THISMETHOD;IfStmt;PrefixExpr;PREFIXNOT;MethodInv;THISMETHOD
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:14:23 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
      if (i <= maxCode) {
if(!( this.nextBooleanValue())){
break;
}
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

237 th patch/55
Trace:
IfStmt;NOT IfCondition;PrefixExpr;PREFIXNOT;MethodInv;THISMETHOD
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:14:23 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
      if (i <= maxCode) {
if( Character.isJavaIdentifierPart(c)){
break;
}
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

238 th patch/55
Trace:
PrefixExpr;PREFIXNOT;IfStmt;PrefixExpr;PREFIXNOT
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:14:23 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
      if (i <= maxCode) {
if(!this.nextBooleanValue()){
break;
}
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

239 th patch/55
Trace:
PrefixExpr;MethodInv;THISMETHOD;IfStmt;PrefixExpr;MethodInv;THISMETHOD
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:14:23 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
      if (i <= maxCode) {
if(!this._loadMore()){
break;
}
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

240 th patch/55
Trace:
PrefixExpr;MethodInv;THISMETHOD;IfStmt;PrefixExpr;MethodInv;THISMETHOD
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:14:23 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
      if (i <= maxCode) {
if(!this._skipYAMLComment()){
break;
}
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

241 th patch/55
Trace:
PrefixExpr;MethodInv;THISMETHOD;IfStmt;PrefixExpr;MethodInv;THISMETHOD
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:14:23 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
      if (i <= maxCode) {
if(!(!this.nextBooleanValue())){
break;
}
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

242 th patch/55
Trace:
IfStmt;NOT IfCondition;PrefixExpr;MethodInv;THISMETHOD
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:14:23 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
      if (i <= maxCode) {
if(!( this._skipYAMLComment())){
break;
}
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

243 th patch/55
Trace:
IfStmt;NOT IfCondition;PrefixExpr;PREFIXNOT;MethodInv;THISMETHOD
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:14:23 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
      if (i <= maxCode) {
if(!( this._loadMore())){
break;
}
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

244 th patch/55
Trace:
IfStmt;NOT IfCondition;PrefixExpr;PREFIXNOT;MethodInv;THISMETHOD
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:14:23 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
      if (i <= maxCode) {
if(!(!Character.isJavaIdentifierPart(c))){
break;
}
        if (codes[i] != 0) {
          break;
        }
      }
 else       if (!Character.isJavaIdentifierPart(c)) {
        break;
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

245 th patch/55
Trace:
IfStmt;NOT IfCondition
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:14:23 HKT
--------------- END -----------------
Following are 3th generated patches:
Validating 29 patches...
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i>maxCode){
if(!( Character.isJavaIdentifierPart(c))){
break;
}
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

246 th patch/84
Trace:
IfStmt;NOT IfCondition;PrefixExpr;PREFIXNOT
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:14:43 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i>maxCode){
if(!this._loadMore()){
break;
}
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

247 th patch/84
Trace:
PrefixExpr;MethodInv;THISMETHOD;IfStmt;PrefixExpr;MethodInv;THISMETHOD
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:14:43 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i>maxCode){
if(!(!this._skipYAMLComment())){
break;
}
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

248 th patch/84
Trace:
IfStmt;NOT IfCondition;PrefixExpr;MethodInv;THISMETHOD
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:14:43 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i>maxCode){
if(!(!this._loadMore())){
break;
}
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

249 th patch/84
Trace:
IfStmt;NOT IfCondition;PrefixExpr;MethodInv;THISMETHOD
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:14:43 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i>maxCode){
if(!this.nextBooleanValue()){
break;
}
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

250 th patch/84
Trace:
PrefixExpr;MethodInv;THISMETHOD;IfStmt;PrefixExpr;MethodInv;THISMETHOD
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:14:43 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i>maxCode){
if(!( this._loadMore())){
break;
}
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

251 th patch/84
Trace:
IfStmt;NOT IfCondition;PrefixExpr;PREFIXNOT;MethodInv;THISMETHOD
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:14:43 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i>maxCode){
if(!(!this.nextBooleanValue())){
break;
}
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

252 th patch/84
Trace:
IfStmt;NOT IfCondition;PrefixExpr;MethodInv;THISMETHOD
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:14:43 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i>maxCode){
if(!Character.isJavaIdentifierPart(c)){
break;
}
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

253 th patch/84
Trace:
UPDATEIfStmt;InfixExpr;SName;RHSEMPTY;UPDATEInfixExpr
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:14:43 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i>maxCode){
if(!this._skipYAMLComment()){
break;
}
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

254 th patch/84
Trace:
PrefixExpr;MethodInv;THISMETHOD;IfStmt;PrefixExpr;MethodInv;THISMETHOD
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:14:43 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i>maxCode){
if( this.nextBooleanValue()){
break;
}
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

255 th patch/84
Trace:
PrefixExpr;PREFIXNOT;MethodInv;THISMETHOD;IfStmt;PrefixExpr;PREFIXNOT;MethodInv;THISMETHOD
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:14:43 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i>maxCode){
if( this._skipYAMLComment()){
break;
}
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

256 th patch/84
Trace:
PrefixExpr;PREFIXNOT;MethodInv;THISMETHOD;IfStmt;PrefixExpr;PREFIXNOT;MethodInv;THISMETHOD
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:14:43 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i>maxCode){
if( this._loadMore()){
break;
}
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

257 th patch/84
Trace:
PrefixExpr;PREFIXNOT;MethodInv;THISMETHOD;IfStmt;PrefixExpr;PREFIXNOT;MethodInv;THISMETHOD
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:14:43 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i>maxCode){
if(!( this._skipYAMLComment())){
break;
}
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

258 th patch/84
Trace:
IfStmt;NOT IfCondition;PrefixExpr;PREFIXNOT;MethodInv;THISMETHOD
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:14:43 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i>maxCode){
if(!( this.nextBooleanValue())){
break;
}
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

259 th patch/84
Trace:
IfStmt;NOT IfCondition;PrefixExpr;PREFIXNOT;MethodInv;THISMETHOD
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:14:43 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i>maxCode){
if(!(!Character.isJavaIdentifierPart(c))){
break;
}
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

260 th patch/84
Trace:
IfStmt;NOT IfCondition
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:14:43 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//jacksoncore/jacksoncore_25_buggy/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java
SUCCESS
//Following are generated patch:
  private String _handleOddName2(  int startPtr,  int hash,  int[] codes) throws IOException {
    _textBuffer.resetWithShared(_inputBuffer,startPtr,(_inputPtr - startPtr));
    char[] outBuf=_textBuffer.getCurrentSegment();
    int outPtr=_textBuffer.getCurrentSegmentSize();
    final int maxCode=codes.length;
    while (true) {
      if (_inputPtr >= _inputEnd) {
        if (!_loadMore()) {
          break;
        }
      }
      char c=_inputBuffer[_inputPtr];
      int i=(int)c;
if(i>maxCode){
if( Character.isJavaIdentifierPart(c)){
break;
}
      }
      ++_inputPtr;
      hash=(hash * CharsToNameCanonicalizer.HASH_MULT) + i;
      outBuf[outPtr++]=c;
      if (outPtr >= outBuf.length) {
        outBuf=_textBuffer.finishCurrentSegment();
        outPtr=0;
      }
    }
    _textBuffer.setCurrentLength(outPtr);
{
      TextBuffer tb=_textBuffer;
      char[] buf=tb.getTextBuffer();
      int start=tb.getTextOffset();
      int len=tb.size();
      return _symbols.findSymbol(buf,start,len,hash);
    }
  }

261 th patch/84
Trace:
PrefixExpr;PREFIXNOT;IfStmt;PrefixExpr;PREFIXNOT
START : 
2023.12.06 AD at 00:27:05 HKT
---------TIME : 
2023.12.06 AD at 01:14:43 HKT
--------------- END -----------------
Following are 4th generated patches:
Validating 30 patches...
Tested:106 patches
Compile failed:36 patches
Compilation rate:0.660377358490566
Finish : jacksoncore-25 > patch : 261 | Start : Wed Dec 06 00:27:05 HKT 2023 | End : 2023.12.06 AD at 01:14:47 HKT
