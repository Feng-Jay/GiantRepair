Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException();
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.DENOMINATOR);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.ROW_INDEX);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.EVALUATION);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.BANDWIDTH);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.REAL_FORMAT);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.POLYNOMIAL);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.MEAN);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.INDEX);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.SCALE);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.NUMERATOR);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.OVERFLOW);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.ZERO_NORM);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.LENGTH);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.SHAPE);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.DIMENSION);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.FUNCTION);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.FRACTION);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.EXPONENT);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.NO_DATA);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.ZERO_NORM);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.OVERFLOW);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.EVALUATION);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.INPUT_ARRAY);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.NUMERATOR);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.DENOMINATOR);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.POLYNOMIAL);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.EVALUATIONS);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.INDEX);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.MEAN);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.LENGTH);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.COLUMN_INDEX);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.SHAPE);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.SCALE);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.DIMENSION);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.FRACTION);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.EXPONENT);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.ROW_INDEX);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.FUNCTION);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.NO_DATA);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.BANDWIDTH);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.OVERFLOW);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.ZERO_NORM);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.DENOMINATOR);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.EVALUATION);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.INPUT_ARRAY);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.EVALUATIONS);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.POLYNOMIAL);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.NUMERATOR);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.INDEX);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.MEAN);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.LENGTH);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.COLUMN_INDEX);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.SCALE);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.SHAPE);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.EXPONENT);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.FRACTION);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.DIMENSION);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.ROW_INDEX);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.FUNCTION);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.NO_DATA);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.BANDWIDTH);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.INDEX);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.MEAN);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.COLUMN_INDEX);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.LENGTH);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.SHAPE);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.SCALE);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.REAL_FORMAT);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.UNKNOWN_MODE);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.CANNOT_PARSE);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.MUTATION_RATE);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.ELITISM_RATE);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.NORMALIZE_NAN);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.OUT_OF_RANGE);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.DIMENSION);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.ROW_INDEX);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.FRACTION);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.EXPONENT);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.NO_DATA);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.FUNCTION);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.OVERFLOW);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.ZERO_NORM);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.BANDWIDTH);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.INPUT_ARRAY);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.EVALUATIONS);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.POLYNOMIAL);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.NUMERATOR);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.DENOMINATOR);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.EVALUATION);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.ZERO_NORM);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.EXPONENT);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.CANNOT_PARSE);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.USER_EXCEPTION);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.ZERO_NOT_ALLOWED);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.EVALUATIONS);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.INPUT_ARRAY);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.NORMALIZE_NAN);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.ROW_INDEX);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.WHOLE_FORMAT);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.INDEX);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.MEAN);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.NO_DATA);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.INTERNAL_ERROR);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.ELITISM_RATE);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.START_POSITION);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.NUMBER_OF_POINTS);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.ILLEGAL_STATE);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.MUTATION_RATE);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.FRACTION);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.NO_REGRESSORS);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.FUNCTION);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.LENGTH);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.SCALE);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.OVERFLOW);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.SHAPE);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.DIMENSION);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.NUMERATOR);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.ZERO_DENOMINATOR);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.BANDWIDTH);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.COLUMN_INDEX);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.REAL_FORMAT);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.DENOMINATOR);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.ARRAY_ELEMENT);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.UNKNOWN_MODE);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.POLYNOMIAL);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.OUT_OF_RANGE);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.EVALUATION);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.BANDWIDTH);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.DENOMINATOR);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.EVALUATION);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.REAL_FORMAT);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.ROW_INDEX);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.MEAN);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.POLYNOMIAL);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.INDEX);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.LENGTH);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.INPUT_ARRAY);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.EVALUATIONS);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.NO_REGRESSORS);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.OVERFLOW);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.WHOLE_FORMAT);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.SHAPE);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.SCALE);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.ZERO_NORM);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.CANNOT_PARSE);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.UNKNOWN_MODE);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.ELITISM_RATE);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.USER_EXCEPTION);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.OUT_OF_RANGE);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.NORMALIZE_NAN);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.INTERNAL_ERROR);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.NUMERATOR);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.DIMENSION);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.FUNCTION);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.EXPONENT);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.NO_DATA);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.FRACTION);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.DENOMINATOR);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.MUTATION_RATE);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.OUT_OF_RANGE);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.ELITISM_RATE);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.SCALE);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.INTERNAL_ERROR);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.SHAPE);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.INPUT_ARRAY);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.COLUMN_INDEX);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.REAL_FORMAT);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.SINGULAR_OPERATOR);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.ILLEGAL_STATE);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.WHOLE_FORMAT);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.NO_REGRESSORS);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.NORMALIZE_NAN);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.USER_EXCEPTION);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.DIMENSIONS_MISMATCH);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.INFINITE_BOUND);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.NUMERATOR);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.ZERO_DENOMINATOR);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.DIMENSION);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.DENOMINATOR_FORMAT);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.ZERO_NORM);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.NO_DATA);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.FUNCTION);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.EXPONENT);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.POLYNOMIAL);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.BANDWIDTH);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.LENGTH);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.EVALUATION);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.ROW_INDEX);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.MEAN);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.FRACTION);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.EVALUATIONS);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.INDEX);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.CANNOT_PARSE);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.OVERFLOW);
+}
Following diff 3:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.UNKNOWN_MODE);
+}
Following diff 0:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.DENOMINATOR);
+}
Following diff 0:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.POLYNOMIAL);
+}
Following diff 0:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.ZERO_NORM);
+}
Following diff 0:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.INDEX);
+}
Following diff 0:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.SCALE);
+}
Following diff 0:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.ILLEGAL_STATE);
+}
Following diff 0:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.CANNOT_PARSE);
+}
Following diff 0:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.COLUMN_INDEX);
+}
Following diff 0:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.NORMALIZE_NAN);
+}
Following diff 0:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.INFINITE_BOUND);
+}
Following diff 0:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.REAL_FORMAT);
+}
Following diff 0:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.MEAN);
+}
Following diff 0:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.UNKNOWN_MODE);
+}
Following diff 0:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.INTERNAL_ERROR);
+}
Following diff 0:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.SHAPE);
+}
Following diff 0:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.DIMENSION);
+}
Following diff 0:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.LENGTH);
+}
Following diff 0:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.NO_DATA);
+}
Following diff 0:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.FRACTION);
+}
Following diff 0:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.BANDWIDTH);
+}
Following diff 0:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.OVERFLOW);
+}
Following diff 0:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.FUNCTION);
+}
Following diff 0:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.EVALUATION);
+}
Following diff 0:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.INPUT_ARRAY);
+}
Following diff 0:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.EXPONENT);
+}
Following diff 0:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.ROW_INDEX);
+}
Following diff 0:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.NUMERATOR);
+}
Following diff 0:
+if(c2==0){
+thrownewMathIllegalStateException(LocalizedFormats.EVALUATIONS);
+}
