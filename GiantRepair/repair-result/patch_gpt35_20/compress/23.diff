Following diff 0:
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
+for(inti=1;i<5;i++){
+dictSize|=(coder.properties[i]&0xffL)<<(8*(i-1));
Following diff 0:
-dictSize|=(coder.properties[i+1]<<(8*i));
+dictSize|=(coder.properties[i]&0xffL)<<(8*(i-1));
Following diff 0:
-longdictSize=coder.properties[1];
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=0;
+dictSize|=(coder.properties[i]&0xffL)<<(8*(i-1));
Following diff 0:
-longdictSize=coder.properties[1];
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=0;
+for(inti=1;i<5;i++){
+dictSize|=(coder.properties[i]&0xffL)<<(8*(i-1));
Following diff 2:
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
+for(inti=1;i<5;i++){
+dictSize|=(coder.properties[i]&0xffL)<<((i-1)*8);
Following diff 2:
-longdictSize=coder.properties[1];
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=0;
+dictSize|=(coder.properties[i]&0xffL)<<((i-1)*8);
Following diff 2:
-dictSize|=(coder.properties[i+1]<<(8*i));
+dictSize|=(coder.properties[i]&0xffL)<<((i-1)*8);
Following diff 2:
-longdictSize=coder.properties[1];
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=0;
+for(inti=1;i<5;i++){
+dictSize|=(coder.properties[i]&0xffL)<<((i-1)*8);
Following diff 2:
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
+for(inti=1;i<5;i++){
+dictSize|=(coder.properties[i]&0xffL)<<((i-1)*8);
Following diff 2:
-longdictSize=coder.properties[1];
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
-}
+longdictSize=0;
+for(inti=1;i<5;i++){
+dictSize|=(coder.properties[i]&0xffL)<<((i-1)*8);
+}
Following diff 3:
-longdictSize=coder.properties[1];
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=0;
+dictSize|=((long)(coder.properties[i+1]&0xff)<<(8*i));
Following diff 3:
-dictSize|=(coder.properties[i+1]<<(8*i));
+dictSize|=((long)(coder.properties[i+1]&0xff)<<(8*i));
Following diff 3:
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
+for(inti=0;i<4;i++){
+dictSize|=((long)(coder.properties[i+1]&0xff)<<(8*i));
Following diff 3:
-longdictSize=coder.properties[1];
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=0;
+dictSize|=((long)(coder.properties[i+1]&0xff)<<(8*i));
Following diff 3:
-longdictSize=coder.properties[1];
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=0;
+for(inti=0;i<4;i++){
+dictSize|=((long)(coder.properties[i+1]&0xff)<<(8*i));
Following diff 4:
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
+for(inti=0;i<4;i++){
+dictSize|=((long)(coder.properties[i+1]&0xff)<<(8*i));
Following diff 4:
-dictSize|=(coder.properties[i+1]<<(8*i));
+dictSize|=((long)(coder.properties[i+1]&0xff)<<(8*i));
Following diff 4:
-longdictSize=coder.properties[1];
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=0;
+dictSize|=((long)(coder.properties[i+1]&0xff)<<(8*i));
Following diff 4:
-longdictSize=coder.properties[1];
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=0;
+for(inti=0;i<4;i++){
+dictSize|=((long)(coder.properties[i+1]&0xff)<<(8*i));
Following diff 5:
-longdictSize=coder.properties[1];
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=0;
+dictSize|=((long)coder.properties[i+1]&0xff)<<(8*i);
Following diff 5:
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
+for(inti=0;i<4;i++){
+dictSize|=((long)coder.properties[i+1]&0xff)<<(8*i);
Following diff 5:
-dictSize|=(coder.properties[i+1]<<(8*i));
+dictSize|=((long)coder.properties[i+1]&0xff)<<(8*i);
Following diff 5:
-longdictSize=coder.properties[1];
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=0;
+for(inti=0;i<4;i++){
+dictSize|=((long)coder.properties[i+1]&0xff)<<(8*i);
Following diff 5:
-longdictSize=coder.properties[1];
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=0;
+dictSize|=((long)coder.properties[i+1]&0xff)<<(8*i);
Following diff 5:
-dictSize|=(coder.properties[i+1]<<(8*i));
+dictSize|=((long)coder.properties[i+1]&0xff)<<(8*i);
Following diff 6:
-dictSize|=(coder.properties[i+1]<<(8*i));
+dictSize|=((long)(coder.properties[i+1]&0xff))<<(8*i);
Following diff 6:
-longdictSize=coder.properties[1];
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=0;
+dictSize|=((long)(coder.properties[i+1]&0xff))<<(8*i);
Following diff 6:
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
+for(inti=0;i<4;i++){
+dictSize|=((long)(coder.properties[i+1]&0xff))<<(8*i);
Following diff 6:
-longdictSize=coder.properties[1];
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=0;
+for(inti=0;i<4;i++){
+dictSize|=((long)(coder.properties[i+1]&0xff))<<(8*i);
Following diff 7:
-longdictSize=coder.properties[1];
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=0;
+dictSize|=((long)coder.properties[i+1]&0xff)<<(8*i);
Following diff 7:
-dictSize|=(coder.properties[i+1]<<(8*i));
+dictSize|=((long)coder.properties[i+1]&0xff)<<(8*i);
Following diff 7:
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
+for(inti=0;i<4;i++){
+dictSize|=((long)coder.properties[i+1]&0xff)<<(8*i);
Following diff 7:
-dictSize|=(coder.properties[i+1]<<(8*i));
+dictSize|=((long)coder.properties[i+1]&0xff)<<(8*i);
Following diff 7:
-longdictSize=coder.properties[1];
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=0;
+dictSize|=((long)coder.properties[i+1]&0xff)<<(8*i);
Following diff 8:
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
+for(inti=0;i<4;i++){
+dictSize|=(long)(coder.properties[i+1]&0xff)<<(8*i);
Following diff 8:
-longdictSize=coder.properties[1];
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=0;
+dictSize|=(long)(coder.properties[i+1]&0xff)<<(8*i);
Following diff 8:
-dictSize|=(coder.properties[i+1]<<(8*i));
+dictSize|=(long)(coder.properties[i+1]&0xff)<<(8*i);
Following diff 8:
-dictSize|=(coder.properties[i+1]<<(8*i));
+dictSize|=(long)(coder.properties[i+1]&0xff)<<(8*i);
Following diff 8:
-longdictSize=coder.properties[1];
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=0;
+for(inti=0;i<4;i++){
+dictSize|=(long)(coder.properties[i+1]&0xff)<<(8*i);
Following diff 9:
-longdictSize=coder.properties[1];
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=0;
+dictSize|=((long)(coder.properties[i]&0xff))<<((i-1)*8);
Following diff 9:
-dictSize|=(coder.properties[i+1]<<(8*i));
+dictSize|=((long)(coder.properties[i]&0xff))<<((i-1)*8);
Following diff 9:
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
+for(inti=1;i<5;i++){
+dictSize|=((long)(coder.properties[i]&0xff))<<((i-1)*8);
Following diff 9:
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
-}
+for(inti=1;i<5;i++){
+dictSize|=((long)(coder.properties[i]&0xff))<<((i-1)*8);
+}
Following diff 10:
-longdictSize=coder.properties[1];
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=0;
+dictSize|=(coder.properties[i]&0xffL)<<(8*(i-1));
Following diff 10:
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
+for(inti=1;i<5;i++){
+dictSize|=(coder.properties[i]&0xffL)<<(8*(i-1));
Following diff 10:
-dictSize|=(coder.properties[i+1]<<(8*i));
+dictSize|=(coder.properties[i]&0xffL)<<(8*(i-1));
Following diff 10:
-longdictSize=coder.properties[1];
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=0;
+dictSize|=(coder.properties[i]&0xffL)<<(8*(i-1));
Following diff 10:
-longdictSize=coder.properties[1];
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=0;
+for(inti=1;i<5;i++){
+dictSize|=(coder.properties[i]&0xffL)<<(8*(i-1));
Following diff 11:
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
+for(inti=1;i<5;i++){
+dictSize|=(coder.properties[i]&0xffL)<<((i-1)*8);
Following diff 11:
-longdictSize=coder.properties[1];
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=0;
+dictSize|=(coder.properties[i]&0xffL)<<((i-1)*8);
Following diff 11:
-dictSize|=(coder.properties[i+1]<<(8*i));
+dictSize|=(coder.properties[i]&0xffL)<<((i-1)*8);
Following diff 11:
-longdictSize=coder.properties[1];
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=0;
+for(inti=1;i<5;i++){
+dictSize|=(coder.properties[i]&0xffL)<<((i-1)*8);
Following diff 12:
-dictSize|=(coder.properties[i+1]<<(8*i));
+dictSize|=(coder.properties[i]&0xff)<<(8*(i-1));
Following diff 12:
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
+for(inti=1;i<5;i++){
+dictSize|=(coder.properties[i]&0xff)<<(8*(i-1));
Following diff 12:
-longdictSize=coder.properties[1];
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=0;
+dictSize|=(coder.properties[i]&0xff)<<(8*(i-1));
Following diff 12:
-dictSize|=(coder.properties[i+1]<<(8*i));
+dictSize|=(coder.properties[i]&0xff)<<(8*(i-1));
Following diff 12:
-longdictSize=coder.properties[1];
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=0;
+for(inti=1;i<5;i++){
+dictSize|=(coder.properties[i]&0xff)<<(8*(i-1));
Following diff 13:
-longdictSize=coder.properties[1];
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=0;
+dictSize|=((long)coder.properties[i]&0xffL)<<(8*(i-1));
Following diff 13:
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
+for(inti=1;i<5;i++){
+dictSize|=((long)coder.properties[i]&0xffL)<<(8*(i-1));
Following diff 13:
-dictSize|=(coder.properties[i+1]<<(8*i));
+dictSize|=((long)coder.properties[i]&0xffL)<<(8*(i-1));
Following diff 13:
-longdictSize=coder.properties[1];
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=0;
+dictSize|=((long)coder.properties[i]&0xffL)<<(8*(i-1));
Following diff 13:
-longdictSize=coder.properties[1];
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=0;
+for(inti=1;i<5;i++){
+dictSize|=((long)coder.properties[i]&0xffL)<<(8*(i-1));
Following diff 13:
-longdictSize=coder.properties[1];
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
-}
+longdictSize=0;
+for(inti=1;i<5;i++){
+dictSize|=((long)coder.properties[i]&0xffL)<<(8*(i-1));
+}
Following diff 14:
-dictSize|=(coder.properties[i+1]<<(8*i));
+dictSize|=((long)coder.properties[i]&0xff)<<((i-1)*8);
Following diff 14:
-longdictSize=coder.properties[1];
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=0;
+dictSize|=((long)coder.properties[i]&0xff)<<((i-1)*8);
Following diff 14:
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
+for(inti=1;i<5;i++){
+dictSize|=((long)coder.properties[i]&0xff)<<((i-1)*8);
Following diff 15:
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
+for(inti=0;i<4;i++){
+dictSize|=((long)coder.properties[i+1]&0xffL)<<(8*i);
Following diff 15:
-longdictSize=coder.properties[1];
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=0;
+dictSize|=((long)coder.properties[i+1]&0xffL)<<(8*i);
Following diff 15:
-dictSize|=(coder.properties[i+1]<<(8*i));
+dictSize|=((long)coder.properties[i+1]&0xffL)<<(8*i);
Following diff 15:
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
-}
+for(inti=0;i<4;i++){
+dictSize|=((long)coder.properties[i+1]&0xffL)<<(8*i);
+}
Following diff 15:
-longdictSize=coder.properties[1];
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=0;
+for(inti=0;i<4;i++){
+dictSize|=((long)coder.properties[i+1]&0xffL)<<(8*i);
Following diff 17:
-longdictSize=coder.properties[1];
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=0;
+dictSize|=(coder.properties[i]&0xff)<<((i-1)*8);
Following diff 17:
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
+for(inti=1;i<5;i++){
+dictSize|=(coder.properties[i]&0xff)<<((i-1)*8);
Following diff 17:
-dictSize|=(coder.properties[i+1]<<(8*i));
+dictSize|=(coder.properties[i]&0xff)<<((i-1)*8);
Following diff 17:
-longdictSize=coder.properties[1];
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
-}
+longdictSize=0;
+for(inti=1;i<5;i++){
+dictSize|=(coder.properties[i]&0xff)<<((i-1)*8);
+}
Following diff 17:
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
-}
+for(inti=1;i<5;i++){
+dictSize|=(coder.properties[i]&0xff)<<((i-1)*8);
+}
Following diff 18:
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
+for(inti=0;i<4;i++){
+dictSize|=(long)(coder.properties[i+1]&0xff)<<(8*i);
Following diff 18:
-longdictSize=coder.properties[1];
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=0;
+dictSize|=(long)(coder.properties[i+1]&0xff)<<(8*i);
Following diff 18:
-dictSize|=(coder.properties[i+1]<<(8*i));
+dictSize|=(long)(coder.properties[i+1]&0xff)<<(8*i);
Following diff 18:
-dictSize|=(coder.properties[i+1]<<(8*i));
+dictSize|=(long)(coder.properties[i+1]&0xff)<<(8*i);
Following diff 18:
-longdictSize=coder.properties[1];
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=0;
+for(inti=0;i<4;i++){
+dictSize|=(long)(coder.properties[i+1]&0xff)<<(8*i);
Following diff 18:
-longdictSize=coder.properties[1];
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
-}
+longdictSize=0;
+for(inti=0;i<4;i++){
+dictSize|=(long)(coder.properties[i+1]&0xff)<<(8*i);
+}
Following diff 19:
-dictSize|=(coder.properties[i+1]<<(8*i));
+dictSize|=((long)coder.properties[i]&0xff)<<(8*(i-1));
Following diff 19:
-longdictSize=coder.properties[1];
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=0;
+dictSize|=((long)coder.properties[i]&0xff)<<(8*(i-1));
Following diff 19:
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
+for(inti=1;i<5;i++){
+dictSize|=((long)coder.properties[i]&0xff)<<(8*(i-1));
Following diff 19:
-dictSize|=(coder.properties[i+1]<<(8*i));
+dictSize|=((long)coder.properties[i]&0xff)<<(8*(i-1));
Following diff 19:
-longdictSize=coder.properties[1];
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=0;
+for(inti=1;i<5;i++){
+dictSize|=((long)coder.properties[i]&0xff)<<(8*(i-1));
Following diff 20:
-longdictSize=coder.properties[1];
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=0;
+dictSize|=((long)(coder.properties[i])&0xffL)<<(8*(i-1));
Following diff 20:
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
+for(inti=1;i<5;i++){
+dictSize|=((long)(coder.properties[i])&0xffL)<<(8*(i-1));
Following diff 20:
-dictSize|=(coder.properties[i+1]<<(8*i));
+dictSize|=((long)(coder.properties[i])&0xffL)<<(8*(i-1));
Following diff 20:
-dictSize|=(coder.properties[i+1]<<(8*i));
+dictSize|=((long)(coder.properties[i])&0xffL)<<(8*(i-1));
Following diff 20:
-longdictSize=coder.properties[1];
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=0;
+for(inti=1;i<5;i++){
+dictSize|=((long)(coder.properties[i])&0xffL)<<(8*(i-1));
Following diff 21:
-dictSize|=(coder.properties[i+1]<<(8*i));
+dictSize|=((long)(coder.properties[i+1]&0xff)<<(8*i));
Following diff 21:
-longdictSize=coder.properties[1];
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=coder.properties[1]&0xff;
+dictSize|=((long)(coder.properties[i+1]&0xff)<<(8*i));
Following diff 21:
-longdictSize=coder.properties[1];
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=coder.properties[1]&0xff;
+dictSize|=((long)(coder.properties[i+1]&0xff)<<(8*i));
Following diff 21:
-dictSize|=(coder.properties[i+1]<<(8*i));
+dictSize|=((long)(coder.properties[i+1]&0xff)<<(8*i));
Following diff 22:
-longdictSize=coder.properties[1];
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=0;
+dictSize|=(coder.properties[i+1]&0xffL)<<(8*i);
Following diff 22:
-dictSize|=(coder.properties[i+1]<<(8*i));
+dictSize|=(coder.properties[i+1]&0xffL)<<(8*i);
Following diff 22:
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
+for(inti=0;i<4;i++){
+dictSize|=(coder.properties[i+1]&0xffL)<<(8*i);
Following diff 22:
-longdictSize=coder.properties[1];
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=0;
+for(inti=0;i<4;i++){
+dictSize|=(coder.properties[i+1]&0xffL)<<(8*i);
Following diff 22:
-longdictSize=coder.properties[1];
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=0;
+dictSize|=(coder.properties[i+1]&0xffL)<<(8*i);
Following diff 23:
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
+for(inti=1;i<5;i++){
+dictSize|=((long)(coder.properties[i]&0xff)<<(8*(i-1)));
Following diff 23:
-longdictSize=coder.properties[1];
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=0;
+dictSize|=((long)(coder.properties[i]&0xff)<<(8*(i-1)));
Following diff 23:
-dictSize|=(coder.properties[i+1]<<(8*i));
+dictSize|=((long)(coder.properties[i]&0xff)<<(8*(i-1)));
Following diff 23:
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
+for(inti=1;i<5;i++){
+dictSize|=((long)(coder.properties[i]&0xff)<<(8*(i-1)));
Following diff 25:
-dictSize|=(coder.properties[i+1]<<(8*i));
+dictSize|=((long)coder.properties[i])&0xffL;
+if(i<4){
+dictSize<<=8;
+}
Following diff 25:
-dictSize|=(coder.properties[i+1]<<(8*i));
+dictSize|=((long)coder.properties[i])&0xffL;
+dictSize<<=8;
Following diff 26:
-longdictSize=coder.properties[1];
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=coder.properties[1]&0xff;
+dictSize|=((long)coder.properties[i+1]&0xff)<<(8*i);
Following diff 26:
-dictSize|=(coder.properties[i+1]<<(8*i));
+dictSize|=((long)coder.properties[i+1]&0xff)<<(8*i);
Following diff 26:
-dictSize|=(coder.properties[i+1]<<(8*i));
+dictSize|=((long)coder.properties[i+1]&0xff)<<(8*i);
Following diff 26:
-longdictSize=coder.properties[1];
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=coder.properties[1]&0xff;
+dictSize|=((long)coder.properties[i+1]&0xff)<<(8*i);
Following diff 27:
-dictSize|=(coder.properties[i+1]<<(8*i));
+dictSize|=((long)(coder.properties[i])&0xff)<<((i-1)*8);
Following diff 27:
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
+for(inti=1;i<5;i++){
+dictSize|=((long)(coder.properties[i])&0xff)<<((i-1)*8);
Following diff 27:
-longdictSize=coder.properties[1];
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=0;
+dictSize|=((long)(coder.properties[i])&0xff)<<((i-1)*8);
Following diff 27:
-longdictSize=coder.properties[1];
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=0;
+dictSize|=((long)(coder.properties[i])&0xff)<<((i-1)*8);
Following diff 27:
-longdictSize=coder.properties[1];
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
-}
+longdictSize=0;
+for(inti=1;i<5;i++){
+dictSize|=((long)(coder.properties[i])&0xff)<<((i-1)*8);
+}
Following diff 28:
-dictSize|=(coder.properties[i+1]<<(8*i));
+dictSize|=((long)(coder.properties[i+1]&0xff))<<(8*i);
Following diff 28:
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
+for(inti=0;i<4;i++){
+dictSize|=((long)(coder.properties[i+1]&0xff))<<(8*i);
Following diff 28:
-longdictSize=coder.properties[1];
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=0;
+dictSize|=((long)(coder.properties[i+1]&0xff))<<(8*i);
Following diff 28:
-longdictSize=coder.properties[1];
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=0;
+dictSize|=((long)(coder.properties[i+1]&0xff))<<(8*i);
Following diff 28:
-longdictSize=coder.properties[1];
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=0;
+for(inti=0;i<4;i++){
+dictSize|=((long)(coder.properties[i+1]&0xff))<<(8*i);
Following diff 29:
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
+for(inti=1;i<5;i++){
+dictSize|=((long)(coder.properties[i]&0xff))<<(8*(i-1));
Following diff 29:
-dictSize|=(coder.properties[i+1]<<(8*i));
+dictSize|=((long)(coder.properties[i]&0xff))<<(8*(i-1));
Following diff 29:
-longdictSize=coder.properties[1];
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=0;
+dictSize|=((long)(coder.properties[i]&0xff))<<(8*(i-1));
Following diff 29:
-longdictSize=coder.properties[1];
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=0;
+dictSize|=((long)(coder.properties[i]&0xff))<<(8*(i-1));
Following diff 29:
-longdictSize=coder.properties[1];
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=0;
+for(inti=1;i<5;i++){
+dictSize|=((long)(coder.properties[i]&0xff))<<(8*(i-1));
Following diff 30:
-longdictSize=coder.properties[1];
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=0;
+dictSize|=((long)coder.properties[i]&0xff)<<(8*(i-1));
Following diff 30:
-dictSize|=(coder.properties[i+1]<<(8*i));
+dictSize|=((long)coder.properties[i]&0xff)<<(8*(i-1));
Following diff 30:
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
+for(inti=1;i<5;i++){
+dictSize|=((long)coder.properties[i]&0xff)<<(8*(i-1));
Following diff 30:
-dictSize|=(coder.properties[i+1]<<(8*i));
+dictSize|=((long)coder.properties[i]&0xff)<<(8*(i-1));
Following diff 30:
-longdictSize=coder.properties[1];
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
-}
+longdictSize=0;
+for(inti=1;i<5;i++){
+dictSize|=((long)coder.properties[i]&0xff)<<(8*(i-1));
+}
Following diff 30:
-longdictSize=coder.properties[1];
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=0;
+for(inti=1;i<5;i++){
+dictSize|=((long)coder.properties[i]&0xff)<<(8*(i-1));
Following diff 31:
-longdictSize=coder.properties[1];
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=0;
+dictSize|=(long)(coder.properties[i]&0xff)<<(8*(i-1));
Following diff 31:
-dictSize|=(coder.properties[i+1]<<(8*i));
+dictSize|=(long)(coder.properties[i]&0xff)<<(8*(i-1));
Following diff 31:
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
+for(inti=1;i<5;i++){
+dictSize|=(long)(coder.properties[i]&0xff)<<(8*(i-1));
Following diff 31:
-longdictSize=coder.properties[1];
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
-}
+longdictSize=0;
+for(inti=1;i<5;i++){
+dictSize|=(long)(coder.properties[i]&0xff)<<(8*(i-1));
+}
Following diff 31:
-longdictSize=coder.properties[1];
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=0;
+dictSize|=(long)(coder.properties[i]&0xff)<<(8*(i-1));
Following diff 31:
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
-}
+for(inti=1;i<5;i++){
+dictSize|=(long)(coder.properties[i]&0xff)<<(8*(i-1));
+}
Following diff 32:
-longdictSize=coder.properties[1];
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=0;
+dictSize|=(coder.properties[i]&0xffL)<<(8*(i-1));
Following diff 32:
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
+for(inti=1;i<5;i++){
+dictSize|=(coder.properties[i]&0xffL)<<(8*(i-1));
Following diff 32:
-dictSize|=(coder.properties[i+1]<<(8*i));
+dictSize|=(coder.properties[i]&0xffL)<<(8*(i-1));
Following diff 32:
-longdictSize=coder.properties[1];
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=0;
+for(inti=1;i<5;i++){
+dictSize|=(coder.properties[i]&0xffL)<<(8*(i-1));
Following diff 32:
-longdictSize=coder.properties[1];
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
-}
+longdictSize=0;
+for(inti=1;i<5;i++){
+dictSize|=(coder.properties[i]&0xffL)<<(8*(i-1));
+}
Following diff 33:
-longdictSize=coder.properties[1];
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=coder.properties[1]&0xff;
+dictSize|=(coder.properties[i+1]&0xffL)<<(8*i);
Following diff 33:
-dictSize|=(coder.properties[i+1]<<(8*i));
+dictSize|=(coder.properties[i+1]&0xffL)<<(8*i);
Following diff 33:
-dictSize|=(coder.properties[i+1]<<(8*i));
+dictSize|=(coder.properties[i+1]&0xffL)<<(8*i);
Following diff 33:
-longdictSize=coder.properties[1];
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=coder.properties[1]&0xff;
+dictSize|=(coder.properties[i+1]&0xffL)<<(8*i);
Following diff 34:
-longdictSize=coder.properties[1];
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=0;
+dictSize|=((long)coder.properties[i+1]&0xffL)<<(8*i);
Following diff 34:
-dictSize|=(coder.properties[i+1]<<(8*i));
+dictSize|=((long)coder.properties[i+1]&0xffL)<<(8*i);
Following diff 34:
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
+for(inti=0;i<4;i++){
+dictSize|=((long)coder.properties[i+1]&0xffL)<<(8*i);
Following diff 34:
-longdictSize=coder.properties[1];
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=0;
+dictSize|=((long)coder.properties[i+1]&0xffL)<<(8*i);
Following diff 34:
-longdictSize=coder.properties[1];
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=0;
+for(inti=0;i<4;i++){
+dictSize|=((long)coder.properties[i+1]&0xffL)<<(8*i);
Following diff 35:
-longdictSize=coder.properties[1];
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=0;
+dictSize|=((long)(coder.properties[i]&0xff)<<(8*(i-1)));
Following diff 35:
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
+for(inti=1;i<5;i++){
+dictSize|=((long)(coder.properties[i]&0xff)<<(8*(i-1)));
Following diff 35:
-dictSize|=(coder.properties[i+1]<<(8*i));
+dictSize|=((long)(coder.properties[i]&0xff)<<(8*(i-1)));
Following diff 35:
-longdictSize=coder.properties[1];
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
-}
+longdictSize=0;
+for(inti=1;i<5;i++){
+dictSize|=((long)(coder.properties[i]&0xff)<<(8*(i-1)));
+}
Following diff 35:
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
-}
+for(inti=1;i<5;i++){
+dictSize|=((long)(coder.properties[i]&0xff)<<(8*(i-1)));
+}
Following diff 36:
-longdictSize=coder.properties[1];
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
-}
+longdictSize=0;
+for(inti=1;i<5;i++){
+if(i<=coder.properties.length-1){
+dictSize|=((long)(coder.properties[i]&0xff))<<(8*(i-1));
+}
+}
Following diff 36:
-longdictSize=coder.properties[1];
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
-}
+longdictSize=0;
+for(inti=1;i<5;i++){
+if(i<coder.properties.length-1){
+dictSize|=((long)(coder.properties[i]&0xff))<<(8*(i-1));
+}
+}
Following diff 36:
-longdictSize=coder.properties[1];
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
-}
+longdictSize=0;
+for(inti=1;i<5;i++){
+if(!(i>=coder.properties.length-1)){
+dictSize|=((long)(coder.properties[i]&0xff))<<(8*(i-1));
+}
+}
Following diff 36:
-longdictSize=coder.properties[1];
-for(inti=1;i<4;i++){
-dictSize|=(coder.properties[i+1]<<(8*i));
-}
+longdictSize=0;
+for(inti=1;i<=5;i++){
+if(i<=coder.properties.length-1){
+dictSize|=((long)(coder.properties[i]&0xff))<<(8*(i-1));
+}
+}
Following diff 39:
-longdictSize=coder.properties[1];
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=coder.properties[1]&0xff;
+dictSize|=(coder.properties[i+1]&0xffL)<<(8*i);
Following diff 39:
-dictSize|=(coder.properties[i+1]<<(8*i));
+dictSize|=(coder.properties[i+1]&0xffL)<<(8*i);
Following diff 39:
-dictSize|=(coder.properties[i+1]<<(8*i));
+dictSize|=(coder.properties[i+1]&0xffL)<<(8*i);
Following diff 39:
-longdictSize=coder.properties[1];
-dictSize|=(coder.properties[i+1]<<(8*i));
+longdictSize=coder.properties[1]&0xff;
+dictSize|=(coder.properties[i+1]&0xffL)<<(8*i);
