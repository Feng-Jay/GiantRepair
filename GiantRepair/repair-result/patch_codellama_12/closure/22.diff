Following diff 16:
-if(gramps.isCall()&&parent==gramps.getFirstChild()){
-if(n==parent.getFirstChild()&&parent.getChildCount()==2&&n.getNext().isName()&&"eval".equals(n.getNext().getString())){
-return;
-}
-}
-if(n==parent.getLastChild()){
-for(Nodean:parent.getAncestors()){
-intancestorType=an.getType();
-if(ancestorType==Token.COMMA)continue;
-if(ancestorType!=Token.EXPR_RESULT&&ancestorType!=Token.BLOCK)return;
-elsebreak;
-}
-}
Following diff 16:
-for(Nodean:parent.getAncestors()){
-intancestorType=an.getType();
-if(ancestorType==Token.COMMA)continue;
-if(ancestorType!=Token.EXPR_RESULT&&ancestorType!=Token.BLOCK)return;
-elsebreak;
-}
Following diff 16:
-if(n==parent.getFirstChild()&&parent.getChildCount()==2&&n.getNext().isName()&&"eval".equals(n.getNext().getString())){
-return;
-}
-if(ancestorType!=Token.EXPR_RESULT&&ancestorType!=Token.BLOCK)return;
Following diff 16:
-if(gramps.isCall()&&parent==gramps.getFirstChild()){
-if(n==parent.getFirstChild()&&parent.getChildCount()==2&&n.getNext().isName()&&"eval".equals(n.getNext().getString())){
-return;
-}
-}
-if(ancestorType!=Token.EXPR_RESULT&&ancestorType!=Token.BLOCK)return;
Following diff 16:
-if(ancestorType!=Token.EXPR_RESULT&&ancestorType!=Token.BLOCK)return;
-elsebreak;
