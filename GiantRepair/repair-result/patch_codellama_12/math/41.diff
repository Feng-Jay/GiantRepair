Following diff 6:
-elseif(length>1){
-doubleaccum=0.0;
-doubledev=0.0;
-doubleaccum2=0.0;
-for(inti=begin;i<begin+length;i++){
-dev=values[i]-mean;
-accum+=weights[i]*(dev*dev);
-accum2+=weights[i]*dev;
-}
-doublesumWts=0;
-for(inti=0;i<weights.length;i++){
-sumWts+=weights[i];
-}
-if(isBiasCorrected){
-var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
-}
-else{
-var=(accum-(accum2*accum2/sumWts))/sumWts;
-}
-}
+if(length>1){
+doubleaccum=0.0;
+doubleaccum2=0.0;
+doubledev=0.0;
+doublesumWts=0;
+for(inti=begin;i<begin+length;i++){
+dev=values[i]-mean;
+accum+=weights[i]*(dev*dev);
+accum2+=weights[i]*dev;
+sumWts+=weights[i];
+}
+if(isBiasCorrected){
+var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+}
+else{
+var=(accum-(accum2*accum2/sumWts))/sumWts;
+}
+}
Following diff 6:
-elseif(length>1){
-doubleaccum=0.0;
-doubledev=0.0;
-doubleaccum2=0.0;
-for(inti=begin;i<begin+length;i++){
-dev=values[i]-mean;
-accum+=weights[i]*(dev*dev);
-accum2+=weights[i]*dev;
-}
-doublesumWts=0;
-for(inti=0;i<weights.length;i++){
-sumWts+=weights[i];
-}
-if(isBiasCorrected){
-var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
-}
-else{
-var=(accum-(accum2*accum2/sumWts))/sumWts;
-}
-}
+if(incMoment){
+doubleaccum=0.0;
+doubleaccum2=0.0;
+doubledev=0.0;
+doublesumWts=0;
+for(inti=begin;i<begin+length;i++){
+dev=values[i]-mean;
+accum+=weights[i]*(dev*dev);
+accum2+=weights[i]*dev;
+sumWts+=weights[i];
+}
+if(isBiasCorrected){
+var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+}
+else{
+var=(accum-(accum2*accum2/sumWts))/sumWts;
+}
+}
Following diff 6:
-elseif(length>1){
-doubleaccum=0.0;
-doubledev=0.0;
-doubleaccum2=0.0;
-for(inti=begin;i<begin+length;i++){
-dev=values[i]-mean;
-accum+=weights[i]*(dev*dev);
-accum2+=weights[i]*dev;
-}
-doublesumWts=0;
-for(inti=0;i<weights.length;i++){
-sumWts+=weights[i];
-}
-if(isBiasCorrected){
-var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
-}
-else{
-var=(accum-(accum2*accum2/sumWts))/sumWts;
-}
-}
+if(length>=1){
+doubleaccum=0.0;
+doubleaccum2=0.0;
+doubledev=0.0;
+doublesumWts=0;
+for(inti=begin;i<begin+length;i++){
+dev=values[i]-mean;
+accum+=weights[i]*(dev*dev);
+accum2+=weights[i]*dev;
+sumWts+=weights[i];
+}
+if(isBiasCorrected){
+var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+}
+else{
+var=(accum-(accum2*accum2/sumWts))/sumWts;
+}
+}
Following diff 6:
-elseif(length>1){
-doubleaccum=0.0;
-doubledev=0.0;
-doubleaccum2=0.0;
-for(inti=begin;i<begin+length;i++){
-dev=values[i]-mean;
-accum+=weights[i]*(dev*dev);
-accum2+=weights[i]*dev;
-}
-doublesumWts=0;
-for(inti=0;i<weights.length;i++){
-sumWts+=weights[i];
-}
-if(isBiasCorrected){
-var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
-}
-else{
-var=(accum-(accum2*accum2/sumWts))/sumWts;
-}
-}
+if(isBiasCorrected){
+doubleaccum=0.0;
+doubleaccum2=0.0;
+doubledev=0.0;
+doublesumWts=0;
+for(inti=begin;i<begin+length;i++){
+dev=values[i]-mean;
+accum+=weights[i]*(dev*dev);
+accum2+=weights[i]*dev;
+sumWts+=weights[i];
+}
+if(isBiasCorrected){
+var=(accum-(accum2*accum2/sumWts))/(sumWts-1.0);
+}
+else{
+var=(accum-(accum2*accum2/sumWts))/sumWts;
+}
+}
