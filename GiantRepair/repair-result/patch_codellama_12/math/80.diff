Following diff 0:
-intj=4*n-1;
-for(inti=0;i<j;i+=4){
-for(intk=0;k<4;k+=step){
-finaldoubletmp=work[i+k];
-work[i+k]=work[j-k];
-work[j-k]=tmp;
-}
-j-=4;
-}
Following diff 0:
-finaldoubletmp=work[i+k];
-work[i+k]=work[j-k];
-work[j-k]=tmp;
Following diff 0:
-work[i+k]=work[j-k];
-work[j-k]=tmp;
-j-=4;
Following diff 0:
-for(inti=0;i<j;i+=4){
-for(intk=0;k<4;k+=step){
-finaldoubletmp=work[i+k];
-work[i+k]=work[j-k];
-work[j-k]=tmp;
-}
-j-=4;
-}
+for(inti=0;i<n;i+=step){
+finaldoubletmp=work[i];
+work[i]=work[n-i-1];
+work[n-i-1]=tmp;
+}
Following diff 0:
-for(inti=0;i<j;i+=4){
-for(intk=0;k<4;k+=step){
-finaldoubletmp=work[i+k];
-work[i+k]=work[j-k];
-work[j-k]=tmp;
-}
-j-=4;
-}
Following diff 0:
-work[i+k]=work[j-k];
+for(inti=0;i<n;i+=step){
+finaldoubletmp=work[i];
+work[i]=work[n-i-1];
+work[n-i-1]=tmp;
+}
Following diff 0:
-for(intk=0;k<4;k+=step){
-finaldoubletmp=work[i+k];
-work[i+k]=work[j-k];
-work[j-k]=tmp;
-}
+for(inti=0;i<n;i+=step){
+finaldoubletmp=work[i];
+work[i]=work[n-i-1];
+work[n-i-1]=tmp;
+}
Following diff 0:
-for(intk=0;k<4;k+=step){
-finaldoubletmp=work[i+k];
-work[i+k]=work[j-k];
-work[j-k]=tmp;
-}
-j-=4;
Following diff 0:
-for(intk=0;k<4;k+=step){
-finaldoubletmp=work[i+k];
-work[i+k]=work[j-k];
-work[j-k]=tmp;
-}
Following diff 0:
-work[i+k]=work[j-k];
-work[j-k]=tmp;
Following diff 0:
-intj=4*n-1;
-for(inti=0;i<j;i+=4){
-for(intk=0;k<4;k+=step){
-finaldoubletmp=work[i+k];
-work[i+k]=work[j-k];
-work[j-k]=tmp;
-}
-j-=4;
-}
+for(inti=0;i<n;i+=step){
+finaldoubletmp=work[i];
+work[i]=work[n-i-1];
+work[n-i-1]=tmp;
+}
Following diff 0:
-work[i+k]=work[j-k];
-j-=4;
Following diff 0:
-work[i+k]=work[j-k];
Following diff 0:
-for(intk=0;k<4;k+=step){
-finaldoubletmp=work[i+k];
-work[i+k]=work[j-k];
-work[j-k]=tmp;
-}
-j-=4;
+for(inti=0;i<n;i+=step){
+finaldoubletmp=work[i];
+work[i]=work[n-i-1];
+work[n-i-1]=tmp;
+}
Following diff 0:
-work[i+k]=work[j-k];
-work[j-k]=tmp;
+for(inti=0;i<n;i+=step){
+finaldoubletmp=work[i];
+work[i]=work[n-i-1];
+work[n-i-1]=tmp;
+}
Following diff 0:
-work[i+k]=work[j-k];
-j-=4;
+for(inti=0;i<n;i+=step){
+finaldoubletmp=work[i];
+work[i]=work[n-i-1];
+work[n-i-1]=tmp;
+}
