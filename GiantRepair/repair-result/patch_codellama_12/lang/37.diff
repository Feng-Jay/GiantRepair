Following diff 5:
+finalClass<?>type2=array2.getClass().getComponentType();
+if(!type1.isAssignableFrom(type2)){
+thrownewIllegalArgumentException(type2.getName()+"cannotbestoredinanarrayof"+type1.getName());
+}
Following diff 5:
+finalClass<?>type2=array2.getClass().getComponentType();
+if(!type1.isAssignableFrom(type2)){
+thrownewIllegalArgumentException(type2.getName()+"cannotbestoredinanarrayof"+type1.getName());
+}
+finalintjoinedArrayLength=array1.length+array2.length;
Following diff 6:
+finalClass<?>type2=array2.getClass().getComponentType();
+if(!type1.isAssignableFrom(type2)){
+thrownewIllegalArgumentException("Cannotstore"+type2.getName()+"inanarrayof"+type1.getName());
+}
Following diff 18:
+finalClass<?>type2=array2.getClass().getComponentType();
+if(!type1.isAssignableFrom(type2)){
+thrownewIllegalArgumentException(type2.getName()+"[]cannotbestoredin"+type1.getName()+"[]");
+}
Following diff 18:
-T[]joinedArray=(T[])Array.newInstance(type1,array1.length+array2.length);
+finalClass<?>type2=array2.getClass().getComponentType();
+if(!type1.isAssignableFrom(type2)){
+thrownewIllegalArgumentException(type2.getName()+"[]cannotbestoredin"+type1.getName()+"[]");
+}
+finalT[]joinedArray=(T[])Array.newInstance(type1,array1.length+array2.length);
