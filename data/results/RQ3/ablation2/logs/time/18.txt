Repair : time_18
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_18/0.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_18/0.java
Tested:0 patches
Compile failed:0 patches
Compilation rate:NaN

Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_18/1.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_18/1.java
Current actions:
DELETE:
Original line: 3Chronology base;

Following are 0th generated patches:
Validating 113 patches...
Current actions:
DELETE:
Original line: 3Chronology base;

INSERT:
4:if(instant>=iCutoverMillis){
throw new IllegalArgumentException("Specified date does not exist");
}
TO:
2

DELETE:
Original line: 4if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}

DELETE:
Original line: 7long instant;

DELETE:
Original line: 8instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

DELETE:
Original line: 9if(instant<iCutoverMillis){
instant=iJulianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
if(instant>=iCutoverMillis){
throw new IllegalArgumentException("Specified date does not exist");
}
}

Following are 1th generated patches:
Validating 6 patches...
Current actions:
DELETE:
Original line: 3Chronology base;

INSERT:
4:if(instant>=iCutoverMillis){
throw new IllegalArgumentException("Specified date does not exist");
}
TO:
2

DELETE:
Original line: 4if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}

DELETE:
Original line: 7long instant;

DELETE:
Original line: 8instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

DELETE:
Original line: 10instant=iJulianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

DELETE:
Original line: 11if(instant>=iCutoverMillis){
throw new IllegalArgumentException("Specified date does not exist");
}

Following are 2th generated patches:
Validating 6 patches...
Current actions:
INSERT:
4:if(instant>=iCutoverMillis){
throw new IllegalArgumentException("Specified date does not exist");
}
TO:
2

DELETE:
Original line: 8instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

DELETE:
Original line: 9if(instant<iCutoverMillis){
instant=iJulianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
if(instant>=iCutoverMillis){
throw new IllegalArgumentException("Specified date does not exist");
}
}

Following are 3th generated patches:
Validating 3 patches...
Current actions:
DELETE:
Original line: 3Chronology base;

DELETE:
Original line: 4if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}

DELETE:
Original line: 8instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

DELETE:
Original line: 9if(instant<iCutoverMillis){
instant=iJulianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
if(instant>=iCutoverMillis){
throw new IllegalArgumentException("Specified date does not exist");
}
}

Following are 4th generated patches:
Validating 4 patches...
Current actions:
INSERT:
3:long instant=iBase.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
TO:
2

DELETE:
Original line: 3Chronology base;

INSERT:
4:if(instant>=iCutoverMillis){
throw new IllegalArgumentException("Specified date does not exist");
}
TO:
2

DELETE:
Original line: 4if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}

DELETE:
Original line: 7long instant;

DELETE:
Original line: 8instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

DELETE:
Original line: 9if(instant<iCutoverMillis){
instant=iJulianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
if(instant>=iCutoverMillis){
throw new IllegalArgumentException("Specified date does not exist");
}
}

Tested:83 patches
Compile failed:71 patches
Compilation rate:0.14457831325301204
NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPNNNNNNPPNNPNNNPPPNNNNNNNNNNNNNNNNNNNNNNNPPNNPPNNNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_18/2.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_18/2.java
Current actions:
DELETE:
Original line: 12throw new IllegalArgumentException("Specified date does not exist");

Following are 0th generated patches:
Validating 3 patches...
Current actions:
DELETE:
Original line: 12throw new IllegalArgumentException("Specified date does not exist");

Following are 1th generated patches:
Validating 1 patches...
Current actions:
INSERT:
12:return -1;
TO:
11

Following are 2th generated patches:
Validating 1 patches...
Current actions:
INSERT:
12:return -1;
TO:
11

DELETE:
Original line: 12throw new IllegalArgumentException("Specified date does not exist");

Following are 3th generated patches:
Validating 2 patches...
Tested:89 patches
Compile failed:73 patches
Compilation rate:0.1797752808988764
NPPPNP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_18/3.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_18/3.java
Current actions:
DELETE:
Original line: 12throw new IllegalArgumentException("Specified date does not exist");

Following are 0th generated patches:
Validating 3 patches...
Current actions:
INSERT:
12:return -iCutoverMillis;
TO:
11

Following are 1th generated patches:
Validating 17 patches...
Current actions:
DELETE:
Original line: 12throw new IllegalArgumentException("Specified date does not exist");

Following are 2th generated patches:
Validating 1 patches...
Current actions:
INSERT:
12:return -iCutoverMillis;
TO:
11

DELETE:
Original line: 12throw new IllegalArgumentException("Specified date does not exist");

Following are 3th generated patches:
Validating 18 patches...
Tested:127 patches
Compile failed:97 patches
Compilation rate:0.23622047244094488
NPPNNNNNNNNNNNNNNNNNPNNNNNNPPPPPPPPPPP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_18/4.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_18/4.java
Current actions:
DELETE:
Original line: 3Chronology base;

Following are 0th generated patches:
Validating 5 patches...
Current actions:
DELETE:
Original line: 3Chronology base;

DELETE:
Original line: 4if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}

Following are 1th generated patches:
Validating 2 patches...
Current actions:
DELETE:
Original line: 4if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}

Following are 2th generated patches:
Validating 1 patches...
Current actions:
DELETE:
Original line: 5return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

Following are 3th generated patches:
Validating 1 patches...
Current actions:
DELETE:
Original line: 3Chronology base;

Following are 4th generated patches:
Validating 1 patches...
Current actions:
DELETE:
Original line: 3Chronology base;

DELETE:
Original line: 5return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

Tested:136 patches
Compile failed:100 patches
Compilation rate:0.2647058823529412
NNPPPPPPN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_18/5.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_18/5.java
Current actions:
INSERT:
8:{
instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
TO:
7

Following are 0th generated patches:
Validating 36 patches...
Current actions:
DELETE:
Original line: 9if(instant<iCutoverMillis){
instant=iJulianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
if(instant>=iCutoverMillis){
throw new IllegalArgumentException("Specified date does not exist");
}
}

INSERT:
11:catch(IllegalArgumentException ex){
instant=iJulianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
TO:
7

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
8:{
instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
TO:
7

DELETE:
Original line: 9if(instant<iCutoverMillis){
instant=iJulianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
if(instant>=iCutoverMillis){
throw new IllegalArgumentException("Specified date does not exist");
}
}

INSERT:
11:catch(IllegalArgumentException ex){
instant=iJulianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
TO:
7

Following are 2th generated patches:
Validating 200 patches...
Tested:547 patches
Compile failed:505 patches
Compilation rate:0.07678244972577697
NNNNNNPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_18/6.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_18/6.java
Current actions:
DELETE:
Original line: 3Chronology base;

Following are 0th generated patches:
Validating 195 patches...
Current actions:
DELETE:
Original line: 3Chronology base;

UPDATE
FROM:
5:return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
TO:
4:return super.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

INSERT:
6:return iChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
TO:
6

DELETE:
Original line: 7long instant;

DELETE:
Original line: 8instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

DELETE:
Original line: 9if(instant<iCutoverMillis){
instant=iJulianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
if(instant>=iCutoverMillis){
throw new IllegalArgumentException("Specified date does not exist");
}
}

DELETE:
Original line: 15return instant;

Following are 1th generated patches:
Validating 200 patches...
Current actions:
DELETE:
Original line: 3Chronology base;

UPDATE
FROM:
4:if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
TO:
3:if(getBase()==null){
return super.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}

UPDATE
FROM:
5:return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
TO:
4:return super.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

DELETE:
Original line: 8instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

DELETE:
Original line: 9if(instant<iCutoverMillis){
instant=iJulianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
if(instant>=iCutoverMillis){
throw new IllegalArgumentException("Specified date does not exist");
}
}

DELETE:
Original line: 15return instant;

Following are 2th generated patches:
Validating 34 patches...
Current actions:
UPDATE
FROM:
4:if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
TO:
3:if(getBase()==null){
return super.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}

UPDATE
FROM:
5:return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
TO:
4:return super.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

INSERT:
6:return iChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
TO:
6

DELETE:
Original line: 7long instant;

DELETE:
Original line: 8instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

DELETE:
Original line: 9if(instant<iCutoverMillis){
instant=iJulianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
if(instant>=iCutoverMillis){
throw new IllegalArgumentException("Specified date does not exist");
}
}

Following are 3th generated patches:
Validating 200 patches...
Tested:1165 patches
Compile failed:1104 patches
Compilation rate:0.05236051502145923

Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_18/7.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_18/7.java
Current actions:
INSERT:
8:{
instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
TO:
7

Following are 0th generated patches:
Validating 14 patches...
Current actions:
INSERT:
8:{
instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
TO:
7

INSERT:
11:catch(IllegalArgumentException ex){
instant=iJulianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
if(instant>=iCutoverMillis){
throw new IllegalArgumentException("Specified date does not exist");
}
}
TO:
7

Following are 1th generated patches:
Validating 200 patches...
Tested:1372 patches
Compile failed:1307 patches
Compilation rate:0.047376093294460644
NNNNPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_18/8.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_18/8.java
Current actions:
DELETE:
Original line: 3Chronology base;

Following are 0th generated patches:
Validating 41 patches...
Current actions:
INSERT:
3:Chronology base=getBase();
TO:
2

Following are 1th generated patches:
Validating 2 patches...
Current actions:
INSERT:
3:Chronology base=getBase();
TO:
2

DELETE:
Original line: 3Chronology base;

UPDATE
FROM:
4:if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
TO:
4:if(base!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}

DELETE:
Original line: 7long instant;

DELETE:
Original line: 8instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

Following are 2th generated patches:
Validating 14 patches...
Current actions:
DELETE:
Original line: 7long instant;

Following are 3th generated patches:
Validating 1 patches...
Current actions:
DELETE:
Original line: 3Chronology base;

DELETE:
Original line: 8instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

Following are 4th generated patches:
Validating 2 patches...
Current actions:
DELETE:
Original line: 3Chronology base;

UPDATE
FROM:
4:if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
TO:
4:if(base!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}

DELETE:
Original line: 7long instant;

DELETE:
Original line: 8instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

Tested:1428 patches
Compile failed:1359 patches
Compilation rate:0.04831932773109244
NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPNNNNNNNNNNNNNNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_18/9.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_18/9.java
Current actions:
INSERT:
15:instant-=iCutoverMillis;
TO:
14

Following are 0th generated patches:
Validating 1 patches...
Current actions:
INSERT:
15:instant-=iCutoverMillis;
TO:
14

Following are 1th generated patches:
Validating 12 patches...
Tested:1441 patches
Compile failed:1359 patches
Compilation rate:0.05690492713393477
PPPPPPPPPPPPP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_18/10.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_18/10.java
Current actions:
UPDATE
FROM:
11:if(instant>=iCutoverMillis){
throw new IllegalArgumentException("Specified date does not exist");
}
TO:
11:if(instant<iCutoverMillis){
throw new IllegalArgumentException("Specified date does not exist");
}

Following are 0th generated patches:
Validating 1 patches...
Current actions:
UPDATE
FROM:
11:if(instant>=iCutoverMillis){
throw new IllegalArgumentException("Specified date does not exist");
}
TO:
11:if(instant<iCutoverMillis){
throw new IllegalArgumentException("Specified date does not exist");
}

Following are 1th generated patches:
Validating 3 patches...
Tested:1445 patches
Compile failed:1359 patches
Compilation rate:0.05951557093425606
PPPP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_18/11.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_18/11.java
Current actions:
DELETE:
Original line: 3Chronology base;

Following are 0th generated patches:
Validating 7 patches...
Current actions:
DELETE:
Original line: 3Chronology base;

UPDATE
FROM:
5:return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
TO:
4:return getBase().getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

Following are 1th generated patches:
Validating 63 patches...
Current actions:
DELETE:
Original line: 3Chronology base;

UPDATE
FROM:
4:if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
TO:
3:if(getBase()!=null){
return getBase().getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}

Following are 2th generated patches:
Validating 32 patches...
Current actions:
DELETE:
Original line: 3Chronology base;

UPDATE
FROM:
4:if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
TO:
3:if(getBase()!=null){
return getBase().getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}

UPDATE
FROM:
5:return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
TO:
4:return getBase().getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

Following are 3th generated patches:
Validating 94 patches...
Current actions:
UPDATE
FROM:
5:return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
TO:
4:return getBase().getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

Following are 4th generated patches:
Validating 62 patches...
Current actions:
DELETE:
Original line: 3Chronology base;

Tested:1701 patches
Compile failed:1596 patches
Compilation rate:0.06172839506172839
NNNNPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNPNNNNNNNNPNP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_18/12.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_18/12.java
Current actions:
DELETE:
Original line: 3Chronology base;

Following are 0th generated patches:
Validating 166 patches...
Current actions:
INSERT:
3:Chronology base=getBase();
TO:
2

DELETE:
Original line: 3Chronology base;

DELETE:
Original line: 4if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}

INSERT:
6:if(instant<iCutoverMillis){
instant=iJulianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
if(instant>=iCutoverMillis){
throw new IllegalArgumentException("Specified date does not exist");
}
}
TO:
2

DELETE:
Original line: 7long instant;

DELETE:
Original line: 9if(instant<iCutoverMillis){
instant=iJulianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
if(instant>=iCutoverMillis){
throw new IllegalArgumentException("Specified date does not exist");
}
}

Following are 1th generated patches:
Validating 6 patches...
Current actions:
INSERT:
12:return instant;
TO:
13

DELETE:
Original line: 15return instant;

Following are 2th generated patches:
Validating 1 patches...
Current actions:
INSERT:
6:if(instant<iCutoverMillis){
instant=iJulianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
if(instant>=iCutoverMillis){
throw new IllegalArgumentException("Specified date does not exist");
}
}
TO:
2

DELETE:
Original line: 7long instant;

DELETE:
Original line: 9if(instant<iCutoverMillis){
instant=iJulianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
if(instant>=iCutoverMillis){
throw new IllegalArgumentException("Specified date does not exist");
}
}

INSERT:
12:return instant;
TO:
13

DELETE:
Original line: 15return instant;

Following are 3th generated patches:
Validating 3 patches...
Current actions:
INSERT:
5:long instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
TO:
2

INSERT:
6:if(instant<iCutoverMillis){
instant=iJulianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
if(instant>=iCutoverMillis){
throw new IllegalArgumentException("Specified date does not exist");
}
}
TO:
2

DELETE:
Original line: 7long instant;

DELETE:
Original line: 9if(instant<iCutoverMillis){
instant=iJulianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
if(instant>=iCutoverMillis){
throw new IllegalArgumentException("Specified date does not exist");
}
}

Following are 4th generated patches:
Validating 200 patches...
Current actions:
INSERT:
3:Chronology base=getBase();
TO:
2

DELETE:
Original line: 3Chronology base;

INSERT:
4:if(base==null){
long instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
if(instant<iCutoverMillis){
instant=iJulianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
if(instant>=iCutoverMillis){
throw new IllegalArgumentException("Specified date does not exist");
}
}
return instant;
}
TO:
2

DELETE:
Original line: 4if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}

DELETE:
Original line: 7long instant;

DELETE:
Original line: 8instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

DELETE:
Original line: 9if(instant<iCutoverMillis){
instant=iJulianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
if(instant>=iCutoverMillis){
throw new IllegalArgumentException("Specified date does not exist");
}
}

INSERT:
14:return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
TO:
14

Tested:1961 patches
Compile failed:1650 patches
Compilation rate:0.15859255481896992
NNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPNPNPNNNPNNNNNNNNNNPNNNNNPPPNNNNPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPNPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_18/13.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_18/13.java
Current actions:
DELETE:
Original line: 7long instant;

Following are 0th generated patches:
Validating 7 patches...
Current actions:
DELETE:
Original line: 7long instant;

Following are 1th generated patches:
Validating 1 patches...
Current actions:
INSERT:
7:long instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
TO:
6

DELETE:
Original line: 8instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

Following are 2th generated patches:
Validating 200 patches...
Current actions:
DELETE:
Original line: 7long instant;

INSERT:
7:long instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
TO:
6

Following are 3th generated patches:
Validating 200 patches...
Tested:2367 patches
Compile failed:1855 patches
Compilation rate:0.21630756231516687
NNNNNPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_18/14.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_18/14.java
Current actions:
INSERT:
15:instant=iType.set(instant,this);
TO:
14

Following are 0th generated patches:
Validating 1 patches...
Current actions:
INSERT:
15:instant=iType.set(instant,this);
TO:
14

Following are 1th generated patches:
Validating 74 patches...
Tested:2442 patches
Compile failed:1906 patches
Compilation rate:0.2194922194922195
NNNPPPPPPPPPPNNNNNNNNNPNNPNNNPPNNPNPPPNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNPPPPP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_18/15.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_18/15.java
Current actions:
Wrap:
IfStatement
On:
[instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);]
Following are 0th generated patches:
Validating 5 patches...
Current actions:
INSERT:
11:else{
instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,1,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
TO:
7

Following are 1th generated patches:
Validating 1 patches...
Current actions:
DELETE:
Original line: 8instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

INSERT:
8:if(iType.getIndexedField(PeriodType.YEAR)!=PeriodType.MONTH){
instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
TO:
7

INSERT:
11:else{
instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,1,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
TO:
7

Following are 2th generated patches:
Validating 161 patches...
Current actions:
INSERT:
12:instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,1,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
TO:
7

Following are 3th generated patches:
Validating 200 patches...
Current actions:
DELETE:
Original line: 8instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

INSERT:
8:if(iType.getIndexedField(PeriodType.YEAR)!=PeriodType.MONTH){
instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
TO:
7

Following are 4th generated patches:
Validating 160 patches...
Current actions:
DELETE:
Original line: 8instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

INSERT:
8:if(iType.getIndexedField(PeriodType.YEAR)!=PeriodType.MONTH){
instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
TO:
7

INSERT:
12:instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,1,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
TO:
7

Tested:2966 patches
Compile failed:2228 patches
Compilation rate:0.24881995954147

Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_18/16.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_18/16.java
Current actions:
DELETE:
Original line: 3Chronology base;

Following are 0th generated patches:
Validating 7 patches...
Current actions:
UPDATE
FROM:
4:if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
TO:
3:if(getBase()!=null){
return super.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}

Following are 1th generated patches:
Validating 31 patches...
FILE : /data/PLM4APR/tmp/defects4j_buggy//time/time_18_buggy/src/main/java/org/joda/time/chrono/GJChronology.java
SUCCESS
//Following are generated patch:
  public long getDateTimeMillis(  int year,  int monthOfYear,  int dayOfMonth,  int hourOfDay,  int minuteOfHour,  int secondOfMinute,  int millisOfSecond) throws IllegalArgumentException {
    Chronology base;
if(getZone()!=null){
return super.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
    long instant;
    instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
    if (instant < iCutoverMillis) {
      instant=iJulianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
      if (instant >= iCutoverMillis) {
        throw new IllegalArgumentException("Specified date does not exist");
      }
    }
    return instant;
  }

1 th patch/38
Trace:
UPDATEIfStmt;InfixExpr;MethodInv;SCOPEMETHODINV;UPDATEInfixExpr
START : 
2024.04.09 AD at 00:08:06 HKT
---------TIME : 
2024.04.09 AD at 00:23:30 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//time/time_18_buggy/src/main/java/org/joda/time/chrono/GJChronology.java
SUCCESS
//Following are generated patch:
  public long getDateTimeMillis(  int year,  int monthOfYear,  int dayOfMonth,  int hourOfDay,  int minuteOfHour,  int secondOfMinute,  int millisOfSecond) throws IllegalArgumentException {
    Chronology base;
if(withUTC()!=null){
return super.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
    long instant;
    instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
    if (instant < iCutoverMillis) {
      instant=iJulianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
      if (instant >= iCutoverMillis) {
        throw new IllegalArgumentException("Specified date does not exist");
      }
    }
    return instant;
  }

2 th patch/38
Trace:
UPDATEIfStmt;InfixExpr;MethodInv;SCOPEMETHODINV;UPDATEInfixExpr
START : 
2024.04.09 AD at 00:08:06 HKT
---------TIME : 
2024.04.09 AD at 00:23:30 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//time/time_18_buggy/src/main/java/org/joda/time/chrono/GJChronology.java
SUCCESS
//Following are generated patch:
  public long getDateTimeMillis(  int year,  int monthOfYear,  int dayOfMonth,  int hourOfDay,  int minuteOfHour,  int secondOfMinute,  int millisOfSecond) throws IllegalArgumentException {
    Chronology base;
if(getInstance()!=null){
return super.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
    long instant;
    instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
    if (instant < iCutoverMillis) {
      instant=iJulianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
      if (instant >= iCutoverMillis) {
        throw new IllegalArgumentException("Specified date does not exist");
      }
    }
    return instant;
  }

3 th patch/38
Trace:
UPDATEIfStmt;InfixExpr;MethodInv;SCOPEMETHODINV;UPDATEInfixExpr
START : 
2024.04.09 AD at 00:08:06 HKT
---------TIME : 
2024.04.09 AD at 00:23:30 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//time/time_18_buggy/src/main/java/org/joda/time/chrono/GJChronology.java
SUCCESS
//Following are generated patch:
  public long getDateTimeMillis(  int year,  int monthOfYear,  int dayOfMonth,  int hourOfDay,  int minuteOfHour,  int secondOfMinute,  int millisOfSecond) throws IllegalArgumentException {
    Chronology base;
if(toString()!=null){
return super.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
    long instant;
    instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
    if (instant < iCutoverMillis) {
      instant=iJulianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
      if (instant >= iCutoverMillis) {
        throw new IllegalArgumentException("Specified date does not exist");
      }
    }
    return instant;
  }

4 th patch/38
Trace:
UPDATEIfStmt;InfixExpr;MethodInv;SCOPEMETHODINV;UPDATEInfixExpr
START : 
2024.04.09 AD at 00:08:06 HKT
---------TIME : 
2024.04.09 AD at 00:23:30 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//time/time_18_buggy/src/main/java/org/joda/time/chrono/GJChronology.java
SUCCESS
//Following are generated patch:
  public long getDateTimeMillis(  int year,  int monthOfYear,  int dayOfMonth,  int hourOfDay,  int minuteOfHour,  int secondOfMinute,  int millisOfSecond) throws IllegalArgumentException {
    Chronology base;
if(getInstanceUTC()!=null){
return super.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
    long instant;
    instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
    if (instant < iCutoverMillis) {
      instant=iJulianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
      if (instant >= iCutoverMillis) {
        throw new IllegalArgumentException("Specified date does not exist");
      }
    }
    return instant;
  }

5 th patch/38
Trace:
UPDATEIfStmt;InfixExpr;MethodInv;SCOPEMETHODINV;UPDATEInfixExpr
START : 
2024.04.09 AD at 00:08:06 HKT
---------TIME : 
2024.04.09 AD at 00:23:30 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//time/time_18_buggy/src/main/java/org/joda/time/chrono/GJChronology.java
SUCCESS
//Following are generated patch:
  public long getDateTimeMillis(  int year,  int monthOfYear,  int dayOfMonth,  int hourOfDay,  int minuteOfHour,  int secondOfMinute,  int millisOfSecond) throws IllegalArgumentException {
    Chronology base;
if(readResolve()!=null){
return super.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
    long instant;
    instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
    if (instant < iCutoverMillis) {
      instant=iJulianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
      if (instant >= iCutoverMillis) {
        throw new IllegalArgumentException("Specified date does not exist");
      }
    }
    return instant;
  }

6 th patch/38
Trace:
UPDATEIfStmt;InfixExpr;MethodInv;SCOPEMETHODINV;UPDATEInfixExpr
START : 
2024.04.09 AD at 00:08:06 HKT
---------TIME : 
2024.04.09 AD at 00:23:30 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//time/time_18_buggy/src/main/java/org/joda/time/chrono/GJChronology.java
SUCCESS
//Following are generated patch:
  public long getDateTimeMillis(  int year,  int monthOfYear,  int dayOfMonth,  int hourOfDay,  int minuteOfHour,  int secondOfMinute,  int millisOfSecond) throws IllegalArgumentException {
    Chronology base;
if(getGregorianCutover()!=null){
return super.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
    long instant;
    instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
    if (instant < iCutoverMillis) {
      instant=iJulianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
      if (instant >= iCutoverMillis) {
        throw new IllegalArgumentException("Specified date does not exist");
      }
    }
    return instant;
  }

7 th patch/38
Trace:
UPDATEIfStmt;InfixExpr;MethodInv;SCOPEMETHODINV;UPDATEInfixExpr
START : 
2024.04.09 AD at 00:08:06 HKT
---------TIME : 
2024.04.09 AD at 00:23:30 HKT
--------------- END -----------------
Current actions:
DELETE:
Original line: 3Chronology base;

Following are 2th generated patches:
Validating 1 patches...
Current actions:
UPDATE
FROM:
4:if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
TO:
3:if(getBase()!=null){
return super.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}

UPDATE
FROM:
5:return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
TO:
4:return super.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

Following are 3th generated patches:
Validating 32 patches...
Current actions:
UPDATE
FROM:
4:if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
TO:
3:if(getBase()!=null){
return super.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}

DELETE:
Original line: 3Chronology base;

UPDATE
FROM:
5:return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
TO:
4:return super.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

Following are 4th generated patches:
Validating 33 patches...
Current actions:
UPDATE
FROM:
4:if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
TO:
3:if(getBase()!=null){
return super.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}

DELETE:
Original line: 3Chronology base;

Tested:3069 patches
Compile failed:2318 patches
Compilation rate:0.2447051156728576
NNNNPPPNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_18/17.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_18/17.java
Current actions:
DELETE:
Original line: 3Chronology base;

Following are 0th generated patches:
Validating 36 patches...
Current actions:
DELETE:
Original line: 3Chronology base;

DELETE:
Original line: 4if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}

DELETE:
Original line: 8instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

Following are 1th generated patches:
Validating 3 patches...
Current actions:
DELETE:
Original line: 3Chronology base;

Following are 2th generated patches:
Validating 1 patches...
Current actions:
DELETE:
Original line: 3Chronology base;

INSERT:
3:long instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
TO:
2

DELETE:
Original line: 4if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}

Following are 3th generated patches:
Validating 200 patches...
Current actions:
INSERT:
3:long instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
TO:
2

DELETE:
Original line: 4if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}

DELETE:
Original line: 7long instant;

Following are 4th generated patches:
Validating 200 patches...
Tested:3505 patches
Compile failed:2547 patches
Compilation rate:0.2733238231098431
NNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_18/18.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_18/18.java
Current actions:
DELETE:
Original line: 12throw new IllegalArgumentException("Specified date does not exist");

Following are 0th generated patches:
Validating 3 patches...
Current actions:
INSERT:
12:return iCutoverMillis-1;
TO:
11

DELETE:
Original line: 12throw new IllegalArgumentException("Specified date does not exist");

Following are 1th generated patches:
Validating 18 patches...
Current actions:
DELETE:
Original line: 12throw new IllegalArgumentException("Specified date does not exist");

Following are 2th generated patches:
Validating 1 patches...
Current actions:
INSERT:
12:return iCutoverMillis-1;
TO:
11

Following are 3th generated patches:
Validating 17 patches...
Tested:3543 patches
Compile failed:2571 patches
Compilation rate:0.2743437764606266
NPPNNNNNNPPPPPPPPPPPPNNNNNNNNNNNNNNNNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_18/19.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_18/19.java
Current actions:
Wrap:
IfStatement
On:
[instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);]
Following are 0th generated patches:
Validating 89 patches...
Current actions:
INSERT:
8:if(iType.getDurationField()==ISOChronology.MILLIS_OF_SECOND){
instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
TO:
7

DELETE:
Original line: 8instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

INSERT:
11:else{
instant=iJulianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
TO:
7

INSERT:
15:if(iType.getDurationField()==ISOChronology.MILLIS_OF_SECOND){
instant=iJulianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
if(instant>=iCutoverMillis){
throw new IllegalArgumentException("Specified date does not exist");
}
}
TO:
10

Following are 1th generated patches:
Validating 162 patches...
Current actions:
INSERT:
8:if(iType.getDurationField()==ISOChronology.MILLIS_OF_SECOND){
instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
TO:
7

DELETE:
Original line: 8instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

DELETE:
Original line: 9if(instant<iCutoverMillis){
instant=iJulianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
if(instant>=iCutoverMillis){
throw new IllegalArgumentException("Specified date does not exist");
}
}

INSERT:
11:else{
instant=iJulianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
TO:
7

INSERT:
14:if(instant<iCutoverMillis){
if(iType.getDurationField()==ISOChronology.MILLIS_OF_SECOND){
instant=iJulianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
if(instant>=iCutoverMillis){
throw new IllegalArgumentException("Specified date does not exist");
}
}
else{
instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
}
TO:
10

Following are 2th generated patches:
Validating 163 patches...
Tested:3899 patches
Compile failed:2919 patches
Compilation rate:0.2513464991023339
NNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_18/20.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_18/20.java
Current actions:
DELETE:
Original line: 11if(instant>=iCutoverMillis){
throw new IllegalArgumentException("Specified date does not exist");
}

Following are 0th generated patches:
Validating 11 patches...
Current actions:
INSERT:
11:if(instant<iCutoverMillis){
return instant;
}
TO:
10

DELETE:
Original line: 11if(instant>=iCutoverMillis){
throw new IllegalArgumentException("Specified date does not exist");
}

Following are 1th generated patches:
Validating 200 patches...
Current actions:
DELETE:
Original line: 11if(instant>=iCutoverMillis){
throw new IllegalArgumentException("Specified date does not exist");
}

INSERT:
12:return instant;
TO:
10

Following are 2th generated patches:
Validating 18 patches...
Current actions:
INSERT:
11:if(instant<iCutoverMillis){
return instant;
}
TO:
10

Following are 3th generated patches:
Validating 200 patches...
Current actions:
DELETE:
Original line: 12throw new IllegalArgumentException("Specified date does not exist");

INSERT:
14:throw new IllegalArgumentException("Specified date does not exist");
TO:
13

Following are 4th generated patches:
Validating 1 patches...
Current actions:
INSERT:
11:if(instant<iCutoverMillis){
return instant;
}
TO:
10

DELETE:
Original line: 12throw new IllegalArgumentException("Specified date does not exist");

INSERT:
14:throw new IllegalArgumentException("Specified date does not exist");
TO:
13

Tested:4322 patches
Compile failed:3193 patches
Compilation rate:0.2612216566404442
NPPPPPNNNNNNNNNNNNNNNNNPPPPPPNNNNNNNPNNPNNPNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNPNPNPPPPPNNNPNNPPNNPPNPPPNNPPNPPPPNPPPNPPNPNNPNPPPNPPPNNNPPPPPNPPPPNPPPPPPPPPNNNNNNPPPPPPPPPPPNNNNNNNNNNNNNNPPPPPNPNPNPNNNNNNNNNNNPPNNNNNNNNNNPNNNNNNNNNNNPNPNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNPPPPPPNNPPNPNNPNPNPPNPPNPNNPPPPPNPPPNPNPPNNPNNPPPPPPPPPPNNNPNNPPPNNPPPPPPPPPP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_18/21.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_18/21.java
Current actions:
DELETE:
Original line: 3Chronology base;

Following are 0th generated patches:
Validating 129 patches...
Current actions:
INSERT:
3:Chronology base=getBase();
TO:
2

DELETE:
Original line: 3Chronology base;

UPDATE
FROM:
4:if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
TO:
4:if(base==null){
return iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}

DELETE:
Original line: 8instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

INSERT:
8:{
instant=base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
TO:
7

INSERT:
11:catch(IllegalArgumentException ex){
instant=iJulianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
if(instant>=iCutoverMillis){
throw new IllegalArgumentException("Specified date does not exist");
}
}
TO:
7

Following are 1th generated patches:
Validating 200 patches...
Tested:4647 patches
Compile failed:3491 patches
Compilation rate:0.24876264256509575
NNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNPPPPPPPPNNNNNNNNNNNNNNNNNNNNPPPPPPNPPNPPNNNNNNNNNNNNNNPNNPNNNNNPNNPNNPNNNNNNNNNNNNNPNNNNNNNNNNNPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_18/22.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_18/22.java
Current actions:
Wrap:
MethodDeclaration
On:
[if(instant>=iCutoverMillis){
throw new IllegalArgumentException("Specified date does not exist");
}, long instant;, instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);, return instant;]
Following are 0th generated patches:
Validating 5 patches...
Current actions:
INSERT:
2:public long getDateTimeMillis(int year,int monthOfYear,int dayOfMonth,int hourOfDay,int minuteOfHour,int secondOfMinute,int millisOfSecond) throws IllegalArgumentException{
Chronology base;
if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
long instant;
instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
if(instant>=iCutoverMillis){
throw new IllegalArgumentException("Specified date does not exist");
}
return instant;
}
TO:
1

DELETE:
Original line: 7long instant;

DELETE:
Original line: 8instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

DELETE:
Original line: 9if(instant<iCutoverMillis){
instant=iJulianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
if(instant>=iCutoverMillis){
throw new IllegalArgumentException("Specified date does not exist");
}
}

DELETE:
Original line: 15return instant;

Following are 1th generated patches:
Validating 2 patches...
Current actions:
INSERT:
2:public long getDateTimeMillis(int year,int monthOfYear,int dayOfMonth,int hourOfDay,int minuteOfHour,int secondOfMinute,int millisOfSecond) throws IllegalArgumentException{
Chronology base;
if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
long instant;
instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
if(instant>=iCutoverMillis){
throw new IllegalArgumentException("Specified date does not exist");
}
return instant;
}
TO:
1

DELETE:
Original line: 7long instant;

DELETE:
Original line: 8instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

DELETE:
Original line: 11if(instant>=iCutoverMillis){
throw new IllegalArgumentException("Specified date does not exist");
}

DELETE:
Original line: 15return instant;

Following are 2th generated patches:
Validating 1 patches...
Current actions:
DELETE:
Original line: 9if(instant<iCutoverMillis){
instant=iJulianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
if(instant>=iCutoverMillis){
throw new IllegalArgumentException("Specified date does not exist");
}
}

Following are 3th generated patches:
Validating 1 patches...
Current actions:
INSERT:
2:public long getDateTimeMillis(int year,int monthOfYear,int dayOfMonth,int hourOfDay,int minuteOfHour,int secondOfMinute,int millisOfSecond) throws IllegalArgumentException{
Chronology base;
if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
long instant;
instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
if(instant>=iCutoverMillis){
throw new IllegalArgumentException("Specified date does not exist");
}
return instant;
}
TO:
1

DELETE:
Original line: 7long instant;

DELETE:
Original line: 8instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

DELETE:
Original line: 10instant=iJulianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

DELETE:
Original line: 11if(instant>=iCutoverMillis){
throw new IllegalArgumentException("Specified date does not exist");
}

DELETE:
Original line: 15return instant;

Following are 4th generated patches:
Validating 2 patches...
Current actions:
DELETE:
Original line: 10instant=iJulianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

Tested:4654 patches
Compile failed:3494 patches
Compilation rate:0.24924795874516545
PPPNNPN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_18/23.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_18/23.java
Current actions:
INSERT:
8:if(monthOfYear==1&&dayOfMonth==1&&hourOfDay==0&&minuteOfHour==0&&secondOfMinute==0&&millisOfSecond==0){
instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
if(instant<iCutoverMillis){
instant=iJulianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
if(instant>=iCutoverMillis){
throw new IllegalArgumentException("Specified date does not exist");
}
}
}
TO:
7

Following are 0th generated patches:
Validating 155 patches...
Current actions:
INSERT:
8:if(monthOfYear==1&&dayOfMonth==1&&hourOfDay==0&&minuteOfHour==0&&secondOfMinute==0&&millisOfSecond==0){
instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
if(instant<iCutoverMillis){
instant=iJulianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
if(instant>=iCutoverMillis){
throw new IllegalArgumentException("Specified date does not exist");
}
}
}
TO:
7

UPDATE
FROM:
10:instant=iJulianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
TO:
9:instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

INSERT:
19:if(instant<iCutoverMillis){
instant=iJulianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
if(instant>=iCutoverMillis){
throw new IllegalArgumentException("Specified date does not exist");
}
}
TO:
10

Following are 1th generated patches:
Validating 200 patches...
Tested:4891 patches
Compile failed:3508 patches
Compilation rate:0.2827642608873441
NNNNNPPPPPPPPPNPNNNNNPNPNPPPPPPPPNPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_18/24.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_18/24.java
Current actions:
INSERT:
15:if(instant<iMinMillis||instant>iMaxMillis){
throw new IllegalArgumentException("Specified date does not exist");
}
TO:
14

Following are 0th generated patches:
Validating 2 patches...
Current actions:
INSERT:
16:throw new IllegalArgumentException("Specified date does not exist");
TO:
14

Following are 1th generated patches:
Validating 14 patches...
Current actions:
INSERT:
15:if(instant<iMinMillis||instant>iMaxMillis){
throw new IllegalArgumentException("Specified date does not exist");
}
TO:
14

Following are 2th generated patches:
Validating 200 patches...
Tested:5107 patches
Compile failed:3724 patches
Compilation rate:0.27080477775602113
NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_18/25.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_18/25.java
Current actions:
DELETE:
Original line: 3Chronology base;

Following are 0th generated patches:
Validating 200 patches...
Current actions:
DELETE:
Original line: 4if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}

INSERT:
4:if(getBase()==null){
instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
if(instant<iCutoverMillis){
instant=iJulianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
if(instant>=iCutoverMillis){
throw new IllegalArgumentException("Specified date does not exist");
}
}
}
TO:
7

UPDATE
FROM:
10:instant=iJulianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
TO:
5:instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

DELETE:
Original line: 8instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

DELETE:
Original line: 11if(instant>=iCutoverMillis){
throw new IllegalArgumentException("Specified date does not exist");
}

INSERT:
13:else{
instant=super.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
TO:
14

Following are 1th generated patches:
Validating 200 patches...
Tested:5411 patches
Compile failed:3976 patches
Compilation rate:0.2652005174644243
NNNNNNNPPPPPPPPPNNNNNNPNNNNNPPPPPPNNPNNPNPNNNNNPNPPPNPPPPPNPPPNPPPPNPPPPPNPNPNNPNPNNPNNNNNPNNPNNNPPPNNPNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_18/26.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_18/26.java
Current actions:
Wrap:
IfStatement
On:
[instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);]
Following are 0th generated patches:
Validating 5 patches...
Current actions:
INSERT:
11:else{
instant=iType.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
TO:
7

Following are 1th generated patches:
Validating 1 patches...
Current actions:
INSERT:
12:instant=iType.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
TO:
7

Following are 2th generated patches:
Validating 200 patches...
Current actions:
DELETE:
Original line: 8instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

INSERT:
8:if(iType==null){
instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
TO:
7

INSERT:
11:else{
instant=iType.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
TO:
7

Following are 3th generated patches:
Validating 37 patches...
Current actions:
DELETE:
Original line: 8instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

INSERT:
8:if(iType==null){
instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
TO:
7

Following are 4th generated patches:
Validating 36 patches...
Current actions:
DELETE:
Original line: 8instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

INSERT:
8:if(iType==null){
instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}
TO:
7

INSERT:
12:instant=iType.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
TO:
7

Tested:5687 patches
Compile failed:4052 patches
Compilation rate:0.2874978020045718
NNPNNPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_18/27.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_18/27.java
Current actions:
DELETE:
Original line: 3Chronology base;

Following are 0th generated patches:
Validating 200 patches...
Current actions:
DELETE:
Original line: 8instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

DELETE:
Original line: 15return instant;

Following are 1th generated patches:
Validating 2 patches...
Current actions:
INSERT:
3:Chronology base=getBase();
TO:
2

DELETE:
Original line: 3Chronology base;

DELETE:
Original line: 4if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}

INSERT:
4:if(base==null){
base=ISOChronology.getInstance();
}
TO:
2

INSERT:
7:return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
TO:
6

DELETE:
Original line: 7long instant;

DELETE:
Original line: 8instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

DELETE:
Original line: 9if(instant<iCutoverMillis){
instant=iJulianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
if(instant>=iCutoverMillis){
throw new IllegalArgumentException("Specified date does not exist");
}
}

DELETE:
Original line: 15return instant;

Following are 2th generated patches:
Validating 105 patches...
Current actions:
DELETE:
Original line: 3Chronology base;

DELETE:
Original line: 4if((base=getBase())!=null){
return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
}

INSERT:
4:if(base==null){
base=ISOChronology.getInstance();
}
TO:
2

DELETE:
Original line: 9if(instant<iCutoverMillis){
instant=iJulianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
if(instant>=iCutoverMillis){
throw new IllegalArgumentException("Specified date does not exist");
}
}

DELETE:
Original line: 15return instant;

Following are 3th generated patches:
Validating 100 patches...
Current actions:
INSERT:
4:if(base==null){
base=ISOChronology.getInstance();
}
TO:
2

DELETE:
Original line: 5return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

INSERT:
7:return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
TO:
6

DELETE:
Original line: 8instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

DELETE:
Original line: 9if(instant<iCutoverMillis){
instant=iJulianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
if(instant>=iCutoverMillis){
throw new IllegalArgumentException("Specified date does not exist");
}
}

DELETE:
Original line: 15return instant;

Following are 4th generated patches:
Validating 100 patches...
Current actions:
INSERT:
4:if(base==null){
base=ISOChronology.getInstance();
}
TO:
2

DELETE:
Original line: 5return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

INSERT:
7:return base.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
TO:
6

DELETE:
Original line: 10instant=iJulianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

DELETE:
Original line: 12throw new IllegalArgumentException("Specified date does not exist");

Tested:6143 patches
Compile failed:4446 patches
Compilation rate:0.27624938954908024
NNNNNNNNNNNNNNNNNNNNNNNNNPPNNPNPPPNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNPNPPPNNNNNNPPPPPNNPPPNNPPPPNNNNNNNNPPNPNPPPPPNNNNPNNNNNPNNNNNPPPPPPPPNNPNNPNNNNNNNNNNNNNNNPPNPNNNNNNNNNNNPPNNNNNPPPNPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_18/28.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_18/28.java
Current actions:
INSERT:
15:long oldInstant=instant;
TO:
14

Following are 0th generated patches:
Validating 25 patches...
Current actions:
INSERT:
15:long oldInstant=instant;
TO:
14

Following are 1th generated patches:
Validating 12 patches...
Current actions:
INSERT:
16:instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
TO:
14

INSERT:
18:instant=iJulianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
TO:
14

INSERT:
19:if(instant>=iCutoverMillis){
instant=oldInstant;
}
TO:
14

Following are 2th generated patches:
Validating 200 patches...
Tested:6379 patches
Compile failed:4656 patches
Compilation rate:0.27010503213669856
NNNNNNPNPPPPPPPPPNNNPPPPPNPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_18/29.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_18/29.java
Current actions:
UPDATE
FROM:
9:if(instant<iCutoverMillis){
instant=iJulianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
if(instant>=iCutoverMillis){
throw new IllegalArgumentException("Specified date does not exist");
}
}
TO:
8:if(iType.isStandard()){
instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
if(instant>=iCutoverMillis){
throw new IllegalArgumentException("Specified date does not exist");
}
return instant;
}

Following are 0th generated patches:
Validating 200 patches...
Current actions:
DELETE:
Original line: 8instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

UPDATE
FROM:
9:if(instant<iCutoverMillis){
instant=iJulianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
if(instant>=iCutoverMillis){
throw new IllegalArgumentException("Specified date does not exist");
}
}
TO:
8:if(iType.isStandard()){
instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
if(instant>=iCutoverMillis){
throw new IllegalArgumentException("Specified date does not exist");
}
return instant;
}

UPDATE
FROM:
10:instant=iJulianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
TO:
9:instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

INSERT:
13:return instant;
TO:
13

DELETE:
Original line: 15return instant;

INSERT:
15:if(iType.isTime()){
instant=iJulianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
if(instant<iCutoverMillis){
instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
if(instant>=iCutoverMillis){
throw new IllegalArgumentException("Specified date does not exist");
}
}
return instant;
}
TO:
13

Following are 1th generated patches:
Validating 200 patches...
Current actions:
DELETE:
Original line: 8instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

INSERT:
15:if(iType.isTime()){
instant=iJulianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
if(instant<iCutoverMillis){
instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
if(instant>=iCutoverMillis){
throw new IllegalArgumentException("Specified date does not exist");
}
}
return instant;
}
TO:
13

Following are 2th generated patches:
Validating 5 patches...
Current actions:
UPDATE
FROM:
10:instant=iJulianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
TO:
9:instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);

INSERT:
15:if(iType.isTime()){
instant=iJulianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
if(instant<iCutoverMillis){
instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
if(instant>=iCutoverMillis){
throw new IllegalArgumentException("Specified date does not exist");
}
}
return instant;
}
TO:
13

Following are 3th generated patches:
Validating 200 patches...
Tested:6883 patches
Compile failed:5116 patches
Compilation rate:0.25671945372657273
NNNNNNNNNNNPPPPPPPPPPNNNNNNNNNPPNPNNNNPNNNNNPNNPPPPPNPPPPPNPPPPPPPPNPPNNNNNPNPNNPNNPPNNPNNNNNNNNNPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
Finish : time-18 > patch : 7 | Start : Tue Apr 09 00:08:06 HKT 2024 | End : 2024.04.09 AD at 00:53:26 HKT
