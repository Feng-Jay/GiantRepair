Repair : closure_96
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/0.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/0.java
Tested:0 patches
Compile failed:0 patches
Compilation rate:NaN

Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/1.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/1.java
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18:if(minArgs>numArgs||(maxArgs<numArgs&&!functionType.isVarArgs())){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

Following are 0th generated patches:
Validating 1 patches...
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18:if(minArgs>numArgs||(maxArgs<numArgs&&!functionType.isVarArgs())){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

Following are 1th generated patches:
Validating 148 patches...
Tested:149 patches
Compile failed:136 patches
Compilation rate:0.087248322147651
NNNNNNNNNNNNPNPNNNNNNNNNPNNPNNNPNNPNNNNNNPNNNPNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNPNNPP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/2.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/2.java
Current actions:
UPDATE
FROM:
19:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
TO:
19:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" arguments":"");

Following are 0th generated patches:
Validating 1 patches...
Current actions:
UPDATE
FROM:
19:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
TO:
19:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" arguments":"");

Following are 1th generated patches:
Validating 2 patches...
Tested:152 patches
Compile failed:136 patches
Compilation rate:0.10526315789473684
PPP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/3.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/3.java
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18:if(minArgs>numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

Following are 0th generated patches:
Validating 7 patches...
Current actions:
INSERT:
19:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
TO:
18

INSERT:
21:else{
if(maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
}
TO:
18

Following are 1th generated patches:
Validating 3 patches...
Current actions:
INSERT:
19:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
TO:
18

Following are 2th generated patches:
Validating 2 patches...
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18:if(minArgs>numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

INSERT:
21:else{
if(maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
}
TO:
18

Following are 3th generated patches:
Validating 2 patches...
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18:if(minArgs>numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

INSERT:
19:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
TO:
18

INSERT:
21:else{
if(maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
}
TO:
18

Following are 4th generated patches:
Validating 4 patches...
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18:if(minArgs>numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

INSERT:
19:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
TO:
18

Tested:168 patches
Compile failed:146 patches
Compilation rate:0.13095238095238096
NNNNPPPNNPPNPNNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/4.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/4.java
Current actions:
INSERT:
20:return ;
TO:
19

Following are 0th generated patches:
Validating 18 patches...
Current actions:
INSERT:
21:}

TO:
19

INSERT:
22:int maxMissingParams=numArgs-functionType.getParameters().size();
TO:
19

Following are 1th generated patches:
Validating 115 patches...
Current actions:
INSERT:
20:return ;
TO:
19

INSERT:
21:}

TO:
19

INSERT:
22:int maxMissingParams=numArgs-functionType.getParameters().size();
TO:
19

INSERT:
23:if(maxMissingParams>0){
report(t,call,MISSING_PARAMETER,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(maxMissingParams));
return ;
}
TO:
19

Following are 2th generated patches:
Validating 156 patches...
Current actions:
INSERT:
20:return ;
TO:
19

INSERT:
21:}

TO:
19

INSERT:
22:int maxMissingParams=numArgs-functionType.getParameters().size();
TO:
19

Following are 3th generated patches:
Validating 116 patches...
Current actions:
INSERT:
20:return ;
TO:
19

INSERT:
21:}

TO:
19

INSERT:
22:int maxMissingParams=numArgs-functionType.getParameters().size();
TO:
19

INSERT:
24:report(t,call,MISSING_PARAMETER,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(maxMissingParams));
TO:
19

Following are 4th generated patches:
Validating 118 patches...
Current actions:
INSERT:
20:return ;
TO:
19

INSERT:
21:}

TO:
19

INSERT:
23:if(maxMissingParams>0){
report(t,call,MISSING_PARAMETER,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(maxMissingParams));
return ;
}
TO:
19

Tested:685 patches
Compile failed:662 patches
Compilation rate:0.033576642335766425

Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/5.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/5.java
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18:if(minArgs>numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

Following are 0th generated patches:
Validating 5 patches...
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18:if(minArgs>numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

INSERT:
22:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),minArgs==0?"zero":"between "+minArgs+" and "+maxArgs,"no more than "+maxArgs+" argument(s)");
TO:
20

Following are 1th generated patches:
Validating 3 patches...
Current actions:
INSERT:
21:else{
if(maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),minArgs==0?"zero":"between "+minArgs+" and "+maxArgs,"no more than "+maxArgs+" argument(s)");
}
}
TO:
20

Following are 2th generated patches:
Validating 1 patches...
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18:if(minArgs>numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

INSERT:
21:else{
if(maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),minArgs==0?"zero":"between "+minArgs+" and "+maxArgs,"no more than "+maxArgs+" argument(s)");
}
}
TO:
20

Following are 3th generated patches:
Validating 2 patches...
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18:if(minArgs>numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

Following are 4th generated patches:
Validating 1 patches...
Current actions:
INSERT:
22:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),minArgs==0?"zero":"between "+minArgs+" and "+maxArgs,"no more than "+maxArgs+" argument(s)");
TO:
20

Tested:697 patches
Compile failed:662 patches
Compilation rate:0.05021520803443329
PPPPPPPPPPPP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/6.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/6.java
Current actions:
INSERT:
19:String functionName=call.getFirstChild().getQualifiedName();
TO:
18

Following are 0th generated patches:
Validating 21 patches...
Current actions:
INSERT:
19:String functionName=call.getFirstChild().getQualifiedName();
TO:
18

UPDATE
FROM:
19:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
TO:
24:report(t,call,WRONG_ARGUMENT_COUNT,functionName,Arrays.toString(functionArguments),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");

Following are 1th generated patches:
Validating 47 patches...
Current actions:
INSERT:
19:String functionName=call.getFirstChild().getQualifiedName();
TO:
18

INSERT:
22:functionArguments[i]=validator.getReadableJSTypeName(call.getChildAtIndex(i+1),false);
TO:
18

Following are 2th generated patches:
Validating 200 patches...
Current actions:
INSERT:
19:String functionName=call.getFirstChild().getQualifiedName();
TO:
18

Following are 3th generated patches:
Validating 45 patches...
Current actions:
INSERT:
20:String[] functionArguments=new String[numArgs];
TO:
18

INSERT:
22:functionArguments[i]=validator.getReadableJSTypeName(call.getChildAtIndex(i+1),false);
TO:
18

Following are 4th generated patches:
Validating 200 patches...
Current actions:
INSERT:
20:String[] functionArguments=new String[numArgs];
TO:
18

Tested:1207 patches
Compile failed:1165 patches
Compilation rate:0.0347970173985087

Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/7.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/7.java
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18:if(minArgs>numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

Following are 0th generated patches:
Validating 5 patches...
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18:if(minArgs>numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

INSERT:
22:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
TO:
20

INSERT:
24:}

TO:
20

Following are 1th generated patches:
Validating 3 patches...
Current actions:
INSERT:
21:else{
if(maxArgs!=Integer.MAX_VALUE&&numArgs>maxArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
}
TO:
20

INSERT:
24:}

TO:
20

Following are 2th generated patches:
Validating 1 patches...
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18:if(minArgs>numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

INSERT:
21:else{
if(maxArgs!=Integer.MAX_VALUE&&numArgs>maxArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
}
TO:
20

INSERT:
24:}

TO:
20

Following are 3th generated patches:
Validating 2 patches...
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18:if(minArgs>numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

INSERT:
24:}

TO:
20

Following are 4th generated patches:
Validating 1 patches...
Current actions:
INSERT:
22:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
TO:
20

INSERT:
24:}

TO:
20

Tested:1219 patches
Compile failed:1172 patches
Compilation rate:0.03855619360131255
PPPPPNNNNNNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/8.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/8.java
Current actions:
Wrap:
MethodDeclaration
On:
[int numArgs=call.getChildCount()-1;, int minArgs=functionType.getMinArguments();, int maxArgs=functionType.getMaxArguments();, if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}, {
Iterator<Node> arguments=call.children().iterator();
arguments.next();
Iterator<Node> parameters=functionType.getParameters().iterator();
int ordinal=0;
Node parameter=null;
Node argument=null;
while(arguments.hasNext()&&parameters.hasNext()){
parameter=parameters.next();
argument=arguments.next();
ordinal++;
validator.expectArgumentMatchesParameter(t,argument,getJSType(argument),getJSType(parameter),call,ordinal);
}
int numArgs=call.getChildCount()-1;
int minArgs=functionType.getMinArguments();
int maxArgs=functionType.getMaxArguments();
if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
}, ordinal++;, validator.expectArgumentMatchesParameter(t,argument,getJSType(argument),getJSType(parameter),call,ordinal);, Iterator<Node> arguments=call.children().iterator();, arguments.next();, Iterator<Node> parameters=functionType.getParameters().iterator();]
Following are 0th generated patches:
Validating 1 patches...
Current actions:
INSERT:
2:private void visitParameterList(NodeTraversal t,Node call,FunctionType functionType){
int numArgs=call.getChildCount()-1;
int minArgs=functionType.getMinArguments();
int maxArgs=functionType.getMaxArguments();
if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
Iterator<Node> arguments=call.children().iterator();
arguments.next();
Iterator<Node> parameters=functionType.getParameters().iterator();
int ordinal=0;
Node parameter=null;
Node argument=null;
while(arguments.hasNext()&&parameters.hasNext()){
parameter=parameters.next();
argument=arguments.next();
ordinal++;
validator.expectArgumentMatchesParameter(t,argument,getJSType(argument),getJSType(parameter),call,ordinal);
}
}
TO:
1

DELETE:
Original line: 2{
Iterator<Node> arguments=call.children().iterator();
arguments.next();
Iterator<Node> parameters=functionType.getParameters().iterator();
int ordinal=0;
Node parameter=null;
Node argument=null;
while(arguments.hasNext()&&parameters.hasNext()){
parameter=parameters.next();
argument=arguments.next();
ordinal++;
validator.expectArgumentMatchesParameter(t,argument,getJSType(argument),getJSType(parameter),call,ordinal);
}
int numArgs=call.getChildCount()-1;
int minArgs=functionType.getMinArguments();
int maxArgs=functionType.getMaxArguments();
if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
}

DELETE:
Original line: 3Iterator<Node> arguments=call.children().iterator();

DELETE:
Original line: 4arguments.next();

DELETE:
Original line: 5Iterator<Node> parameters=functionType.getParameters().iterator();

DELETE:
Original line: 12ordinal++;

DELETE:
Original line: 13validator.expectArgumentMatchesParameter(t,argument,getJSType(argument),getJSType(parameter),call,ordinal);

DELETE:
Original line: 15int numArgs=call.getChildCount()-1;

DELETE:
Original line: 16int minArgs=functionType.getMinArguments();

DELETE:
Original line: 17int maxArgs=functionType.getMaxArguments();

DELETE:
Original line: 18if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

Following are 1th generated patches:
Validating 1 patches...
Tested:1221 patches
Compile failed:1174 patches
Compilation rate:0.03849303849303849
NN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/9.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/9.java
Tested:1221 patches
Compile failed:1174 patches
Compilation rate:0.03849303849303849

Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/10.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/10.java
Current actions:
INSERT:
20:return ;
TO:
19

Following are 0th generated patches:
Validating 105 patches...
Current actions:
INSERT:
21:}

TO:
19

INSERT:
24:JSType lastArgumentType=getJSType(lastArgument);
TO:
19

INSERT:
26:JSType lastParameter=functionType.getParameters().getLast();
TO:
19

Following are 1th generated patches:
Validating 73 patches...
Current actions:
INSERT:
20:return ;
TO:
19

INSERT:
21:}

TO:
19

INSERT:
22:if(call.getChildCount()>1&&functionType.isVarArgs()){
Node lastArgument=call.getLastChild();
JSType lastArgumentType=getJSType(lastArgument);
if(lastArgumentType.isArrayType()&&getNativeType(ARRAY_TYPE).isSubtypeOf(lastArgumentType)&&lastArgument.getType()==Token.ARRAYLIT){
JSType lastParameter=functionType.getParameters().getLast();
if(getNativeType(ARRAY_TYPE).isSubtypeOf(getJSType(lastParameter))){
int lastArgLength=getNativeType(ARRAY_TYPE).cast(lastArgumentType).evaluate(lastArgument).length;
int lastParamLength=getNativeType(ARRAY_TYPE).evaluate(getJSType(lastParameter)).length;
if(lastArgLength!=lastParamLength){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
}
}
}
TO:
19

Following are 2th generated patches:
Validating 2 patches...
Current actions:
INSERT:
21:}

TO:
19

INSERT:
27:if(getNativeType(ARRAY_TYPE).isSubtypeOf(getJSType(lastParameter))){
int lastArgLength=getNativeType(ARRAY_TYPE).cast(lastArgumentType).evaluate(lastArgument).length;
int lastParamLength=getNativeType(ARRAY_TYPE).evaluate(getJSType(lastParameter)).length;
if(lastArgLength!=lastParamLength){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
}
TO:
19

Following are 3th generated patches:
Validating 1 patches...
Tested:1400 patches
Compile failed:1347 patches
Compilation rate:0.03785714285714286
NNNNNNNNNNNPPNNNNNNNNNNNNPNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/11.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/11.java
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18:if(minArgs>numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

Following are 0th generated patches:
Validating 7 patches...
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18:if(minArgs>numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

INSERT:
19:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
TO:
18

Following are 1th generated patches:
Validating 3 patches...
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18:if(minArgs>numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

Following are 2th generated patches:
Validating 1 patches...
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18:if(minArgs>numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

INSERT:
19:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
TO:
18

INSERT:
21:else{
if(maxArgs!=Integer.MAX_VALUE&&numArgs>maxArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
}
TO:
18

Following are 3th generated patches:
Validating 4 patches...
Current actions:
INSERT:
19:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
TO:
18

Following are 4th generated patches:
Validating 2 patches...
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18:if(minArgs>numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

INSERT:
21:else{
if(maxArgs!=Integer.MAX_VALUE&&numArgs>maxArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
}
TO:
18

Tested:1416 patches
Compile failed:1354 patches
Compilation rate:0.043785310734463276
NNNNPPPPPPPNNNPP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/12.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/12.java
Current actions:
INSERT:
21:else{
if(functionType.hasVarArgs()&&numArgs<minArgs){
report(t,call,MISSING_ARGUMENTS,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(minArgs-numArgs));
}
}
TO:
20

Following are 0th generated patches:
Validating 2 patches...
Current actions:
INSERT:
21:else{
if(functionType.hasVarArgs()&&numArgs<minArgs){
report(t,call,MISSING_ARGUMENTS,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(minArgs-numArgs));
}
}
TO:
20

Following are 1th generated patches:
Validating 1 patches...
Current actions:
INSERT:
22:report(t,call,MISSING_ARGUMENTS,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(minArgs-numArgs));
TO:
20

Following are 2th generated patches:
Validating 2 patches...
Tested:1421 patches
Compile failed:1358 patches
Compilation rate:0.04433497536945813
NNNNP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/13.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/13.java
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18:if(minArgs>numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

Following are 0th generated patches:
Validating 7 patches...
Current actions:
INSERT:
21:else{
if(maxArgs!=Integer.MAX_VALUE&&maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
}
TO:
18

Following are 1th generated patches:
Validating 1 patches...
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18:if(minArgs>numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

INSERT:
19:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
TO:
18

INSERT:
21:else{
if(maxArgs!=Integer.MAX_VALUE&&maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
}
TO:
18

Following are 2th generated patches:
Validating 4 patches...
Current actions:
INSERT:
19:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
TO:
18

INSERT:
21:else{
if(maxArgs!=Integer.MAX_VALUE&&maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
}
TO:
18

Following are 3th generated patches:
Validating 3 patches...
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18:if(minArgs>numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

INSERT:
19:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
TO:
18

Following are 4th generated patches:
Validating 3 patches...
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18:if(minArgs>numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

INSERT:
21:else{
if(maxArgs!=Integer.MAX_VALUE&&maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
}
TO:
18

Tested:1437 patches
Compile failed:1368 patches
Compilation rate:0.04801670146137787
NNNNPPPNNNNNNPPP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/14.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/14.java
Current actions:
DELETE:
Original line: 5Iterator<Node> parameters=functionType.getParameters().iterator();

Following are 0th generated patches:
Validating 21 patches...
Current actions:
DELETE:
Original line: 5Iterator<Node> parameters=functionType.getParameters().iterator();

Following are 1th generated patches:
Validating 1 patches...
Current actions:
DELETE:
Original line: 5Iterator<Node> parameters=functionType.getParameters().iterator();

DELETE:
Original line: 7Node parameter=null;

INSERT:
7:for(Node parameter : functionType.getParameters()){
ordinal++;
argument=arguments.next();
validator.expectArgumentMatchesParameter(t,argument,getJSType(argument),getJSType(parameter),call,ordinal);
}
TO:
8

DELETE:
Original line: 9while(arguments.hasNext()&&parameters.hasNext()){
parameter=parameters.next();
argument=arguments.next();
ordinal++;
validator.expectArgumentMatchesParameter(t,argument,getJSType(argument),getJSType(parameter),call,ordinal);
}

Following are 2th generated patches:
Validating 4 patches...
Current actions:
DELETE:
Original line: 5Iterator<Node> parameters=functionType.getParameters().iterator();

INSERT:
7:for(Node parameter : functionType.getParameters()){
ordinal++;
argument=arguments.next();
validator.expectArgumentMatchesParameter(t,argument,getJSType(argument),getJSType(parameter),call,ordinal);
}
TO:
8

DELETE:
Original line: 9while(arguments.hasNext()&&parameters.hasNext()){
parameter=parameters.next();
argument=arguments.next();
ordinal++;
validator.expectArgumentMatchesParameter(t,argument,getJSType(argument),getJSType(parameter),call,ordinal);
}

Following are 3th generated patches:
Validating 3 patches...
Current actions:
DELETE:
Original line: 5Iterator<Node> parameters=functionType.getParameters().iterator();

DELETE:
Original line: 7Node parameter=null;

INSERT:
7:for(Node parameter : functionType.getParameters()){
ordinal++;
argument=arguments.next();
validator.expectArgumentMatchesParameter(t,argument,getJSType(argument),getJSType(parameter),call,ordinal);
}
TO:
8

DELETE:
Original line: 11argument=arguments.next();

DELETE:
Original line: 12ordinal++;

DELETE:
Original line: 13validator.expectArgumentMatchesParameter(t,argument,getJSType(argument),getJSType(parameter),call,ordinal);

Following are 4th generated patches:
Validating 3 patches...
Current actions:
DELETE:
Original line: 5Iterator<Node> parameters=functionType.getParameters().iterator();

DELETE:
Original line: 7Node parameter=null;

DELETE:
Original line: 9while(arguments.hasNext()&&parameters.hasNext()){
parameter=parameters.next();
argument=arguments.next();
ordinal++;
validator.expectArgumentMatchesParameter(t,argument,getJSType(argument),getJSType(parameter),call,ordinal);
}

Tested:1453 patches
Compile failed:1377 patches
Compilation rate:0.05230557467309016
NNNNNPPPPNPPNPNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/15.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/15.java
Current actions:
INSERT:
19:String argsString="";
TO:
18

Following are 0th generated patches:
Validating 31 patches...
Current actions:
INSERT:
19:String argsString="";
TO:
18

INSERT:
21:argsString="arguments";
TO:
18

INSERT:
24:argsString="argument";
TO:
18

Following are 1th generated patches:
Validating 3 patches...
Current actions:
INSERT:
19:String argsString="";
TO:
18

INSERT:
23:else{
argsString="argument";
}
TO:
18

UPDATE
FROM:
19:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
TO:
26:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),argsString,String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");

Following are 2th generated patches:
Validating 5 patches...
Current actions:
INSERT:
19:String argsString="";
TO:
18

INSERT:
23:else{
argsString="argument";
}
TO:
18

Following are 3th generated patches:
Validating 2 patches...
Current actions:
INSERT:
19:String argsString="";
TO:
18

INSERT:
20:if(numArgs!=1){
argsString="arguments";
}
TO:
18

INSERT:
23:else{
argsString="argument";
}
TO:
18

UPDATE
FROM:
19:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
TO:
26:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),argsString,String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");

Following are 4th generated patches:
Validating 147 patches...
Current actions:
INSERT:
23:else{
argsString="argument";
}
TO:
18

Tested:1633 patches
Compile failed:1527 patches
Compilation rate:0.06491120636864667
NNNNNNNNNNNPPNPNNNNPPNNNNPPPPPPPNNNNNNNNNNNNNNNNNNNPNNNPNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNPNNNNNNNNNPNNNNNNPNPPNNNNNPNNPNNNNNNNNNNPPNNNNNPNNNNNPNNNPNNNPP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/16.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/16.java
Tested:1633 patches
Compile failed:1527 patches
Compilation rate:0.06491120636864667

Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/17.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/17.java
Current actions:
DELETE:
Original line: 19report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");

Following are 0th generated patches:
Validating 51 patches...
Current actions:
INSERT:
19:String argsStr=null;
TO:
18

INSERT:
24:argsStr=String.format("at least %d argument(s)",minArgs);
TO:
18

INSERT:
26:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),argsStr,"");
TO:
18

Following are 1th generated patches:
Validating 200 patches...
Current actions:
DELETE:
Original line: 19report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");

INSERT:
19:String argsStr=null;
TO:
18

INSERT:
20:if(maxArgs!=Integer.MAX_VALUE){
argsStr=String.format("between %d and %d arguments",minArgs,maxArgs);
}
TO:
18

INSERT:
23:else{
argsStr=String.format("at least %d argument(s)",minArgs);
}
TO:
18

INSERT:
26:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),argsStr,"");
TO:
18

Following are 2th generated patches:
Validating 200 patches...
Tested:2080 patches
Compile failed:1951 patches
Compilation rate:0.06201923076923077
NNNNNNNNNNNPNPPPNPPNNNNNNNNNNNNPPNPPNNNPNPNPNPNNPPPNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/18.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/18.java
Current actions:
Move
FROM:
Former Line 15:int numArgs=call.getChildCount()-1;
TO:
Current Line 2:Block

Following are 0th generated patches:
Validating 200 patches...
Current actions:
INSERT:
6:int numArgs=call.getChildCount()-1;
TO:
6

DELETE:
Original line: 7Node parameter=null;

INSERT:
7:if(!functionType.hasFixedArity()){
return ;
}
TO:
6

INSERT:
10:int numParameters=functionType.getParameters().size();
TO:
6

UPDATE
FROM:
17:int maxArgs=functionType.getMaxArguments();
TO:
12:int maxArguments=functionType.getMaxArguments();

DELETE:
Original line: 15int numArgs=call.getChildCount()-1;

INSERT:
16:else{
if(numArgs!=numParameters){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(numParameters));
}
}
TO:
19

INSERT:
22:Node argument=arguments.next();
TO:
9

Following are 1th generated patches:
Validating 200 patches...
Current actions:
DELETE:
Original line: 5Iterator<Node> parameters=functionType.getParameters().iterator();

INSERT:
7:if(!functionType.hasFixedArity()){
return ;
}
TO:
6

UPDATE
FROM:
16:int minArgs=functionType.getMinArguments();
TO:
11:int minArguments=functionType.getMinArguments();

UPDATE
FROM:
17:int maxArgs=functionType.getMaxArguments();
TO:
12:int maxArguments=functionType.getMaxArguments();

UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
13:if(minArguments>numArgs||maxArguments<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArguments),maxArguments!=Integer.MAX_VALUE?" and no more than "+maxArguments+" argument(s)":"");
}

UPDATE
FROM:
19:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
TO:
14:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArguments),maxArguments!=Integer.MAX_VALUE?" and no more than "+maxArguments+" argument(s)":"");

INSERT:
17:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(numParameters));
TO:
19

INSERT:
19:Iterator<Node> parameters=functionType.getParameters().iterator();
TO:
19

INSERT:
22:Node argument=arguments.next();
TO:
9

Following are 2th generated patches:
Validating 200 patches...
Tested:2593 patches
Compile failed:2464 patches
Compilation rate:0.049749325106054766

Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/19.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/19.java
Current actions:
DELETE:
Original line: 19report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");

Following are 0th generated patches:
Validating 78 patches...
Current actions:
INSERT:
19:String functionName=validator.getReadableJSTypeName(call.getFirstChild(),false);
TO:
18

INSERT:
20:String extraMessage="";
TO:
18

INSERT:
21:if(minArgs!=maxArgs){
extraMessage=" between "+minArgs+" and "+maxArgs+" argument(s)";
}
TO:
18

INSERT:
24:else{
if(minArgs!=0){
extraMessage=" at least "+minArgs+" argument(s)";
}
}
TO:
18

Following are 1th generated patches:
Validating 200 patches...
Current actions:
DELETE:
Original line: 19report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");

INSERT:
19:String functionName=validator.getReadableJSTypeName(call.getFirstChild(),false);
TO:
18

INSERT:
20:String extraMessage="";
TO:
18

INSERT:
21:if(minArgs!=maxArgs){
extraMessage=" between "+minArgs+" and "+maxArgs+" argument(s)";
}
TO:
18

INSERT:
25:extraMessage=" at least "+minArgs+" argument(s)";
TO:
18

INSERT:
27:report(t,call,WRONG_ARGUMENT_COUNT,functionName,String.valueOf(numArgs),extraMessage);
TO:
18

Following are 2th generated patches:
Validating 200 patches...
Tested:3065 patches
Compile failed:2774 patches
Compilation rate:0.09494290375203915
NNNNNNNNNNNNPPNNPNNNNNPPNPPNNNNNNNNNNNNNNNNPNNNPPPNNNNNNNNNPPNPPNNNNNNNNNPPPPPNNNNNNNNNNNNPNPPNPNNNNNNNNNNNNNNNNNNNPNPNNPNPPPPNNNNNPNNNNPPNPPNPNPPPPNPNPNPPNNPPPNNNPPPPPPPNNNNNNPPPPPPPNNNPNPPPPPNNPNNNNNPPNNNNNNNNPNNNPPNNNNNPPNPPNNPPPPPNPPPNNNPNNNNNNNNNNNNNNPNNNNNNNNPNPNPNNNNNNNNNNNNNNNNNPNPPNNNPNNNNNNNNNNNNNNNNPNNNPPPPNNPPNNNNNPNNNNPPPNPNPPPNPPNPPNNPPNNPPPNNNPPPPPPPNNNNNNPPPPPPPNNNPNPPPPPNNNNNNPNPPNNNNNNNNPNNPNPNNNNNNPPPPNNPPPPPPNPNPNNPNNNNNNNNNNNNNNNNPNNNNNNPNPPNNNNNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/20.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/20.java
Current actions:
DELETE:
Original line: 3Iterator<Node> arguments=call.children().iterator();

Following are 0th generated patches:
Validating 200 patches...
Current actions:
DELETE:
Original line: 3Iterator<Node> arguments=call.children().iterator();

DELETE:
Original line: 5Iterator<Node> parameters=functionType.getParameters().iterator();

DELETE:
Original line: 8Node argument=null;

DELETE:
Original line: 9while(arguments.hasNext()&&parameters.hasNext()){
parameter=parameters.next();
argument=arguments.next();
ordinal++;
validator.expectArgumentMatchesParameter(t,argument,getJSType(argument),getJSType(parameter),call,ordinal);
}

Following are 1th generated patches:
Validating 4 patches...
Current actions:
DELETE:
Original line: 3Iterator<Node> arguments=call.children().iterator();

DELETE:
Original line: 4arguments.next();

DELETE:
Original line: 5Iterator<Node> parameters=functionType.getParameters().iterator();

DELETE:
Original line: 6int ordinal=0;

UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
6:if(numArgs<minArgs||numArgs>maxArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

DELETE:
Original line: 7Node parameter=null;

DELETE:
Original line: 8Node argument=null;

DELETE:
Original line: 9while(arguments.hasNext()&&parameters.hasNext()){
parameter=parameters.next();
argument=arguments.next();
ordinal++;
validator.expectArgumentMatchesParameter(t,argument,getJSType(argument),getJSType(parameter),call,ordinal);
}

Following are 2th generated patches:
Validating 35 patches...
Current actions:
DELETE:
Original line: 3Iterator<Node> arguments=call.children().iterator();

DELETE:
Original line: 5Iterator<Node> parameters=functionType.getParameters().iterator();

DELETE:
Original line: 6int ordinal=0;

DELETE:
Original line: 8Node argument=null;

DELETE:
Original line: 9while(arguments.hasNext()&&parameters.hasNext()){
parameter=parameters.next();
argument=arguments.next();
ordinal++;
validator.expectArgumentMatchesParameter(t,argument,getJSType(argument),getJSType(parameter),call,ordinal);
}

Following are 3th generated patches:
Validating 5 patches...
Current actions:
DELETE:
Original line: 3Iterator<Node> arguments=call.children().iterator();

DELETE:
Original line: 4arguments.next();

DELETE:
Original line: 5Iterator<Node> parameters=functionType.getParameters().iterator();

UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
6:if(numArgs<minArgs||numArgs>maxArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

DELETE:
Original line: 9while(arguments.hasNext()&&parameters.hasNext()){
parameter=parameters.next();
argument=arguments.next();
ordinal++;
validator.expectArgumentMatchesParameter(t,argument,getJSType(argument),getJSType(parameter),call,ordinal);
}

Following are 4th generated patches:
Validating 32 patches...
Current actions:
DELETE:
Original line: 10parameter=parameters.next();

DELETE:
Original line: 12ordinal++;

Tested:3325 patches
Compile failed:2960 patches
Compilation rate:0.10977443609022557
NNNNNNNNNNNNNNNPPNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNPNNPNNNNPPPNPPNPNNNNNNPNNNPPPPPPNNNNNNNNPNNNNNNNNNNPNNNPNNNNNNNPNNNNNNNNNNNNPNNPPPPNPNNNNPNNNNNNPNNNNPNNNPPPPPNNPNNNNPNNNPPPPPPPNNNNNNNNNNNNNNPNPNNNNNPNNNNNNNPNPPPPPPPNNNNNNNNNPPPPPNNNNNNNNNPNPPNNPPNPNNNNPPPPPPP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/21.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/21.java
Current actions:
DELETE:
Original line: 13validator.expectArgumentMatchesParameter(t,argument,getJSType(argument),getJSType(parameter),call,ordinal);

Following are 0th generated patches:
Validating 5 patches...
Current actions:
DELETE:
Original line: 13validator.expectArgumentMatchesParameter(t,argument,getJSType(argument),getJSType(parameter),call,ordinal);

Following are 1th generated patches:
Validating 1 patches...
Current actions:
DELETE:
Original line: 13validator.expectArgumentMatchesParameter(t,argument,getJSType(argument),getJSType(parameter),call,ordinal);

INSERT:
13:if(validator.expectArgumentMatchesParameter(t,argument,getJSType(argument),getJSType(parameter),call,ordinal)){
break;
}
TO:
12

Following are 2th generated patches:
Validating 200 patches...
Current actions:
INSERT:
13:if(validator.expectArgumentMatchesParameter(t,argument,getJSType(argument),getJSType(parameter),call,ordinal)){
break;
}
TO:
12

Following are 3th generated patches:
Validating 200 patches...
Current actions:
INSERT:
14:break;
TO:
12

Following are 4th generated patches:
Validating 1 patches...
Current actions:
DELETE:
Original line: 13validator.expectArgumentMatchesParameter(t,argument,getJSType(argument),getJSType(parameter),call,ordinal);

INSERT:
14:break;
TO:
12

Tested:3731 patches
Compile failed:3335 patches
Compilation rate:0.10613776467435004
NNNPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNPPNPNNPPNNNNPPNNNNPNNNPNNNNNPPNNNNNNNNNNNNNNNNNNPNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNPPPNNNPPNNNNPPNNNNNPNNPNNPNPNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/22.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/22.java
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18:if(minArgs>numArgs||(maxArgs!=Integer.MAX_VALUE&&maxArgs<numArgs)){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

Following are 0th generated patches:
Validating 1 patches...
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18:if(minArgs>numArgs||(maxArgs!=Integer.MAX_VALUE&&maxArgs<numArgs)){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

Following are 1th generated patches:
Validating 5 patches...
Tested:3737 patches
Compile failed:3335 patches
Compilation rate:0.10757291945410757
PPPPPP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/23.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/23.java
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18:if(minArgs>numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

Following are 0th generated patches:
Validating 1 patches...
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18:if(minArgs>numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

Following are 0th generated patches:
Validating 1 patches...
Tested:3739 patches
Compile failed:3335 patches
Compilation rate:0.10805028082374966
PP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/24.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/24.java
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18:if(minArgs>numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

Following are 0th generated patches:
Validating 7 patches...
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18:if(minArgs>numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

INSERT:
19:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
TO:
18

INSERT:
21:if(maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18

Following are 1th generated patches:
Validating 59 patches...
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18:if(minArgs>numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

INSERT:
21:if(maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18

Following are 2th generated patches:
Validating 57 patches...
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18:if(minArgs>numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

Following are 3th generated patches:
Validating 1 patches...
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18:if(minArgs>numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

INSERT:
19:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
TO:
18

Following are 4th generated patches:
Validating 3 patches...
Current actions:
INSERT:
21:if(maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18

Tested:3865 patches
Compile failed:3407 patches
Compilation rate:0.11849935316946959
PPPPPPPNNNNNNNNNNNNNPNPNNPPPNPNNNPPPNPPNPNPNNNNNNPNNNNNNPPNPPPPPPNNNNNNNNNNNPNPNNNPPPPPNNNNPNNPPPNPPPNNNNNNNNNNNNNNPPPPPPPPPPP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/25.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/25.java
Current actions:
INSERT:
3:Node firstArg=call.getChildAtIndex(1);
TO:
2

INSERT:
4:Node lastArg=call.getLastChild();
TO:
2

DELETE:
Original line: 4arguments.next();

INSERT:
5:int numArgs=lastArg.getIntProp(Node.END_OF_STATEMENT_PROP);
TO:
2

INSERT:
6:if(numArgs==-1){
numArgs=call.getChildCount()-1;
}
TO:
2

DELETE:
Original line: 6int ordinal=0;

DELETE:
Original line: 7Node parameter=null;

DELETE:
Original line: 9while(arguments.hasNext()&&parameters.hasNext()){
parameter=parameters.next();
argument=arguments.next();
ordinal++;
validator.expectArgumentMatchesParameter(t,argument,getJSType(argument),getJSType(parameter),call,ordinal);
}

INSERT:
13:return ;
TO:
19

INSERT:
14:}

TO:
19

DELETE:
Original line: 15int numArgs=call.getChildCount()-1;

INSERT:
16:int ordinal=0;
TO:
19

INSERT:
17:Node parameter=null;
TO:
19

INSERT:
19:parameter=parameters.next();
TO:
19

INSERT:
20:ordinal++;
TO:
19

INSERT:
22:if(paramIndex>=numArgs){
return ;
}
TO:
19

Following are 1th generated patches:
Validating 200 patches...
Tested:4062 patches
Compile failed:3604 patches
Compilation rate:0.11275233874938453
NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/26.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/26.java
Current actions:
INSERT:
15:if(functionType.isVarArgs()){
int numArgs=call.getChildCount()-1;
int minArgs=functionType.getMinArguments();
int maxArgs=functionType.getMaxArguments();
if(minArgs>numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
}
TO:
14

Following are 0th generated patches:
Validating 197 patches...
Current actions:
INSERT:
15:if(functionType.isVarArgs()){
int numArgs=call.getChildCount()-1;
int minArgs=functionType.getMinArguments();
int maxArgs=functionType.getMaxArguments();
if(minArgs>numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
}
TO:
14

DELETE:
Original line: 15int numArgs=call.getChildCount()-1;

DELETE:
Original line: 16int minArgs=functionType.getMinArguments();

DELETE:
Original line: 17int maxArgs=functionType.getMaxArguments();

DELETE:
Original line: 18if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

INSERT:
23:else{
int numArgs=call.getChildCount()-1;
int minArgs=functionType.getMinArguments();
int maxArgs=functionType.getMaxArguments();
if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
}
TO:
14

Following are 1th generated patches:
Validating 154 patches...
Current actions:
INSERT:
15:if(functionType.isVarArgs()){
int numArgs=call.getChildCount()-1;
int minArgs=functionType.getMinArguments();
int maxArgs=functionType.getMaxArguments();
if(minArgs>numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
}
TO:
14

DELETE:
Original line: 15int numArgs=call.getChildCount()-1;

DELETE:
Original line: 16int minArgs=functionType.getMinArguments();

DELETE:
Original line: 17int maxArgs=functionType.getMaxArguments();

DELETE:
Original line: 18if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

INSERT:
24:int numArgs=call.getChildCount()-1;
TO:
14

INSERT:
25:int minArgs=functionType.getMinArguments();
TO:
14

INSERT:
26:int maxArgs=functionType.getMaxArguments();
TO:
14

INSERT:
27:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
14

Following are 2th generated patches:
Validating 200 patches...
Tested:4435 patches
Compile failed:3964 patches
Compilation rate:0.10620067643742953
NNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNPNNPNNNNNPNNNNNNNNNNNNNPNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNPPNNNNNNPNNNNNNNNNNNNNNPNNNNNNNNNNNNNNP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/27.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/27.java
Current actions:
INSERT:
21:else{
int numParams=functionType.getParameters().size();
if(numArgs<numParams){
report(t,call,NOT_ENOUGH_ARGUMENTS,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(numParams));
}
}
TO:
20

Following are 0th generated patches:
Validating 6 patches...
Current actions:
INSERT:
22:int numParams=functionType.getParameters().size();
TO:
20

INSERT:
23:if(numArgs<numParams){
report(t,call,NOT_ENOUGH_ARGUMENTS,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(numParams));
}
TO:
20

Following are 1th generated patches:
Validating 129 patches...
Current actions:
INSERT:
21:else{
int numParams=functionType.getParameters().size();
if(numArgs<numParams){
report(t,call,NOT_ENOUGH_ARGUMENTS,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(numParams));
}
}
TO:
20

Following are 2th generated patches:
Validating 1 patches...
Current actions:
INSERT:
22:int numParams=functionType.getParameters().size();
TO:
20

Following are 3th generated patches:
Validating 45 patches...
Current actions:
INSERT:
24:report(t,call,NOT_ENOUGH_ARGUMENTS,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(numParams));
TO:
20

Following are 4th generated patches:
Validating 3 patches...
Current actions:
INSERT:
23:if(numArgs<numParams){
report(t,call,NOT_ENOUGH_ARGUMENTS,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(numParams));
}
TO:
20

Tested:4618 patches
Compile failed:4146 patches
Compilation rate:0.10220874837592031
NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/28.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/28.java
Current actions:
INSERT:
20:return ;
TO:
19

Following are 0th generated patches:
Validating 5 patches...
Current actions:
INSERT:
20:return ;
TO:
19

INSERT:
21:}

TO:
19

INSERT:
22:if(functionType.getMaxArguments()==Integer.MAX_VALUE&&numArgs<functionType.getMinArguments()-1){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(functionType.getMinArguments()-1),"or more");
}
TO:
19

Following are 1th generated patches:
Validating 2 patches...
Current actions:
INSERT:
21:}

TO:
19

INSERT:
22:if(functionType.getMaxArguments()==Integer.MAX_VALUE&&numArgs<functionType.getMinArguments()-1){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(functionType.getMinArguments()-1),"or more");
}
TO:
19

Following are 2th generated patches:
Validating 1 patches...
Tested:4625 patches
Compile failed:4150 patches
Compilation rate:0.10270270270270271
NNPPPNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/29.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/29.java
Current actions:
DELETE:
Original line: 3Iterator<Node> arguments=call.children().iterator();

Following are 0th generated patches:
Validating 200 patches...
Current actions:
INSERT:
3:Node arg=call.getFirstChild().getNext();
TO:
2

DELETE:
Original line: 3Iterator<Node> arguments=call.children().iterator();

DELETE:
Original line: 4arguments.next();

UPDATE
FROM:
9:while(arguments.hasNext()&&parameters.hasNext()){
parameter=parameters.next();
argument=arguments.next();
ordinal++;
validator.expectArgumentMatchesParameter(t,argument,getJSType(argument),getJSType(parameter),call,ordinal);
}
TO:
7:while(arg!=null&&parameters.hasNext()){
parameter=parameters.next();
ordinal++;
validator.expectArgumentMatchesParameter(t,arg,getJSType(arg),getJSType(parameter),call,ordinal);
arg=arg.getNext();
}

DELETE:
Original line: 8Node argument=null;

UPDATE
FROM:
13:validator.expectArgumentMatchesParameter(t,argument,getJSType(argument),getJSType(parameter),call,ordinal);
TO:
10:validator.expectArgumentMatchesParameter(t,arg,getJSType(arg),getJSType(parameter),call,ordinal);

INSERT:
11:arg=arg.getNext();
TO:
13

INSERT:
14:report(t,arg,DUPLICATE_ARGUMENTS);
TO:
13

DELETE:
Original line: 15int numArgs=call.getChildCount()-1;

INSERT:
18:int numArgs=call.getChildCount()-1;
TO:
17

DELETE:
Original line: 18if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

INSERT:
20:report(t,call,TOO_FEW_ARGUMENTS,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(minArgs),String.valueOf(numArgs));
TO:
17

INSERT:
22:else{
if(numArgs>maxArgs){
report(t,call,TOO_MANY_ARGUMENTS,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(maxArgs));
}
}
TO:
17

Following are 1th generated patches:
Validating 200 patches...
Tested:4999 patches
Compile failed:4506 patches
Compilation rate:0.09861972394478896
NNNNNNNNNNNNNPPPNPNNNNNPNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNPNPPNPPPNNPNNNNNNNNNNNNNNNPPPNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/30.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/30.java
Current actions:
INSERT:
19:String functionName=call.getFirstChild().getQualifiedName();
TO:
18

Following are 0th generated patches:
Validating 7 patches...
Current actions:
INSERT:
19:String functionName=call.getFirstChild().getQualifiedName();
TO:
18

INSERT:
20:String args=numArgs>0?numArgs+" arguments":"no arguments";
TO:
18

Following are 1th generated patches:
Validating 126 patches...
Current actions:
INSERT:
19:String functionName=call.getFirstChild().getQualifiedName();
TO:
18

Following are 2th generated patches:
Validating 45 patches...
Current actions:
INSERT:
19:String functionName=call.getFirstChild().getQualifiedName();
TO:
18

UPDATE
FROM:
19:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
TO:
21:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),args,functionName,minArgs,maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");

Following are 3th generated patches:
Validating 46 patches...
Current actions:
INSERT:
20:String args=numArgs>0?numArgs+" arguments":"no arguments";
TO:
18

Following are 4th generated patches:
Validating 81 patches...
Current actions:
INSERT:
19:String functionName=call.getFirstChild().getQualifiedName();
TO:
18

INSERT:
20:String args=numArgs>0?numArgs+" arguments":"no arguments";
TO:
18

UPDATE
FROM:
19:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
TO:
21:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),args,functionName,minArgs,maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");

Tested:5302 patches
Compile failed:4684 patches
Compilation rate:0.11655978875895888
NNNNPPPNNNNNPPPPPPPPPNPPPPPPPPPNPPNNNPPPPPPNNPNNNNPNNNPPPPPPNNNNPPNNPNNNPPPNPPNPPNPNNNNNNNNNPNNPPNNNPNNNNNPPNPNNNNNNPNPPPPNNNNNNPPPPNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPNPPPNNPNNNNNNPPPPPPNPNNPPPPPPPPPPPPPPPPPPPPPPNPPPPPNPPPPPPPPPPPPPNPPPPP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/31.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/31.java
Current actions:
DELETE:
Original line: 5Iterator<Node> parameters=functionType.getParameters().iterator();

Following are 0th generated patches:
Validating 161 patches...
Current actions:
DELETE:
Original line: 5Iterator<Node> parameters=functionType.getParameters().iterator();

INSERT:
11:break;
TO:
8

DELETE:
Original line: 13validator.expectArgumentMatchesParameter(t,argument,getJSType(argument),getJSType(parameter),call,ordinal);

INSERT:
15:validator.expectArgumentMatchesParameter(t,arg,getJSType(arg),getJSType(parameter),call,ordinal);
TO:
12

Following are 1th generated patches:
Validating 126 patches...
Current actions:
INSERT:
9:for(Node arg=arguments.next();arg!=null;arg=arguments.next(),paramIndex++){
if(paramIndex>=functionType.getParameters().size()){
break;
}
parameter=functionType.getParameters().get(paramIndex);
ordinal++;
validator.expectArgumentMatchesParameter(t,arg,getJSType(arg),getJSType(parameter),call,ordinal);
}
TO:
8

DELETE:
Original line: 9while(arguments.hasNext()&&parameters.hasNext()){
parameter=parameters.next();
argument=arguments.next();
ordinal++;
validator.expectArgumentMatchesParameter(t,argument,getJSType(argument),getJSType(parameter),call,ordinal);
}

Following are 2th generated patches:
Validating 72 patches...
Current actions:
DELETE:
Original line: 13validator.expectArgumentMatchesParameter(t,argument,getJSType(argument),getJSType(parameter),call,ordinal);

INSERT:
15:validator.expectArgumentMatchesParameter(t,arg,getJSType(arg),getJSType(parameter),call,ordinal);
TO:
12

Following are 3th generated patches:
Validating 124 patches...
Current actions:
DELETE:
Original line: 5Iterator<Node> parameters=functionType.getParameters().iterator();

INSERT:
9:for(Node arg=arguments.next();arg!=null;arg=arguments.next(),paramIndex++){
if(paramIndex>=functionType.getParameters().size()){
break;
}
parameter=functionType.getParameters().get(paramIndex);
ordinal++;
validator.expectArgumentMatchesParameter(t,arg,getJSType(arg),getJSType(parameter),call,ordinal);
}
TO:
8

DELETE:
Original line: 13validator.expectArgumentMatchesParameter(t,argument,getJSType(argument),getJSType(parameter),call,ordinal);

Following are 4th generated patches:
Validating 73 patches...
Current actions:
DELETE:
Original line: 11argument=arguments.next();

INSERT:
11:break;
TO:
8

Tested:5851 patches
Compile failed:5195 patches
Compilation rate:0.11211758673730986
NNNNNNNNNNNNNNPPNNNPNNNNNNNNNNNNNPNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNPNPNPNPNNNNNPNNNNNNNNNNNPPNPNNNNNNNNNPNNNNNNNNNNNPPNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNPPPNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNPNNNNPNNNNNNNNNNNNNPNNNNPPPPNNNNNNNPNPNNPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
Finish : closure-96 > patch : 0 | Start : Tue Apr 09 23:17:19 HKT 2024 | End : 2024.04.09 AD at 23:30:51 HKT
