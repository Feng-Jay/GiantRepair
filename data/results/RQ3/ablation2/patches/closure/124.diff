Following diff 0:
-returntrue;
+if(!node.isGetProp()){
+returntrue;
+}
+if(replacement.isGetProp()){
+replacement=replacement.getFirstChild();
+}
+returnreplacement.isName();
Following diff 0:
-returntrue;
+return!NodeUtil.isSimpleOperator(node);
Following diff 0:
-returntrue;
+return!NodeUtil.isGet(node);
Following diff 0:
+if(node.isGetProp()){
+returnisSafeReplacement(node,replacement);
+}
Following diff 0:
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
Following diff 0:
-node=node.getFirstChild();
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isParamList()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isDelProp()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isDebugger()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isGetProp()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isCast()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(node.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isFunction()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isGetterDef()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isInstanceOf()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isObjectLit()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isStringKey()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.hasChildren()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isSetterDef()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isFromExterns()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(!nodeToCheck.isQualifiedName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isFalse()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.wasEmptyNode()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isAssignAdd()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isDefaultCase()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isExprResult()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.hasOneChild()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isOptionalArg()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isQuotedString()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.hasChild(node)&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isLabel()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isSyntheticBlock()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isNE()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isLocalResultCall()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(!node.isGetProp()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.getBooleanProp(0)&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.getBooleanProp(1)&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isEquivalentTo(node)&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isNew()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.getBooleanProp(-1)&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isNot()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isNull()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isNumber()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isTrue()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isVar()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isCatch()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isAdd()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isAnd()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isComma()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isDec()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isDo()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isFor()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isHook()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isIf()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isIn()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isInc()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isOr()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(!nodeToCheck.isThis()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isTry()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isVoid()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isWith()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isWhile()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isBlock()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isBreak()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isCase()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isEmpty()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isThrow()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isLabelName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isTypeOf()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isVarArgs()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isAssign()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isGetElem()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isRegExp()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isReturn()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isScript()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isCall()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isString()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isSwitch()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isArrayLit()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
+if(nodeToCheck.isContinue()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
