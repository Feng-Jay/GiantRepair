Following diff 0:
-ensureTyped(t,n,fnType.getInstanceType());
Following diff 0:
-ensureTyped(t,n,fnType.getInstanceType());
+if(!type.isConstructor()&&!type.isEmptyType()&&!type.isUnknownType()){
+report(t,n,NOT_A_CONSTRUCTOR);
+ensureTyped(t,n);
+return;
+}
Following diff 0:
-ensureTyped(t,n,fnType.getInstanceType());
+ensureTyped(t,n);
Following diff 0:
-ensureTyped(t,n,fnType.getInstanceType());
-}
-else{
-ensureTyped(t,n);
Following diff 0:
-ensureTyped(t,n,fnType.getInstanceType());
+return;
Following diff 0:
-ensureTyped(t,n,fnType.getInstanceType());
+checkPropCreation(t,n.cloneNode());
Following diff 0:
-ensureTyped(t,n,fnType.getInstanceType());
+shouldTraverse(t,n,n.getFirstChild());
Following diff 0:
-ensureTyped(t,n,fnType.getInstanceType());
+JSTypereturnType=getJSType(n);
Following diff 0:
-ensureTyped(t,n,fnType.getInstanceType());
+JSTypereturnType=getJSType(constructor);
Following diff 0:
-ensureTyped(t,n,fnType.getInstanceType());
+shouldTraverse(t,n.getLastChild(),n);
Following diff 0:
-ensureTyped(t,n,fnType.getInstanceType());
+doPercentTypedAccounting(t,constructor);
Following diff 0:
-ensureTyped(t,n,fnType.getInstanceType());
+shouldTraverse(t,constructor,n);
Following diff 0:
-ensureTyped(t,n,fnType.getInstanceType());
+shouldTraverse(t,n,n.cloneTree());
Following diff 0:
-ensureTyped(t,n,fnType.getInstanceType());
+doPercentTypedAccounting(t,n);
Following diff 0:
-ensureTyped(t,n,fnType.getInstanceType());
+shouldTraverse(t,n,n.getParent());
Following diff 0:
-ensureTyped(t,n,fnType.getInstanceType());
+shouldTraverse(t,n,n.cloneNode());
Following diff 0:
-ensureTyped(t,n,fnType.getInstanceType());
+visit(t,n.getParent(),n);
Following diff 0:
-ensureTyped(t,n,fnType.getInstanceType());
+checkPropCreation(t,n);
Following diff 0:
-ensureTyped(t,n,fnType.getInstanceType());
+ensureTyped(t,n);
Following diff 0:
-ensureTyped(t,n,fnType.getInstanceType());
+shouldTraverse(t,n.getParent(),n);
Following diff 0:
-ensureTyped(t,n,fnType.getInstanceType());
+shouldTraverse(t,n.cloneTree(),n);
Following diff 0:
-ensureTyped(t,n,fnType.getInstanceType());
+shouldTraverse(t,n.cloneNode(),n);
Following diff 0:
-ensureTyped(t,n,fnType.getInstanceType());
+doPercentTypedAccounting(t,n.cloneTree());
Following diff 0:
-ensureTyped(t,n,fnType.getInstanceType());
+checkPropCreation(t,constructor);
