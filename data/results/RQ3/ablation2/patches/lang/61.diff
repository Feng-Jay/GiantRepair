Following diff 0:
-startIndex=(startIndex<0?0:startIndex);
-outer:for(inti=startIndex;i<len;i++){
-for(intj=0;j<strLen;j++){
-if(str.charAt(j)!=thisBuf[i+j]){
-continueouter;
-}
-}
-returni;
+intendIndex=size-strLen;
+outer:for(inti=startIndex;i<=endIndex;i++){
+for(intj=0;j<strLen;j++){
+if(str.charAt(j)!=thisBuf[i+j]){
+continueouter;
+}
+returni;
+}
Following diff 0:
-outer:for(inti=startIndex;i<len;i++){
-for(intj=0;j<strLen;j++){
-if(str.charAt(j)!=thisBuf[i+j]){
-continueouter;
-}
-}
-returni;
+if(str==null){
+return-1;
+}
+intendIndex=size-strLen;
+outer:for(inti=startIndex;i<=endIndex;i++){
+for(intj=0;j<strLen;j++){
+if(str.charAt(j)!=thisBuf[i+j]){
+continueouter;
+}
+returni;
+}
Following diff 0:
-outer:for(inti=startIndex;i<len;i++){
-for(intj=0;j<strLen;j++){
-if(str.charAt(j)!=thisBuf[i+j]){
-continueouter;
-}
-}
-returni;
+intendIndex=size-strLen;
+outer:for(inti=startIndex;i<=endIndex;i++){
+for(intj=0;j<strLen;j++){
+if(str.charAt(j)!=thisBuf[i+j]){
+continueouter;
+}
+returni;
+}
Following diff 0:
-startIndex=(startIndex<0?0:startIndex);
-if(str==null||startIndex>=size){
-return-1;
-}
-returnstartIndex;
-if(strLen>size){
-intlen=thisBuf.length-strLen;
-outer:for(inti=startIndex;i<len;i++){
-for(intj=0;j<strLen;j++){
-if(str.charAt(j)!=thisBuf[i+j]){
-continueouter;
-}
-}
-returni;
+if(str==null){
+return-1;
+}
+returnstartIndex<size?startIndex:size;
+if(startIndex<0){
+startIndex=0;
+}
+intendIndex=size-strLen;
+if(startIndex>endIndex){
+outer:for(inti=startIndex;i<=endIndex;i++){
+for(intj=0;j<strLen;j++){
+if(str.charAt(j)!=thisBuf[i+j]){
+continueouter;
+}
+returni;
+}
Following diff 0:
-startIndex=(startIndex<0?0:startIndex);
-if(str==null||startIndex>=size){
-return-1;
-}
-returnstartIndex;
-if(strLen>size){
-intlen=thisBuf.length-strLen;
-outer:for(inti=startIndex;i<len;i++){
-for(intj=0;j<strLen;j++){
-if(str.charAt(j)!=thisBuf[i+j]){
-continueouter;
-}
-}
-returni;
+if(str==null){
+return-1;
+}
+returnstartIndex<size?startIndex:size;
+if(startIndex<0){
+startIndex=newLine.length();
+}
+intendIndex=size-strLen;
+if(startIndex>endIndex){
+outer:for(inti=startIndex;i<=endIndex;i++){
+for(intj=0;j<strLen;j++){
+if(str.charAt(j)!=thisBuf[i+j]){
+continueouter;
+}
+returni;
+}
Following diff 0:
-startIndex=(startIndex<0?0:startIndex);
-if(str==null||startIndex>=size){
-return-1;
-}
-returnstartIndex;
-if(strLen>size){
-intlen=thisBuf.length-strLen;
-outer:for(inti=startIndex;i<len;i++){
-for(intj=0;j<strLen;j++){
-if(str.charAt(j)!=thisBuf[i+j]){
-continueouter;
-}
-}
-returni;
+if(str==null){
+return-1;
+}
+returnstartIndex<=size?startIndex:size;
+if(startIndex<0){
+startIndex=0;
+}
+intendIndex=size-strLen;
+if(startIndex>endIndex){
+outer:for(inti=startIndex;i<=endIndex;i++){
+for(intj=0;j<strLen;j++){
+if(str.charAt(j)!=thisBuf[i+j]){
+continueouter;
+}
+returni;
+}
Following diff 0:
-startIndex=(startIndex<0?0:startIndex);
-if(str==null||startIndex>=size){
-return-1;
-}
-returnstartIndex;
-if(strLen>size){
-intlen=thisBuf.length-strLen;
-outer:for(inti=startIndex;i<len;i++){
-for(intj=0;j<strLen;j++){
-if(str.charAt(j)!=thisBuf[i+j]){
-continueouter;
-}
-}
-returni;
+if(str==null){
+return-1;
+}
+returnstartIndex<size?startIndex:size;
+if(startIndex<0){
+startIndex=nullText.length();
+}
+intendIndex=size-strLen;
+if(startIndex>endIndex){
+outer:for(inti=startIndex;i<=endIndex;i++){
+for(intj=0;j<strLen;j++){
+if(str.charAt(j)!=thisBuf[i+j]){
+continueouter;
+}
+returni;
+}
Following diff 0:
-startIndex=(startIndex<0?0:startIndex);
-if(str==null||startIndex>=size){
-return-1;
-}
-returnstartIndex;
-}
-if(strLen>size){
-return-1;
-intlen=thisBuf.length-strLen;
-outer:for(inti=startIndex;i<len;i++){
-for(intj=0;j<strLen;j++){
-if(str.charAt(j)!=thisBuf[i+j]){
-continueouter;
-}
-}
-returni;
+if(str==null){
+return-1;
+}
+returnstartIndex<size?startIndex:size;
+if(startIndex<0){
+startIndex=0;
+}
+intendIndex=size-strLen;
+if(startIndex>=endIndex){
+return-1;
+}
+outer:for(inti=startIndex;i<=endIndex;i++){
+for(intj=0;j<strLen;j++){
+if(str.charAt(j)!=thisBuf[i+j]){
+continueouter;
+}
+returni;
+}
Following diff 0:
-startIndex=(startIndex<0?0:startIndex);
-if(str==null||startIndex>=size){
-return-1;
-}
-returnstartIndex;
-if(strLen>size){
-intlen=thisBuf.length-strLen;
-outer:for(inti=startIndex;i<len;i++){
-for(intj=0;j<strLen;j++){
-if(str.charAt(j)!=thisBuf[i+j]){
-continueouter;
-}
-}
-returni;
+if(str==null){
+return-1;
+}
+returnstartIndex<size?startIndex:size;
+if(startIndex<=0){
+startIndex=0;
+}
+intendIndex=size-strLen;
+if(startIndex>endIndex){
+outer:for(inti=startIndex;i<=endIndex;i++){
+for(intj=0;j<strLen;j++){
+if(str.charAt(j)!=thisBuf[i+j]){
+continueouter;
+}
+returni;
+}
Following diff 0:
-startIndex=(startIndex<0?0:startIndex);
-if(str==null||startIndex>=size){
-return-1;
-}
-returnstartIndex;
-if(strLen>size){
-intlen=thisBuf.length-strLen;
-outer:for(inti=startIndex;i<len;i++){
-for(intj=0;j<strLen;j++){
-if(str.charAt(j)!=thisBuf[i+j]){
-continueouter;
-}
-}
-returni;
+if(str==null){
+return-1;
+}
+returnstartIndex<size?startIndex:strLen;
+if(startIndex<0){
+startIndex=0;
+}
+intendIndex=size-strLen;
+if(startIndex>endIndex){
+outer:for(inti=startIndex;i<=endIndex;i++){
+for(intj=0;j<strLen;j++){
+if(str.charAt(j)!=thisBuf[i+j]){
+continueouter;
+}
+returni;
+}
Following diff 0:
-startIndex=(startIndex<0?0:startIndex);
-if(str==null||startIndex>=size){
-return-1;
-}
-returnstartIndex;
-if(strLen>size){
-intlen=thisBuf.length-strLen;
-outer:for(inti=startIndex;i<len;i++){
-for(intj=0;j<strLen;j++){
-if(str.charAt(j)!=thisBuf[i+j]){
-continueouter;
-}
-}
-returni;
+if(str==null){
+return-1;
+}
+returnstartIndex<size?startIndex:size;
+if(!(startIndex>0)){
+startIndex=0;
+}
+intendIndex=size-strLen;
+if(startIndex>endIndex){
+outer:for(inti=startIndex;i<=endIndex;i++){
+for(intj=0;j<strLen;j++){
+if(str.charAt(j)!=thisBuf[i+j]){
+continueouter;
+}
+returni;
+}
Following diff 0:
-startIndex=(startIndex<0?0:startIndex);
-if(str==null||startIndex>=size){
-return-1;
-}
-returnstartIndex;
-if(strLen>size){
-intlen=thisBuf.length-strLen;
-outer:for(inti=startIndex;i<len;i++){
-for(intj=0;j<strLen;j++){
-if(str.charAt(j)!=thisBuf[i+j]){
-continueouter;
-}
-}
-returni;
+if(str==null){
+return-1;
+}
+returnstartIndex<size?startIndex:CAPACITY;
+if(startIndex<0){
+startIndex=0;
+}
+intendIndex=size-strLen;
+if(startIndex>endIndex){
+outer:for(inti=startIndex;i<=endIndex;i++){
+for(intj=0;j<strLen;j++){
+if(str.charAt(j)!=thisBuf[i+j]){
+continueouter;
+}
+returni;
+}
Following diff 0:
-startIndex=(startIndex<0?0:startIndex);
-if(str==null||startIndex>=size){
-return-1;
-}
-returnstartIndex;
-if(strLen>size){
-intlen=thisBuf.length-strLen;
-outer:for(inti=startIndex;i<len;i++){
-for(intj=0;j<strLen;j++){
-if(str.charAt(j)!=thisBuf[i+j]){
-continueouter;
-}
-}
-returni;
+if(str==null){
+return-1;
+}
+returnstartIndex<size?startIndex:startIndex;
+if(startIndex<0){
+startIndex=0;
+}
+intendIndex=size-strLen;
+if(startIndex>endIndex){
+outer:for(inti=startIndex;i<=endIndex;i++){
+for(intj=0;j<strLen;j++){
+if(str.charAt(j)!=thisBuf[i+j]){
+continueouter;
+}
+returni;
+}
Following diff 0:
-startIndex=(startIndex<0?0:startIndex);
-if(str==null||startIndex>=size){
-return-1;
-}
-returnstartIndex;
-}
-if(strLen>size){
-return-1;
-intlen=thisBuf.length-strLen;
-outer:for(inti=startIndex;i<len;i++){
-for(intj=0;j<strLen;j++){
-if(str.charAt(j)!=thisBuf[i+j]){
-continueouter;
-}
-}
-returni;
+if(str==null){
+return-1;
+}
+returnstartIndex<size?startIndex:size;
+if(startIndex<0){
+startIndex=0;
+}
+intendIndex=size-strLen;
+if(startIndex>endIndex){
+return-1;
+}
+outer:for(inti=startIndex;i<=endIndex;i++){
+for(intj=0;j<strLen;j++){
+if(str.charAt(j)!=thisBuf[i+j]){
+continueouter;
+}
+returni;
+}
Following diff 0:
-startIndex=(startIndex<0?0:startIndex);
-if(str==null||startIndex>=size){
-return-1;
-}
-returnstartIndex;
-if(strLen>size){
-intlen=thisBuf.length-strLen;
-outer:for(inti=startIndex;i<len;i++){
-for(intj=0;j<strLen;j++){
-if(str.charAt(j)!=thisBuf[i+j]){
-continueouter;
-}
-}
-returni;
+if(str==null){
+return-1;
+}
+returnstartIndex<size?startIndex:size;
+if(startIndex<0){
+startIndex=str.length();
+}
+intendIndex=size-strLen;
+if(startIndex>endIndex){
+outer:for(inti=startIndex;i<=endIndex;i++){
+for(intj=0;j<strLen;j++){
+if(str.charAt(j)!=thisBuf[i+j]){
+continueouter;
+}
+returni;
+}
