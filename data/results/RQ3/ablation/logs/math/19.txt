Repair : math_19
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/0.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/0.java
Current actions:
INSERT:
28: final double[] tmp=new double[lB.length];
TO:
27

Following are 0th generated patches:
Validating 31 patches...
Current actions:
INSERT:
33:if(max/init.length>1.0E12){
throw new NumberIsTooLargeException(max/init.length,Double.MAX_VALUE,true);
}
TO:
27

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
34:throw new NumberIsTooLargeException(max/init.length,Double.MAX_VALUE,true);
TO:
27

Following are 2th generated patches:
Validating 145 patches...
Current actions:
INSERT:
29:for(int i=0;i<tmp.length;i++){
tmp[i]=uB[i]-lB[i];
}
TO:
27

Following are 3th generated patches:
Validating 200 patches...
Current actions:
INSERT:
28: final double[] tmp=new double[lB.length];
TO:
27

INSERT:
29:for(int i=0;i<tmp.length;i++){
tmp[i]=uB[i]-lB[i];
}
TO:
27

INSERT:
32: final double max=MathArrays.max(tmp);
TO:
27

INSERT:
33:if(max/init.length>1.0E12){
throw new NumberIsTooLargeException(max/init.length,Double.MAX_VALUE,true);
}
TO:
27

Following are 4th generated patches:
Validating 200 patches...
Tested:775 patches
Compile failed:652 patches
Compilation rate:0.15870967741935485

Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/1.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/1.java
Current actions:
INSERT:
28: final double max=Double.MAX_VALUE/2;
TO:
27

Following are 0th generated patches:
Validating 7 patches...
Current actions:
INSERT:
30:if(inputSigma[i]*init[i]>max){
throw new OutOfRangeException(inputSigma[i],0,max/init[i]);
}
TO:
27

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
28: final double max=Double.MAX_VALUE/2;
TO:
27

INSERT:
29:for(int i=0;i<init.length;i++){
if(inputSigma[i]*init[i]>max){
throw new OutOfRangeException(inputSigma[i],0,max/init[i]);
}
}
TO:
27

Following are 2th generated patches:
Validating 200 patches...
Current actions:
INSERT:
28: final double max=Double.MAX_VALUE/2;
TO:
27

Following are 3th generated patches:
Validating 63 patches...
Current actions:
INSERT:
29:for(int i=0;i<init.length;i++){
if(inputSigma[i]*init[i]>max){
throw new OutOfRangeException(inputSigma[i],0,max/init[i]);
}
}
TO:
27

Following are 4th generated patches:
Validating 200 patches...
Tested:1444 patches
Compile failed:1307 patches
Compilation rate:0.09487534626038781

Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/2.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/2.java
Current actions:
INSERT:
28:int n=init.length;
TO:
27

Following are 0th generated patches:
Validating 200 patches...
Current actions:
INSERT:
29:if(n!=2){
int max=Integer.MAX_VALUE;
for(int i=0;i<n;i++){
max=FastMath.min(max,FastMath.round(FastMath.abs(boundaries[1][i]-boundaries[0][i])));
}
int k=1;
while(k<n){
int j=k;
while(j<n&&init[j]==boundaries[0][j]){
j++;
}
if(j==n){
break;
}
k=j+1;
while(k<n&&init[k]==boundaries[1][k-1]){
k++;
}
if(k==n){
break;
}
int m=k-j;
if(m>max/(n-k)){
throw new OutOfRangeException(boundaries[1][k-1]-boundaries[0][j],0,max);
}
}
}
TO:
27

Following are 1th generated patches:
Validating 128 patches...
Current actions:
INSERT:
40:if(j==n){
break;
}
TO:
27

Following are 2th generated patches:
Validating 200 patches...
Current actions:
INSERT:
47:if(k==n){
break;
}
TO:
27

Following are 3th generated patches:
Validating 200 patches...
Current actions:
INSERT:
51:if(m>max/(n-k)){
throw new OutOfRangeException(boundaries[1][k-1]-boundaries[0][j],0,max);
}
TO:
27

Following are 4th generated patches:
Validating 200 patches...
Current actions:
INSERT:
31:for(int i=0;i<n;i++){
max=FastMath.min(max,FastMath.round(FastMath.abs(boundaries[1][i]-boundaries[0][i])));
}
TO:
27

INSERT:
34:int k=1;
TO:
27

INSERT:
35:while(k<n){
int j=k;
while(j<n&&init[j]==boundaries[0][j]){
j++;
}
if(j==n){
break;
}
k=j+1;
while(k<n&&init[k]==boundaries[1][k-1]){
k++;
}
if(k==n){
break;
}
int m=k-j;
if(m>max/(n-k)){
throw new OutOfRangeException(boundaries[1][k-1]-boundaries[0][j],0,max);
}
}
TO:
27

Tested:2359 patches
Compile failed:2213 patches
Compilation rate:0.06189063162356931

Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/3.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/3.java
Current actions:
INSERT:
28:if(boundaries[1][0]-boundaries[0][0]<Double.MAX_VALUE){
 final double scale=Double.MAX_VALUE/(boundaries[1][0]-boundaries[0][0]);
for(int i=0;i<init.length;i++){
inputSigma[i]*=scale;
}
}
TO:
27

Following are 0th generated patches:
Validating 20 patches...
Current actions:
INSERT:
28:if(boundaries[1][0]-boundaries[0][0]<Double.MAX_VALUE){
 final double scale=Double.MAX_VALUE/(boundaries[1][0]-boundaries[0][0]);
for(int i=0;i<init.length;i++){
inputSigma[i]*=scale;
}
}
TO:
27

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
28:if(boundaries[1][0]-boundaries[0][0]<Double.MAX_VALUE){
 final double scale=Double.MAX_VALUE/(boundaries[1][0]-boundaries[0][0]);
for(int i=0;i<init.length;i++){
inputSigma[i]*=scale;
}
}
TO:
27

INSERT:
35:throw new OutOfRangeException(Double.MAX_VALUE,Double.MAX_VALUE,Double.MAX_VALUE);
TO:
27

Following are 2th generated patches:
Validating 200 patches...
Current actions:
INSERT:
28:if(boundaries[1][0]-boundaries[0][0]<Double.MAX_VALUE){
 final double scale=Double.MAX_VALUE/(boundaries[1][0]-boundaries[0][0]);
for(int i=0;i<init.length;i++){
inputSigma[i]*=scale;
}
}
TO:
27

INSERT:
34:else{
throw new OutOfRangeException(Double.MAX_VALUE,Double.MAX_VALUE,Double.MAX_VALUE);
}
TO:
27

Following are 3th generated patches:
Validating 200 patches...
Tested:2979 patches
Compile failed:2816 patches
Compilation rate:0.054716347767707285
NNNNNNNNNNNNPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNPNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/4.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/4.java
Current actions:
INSERT:
28: final double[] normalized=encode(init);
TO:
27

Following are 0th generated patches:
Validating 7 patches...
Current actions:
INSERT:
30:if(Double.isInfinite(normalized[i])){
throw new MathUnsupportedOperationException();
}
TO:
27

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
28: final double[] normalized=encode(init);
TO:
27

INSERT:
29:for(int i=0;i<normalized.length;i++){
if(Double.isInfinite(normalized[i])){
throw new MathUnsupportedOperationException();
}
}
TO:
27

Following are 2th generated patches:
Validating 200 patches...
Current actions:
INSERT:
29:for(int i=0;i<normalized.length;i++){
if(Double.isInfinite(normalized[i])){
throw new MathUnsupportedOperationException();
}
}
TO:
27

Following are 3th generated patches:
Validating 200 patches...
Tested:3585 patches
Compile failed:3407 patches
Compilation rate:0.0496513249651325

Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/5.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/5.java
Tested:3585 patches
Compile failed:3407 patches
Compilation rate:0.0496513249651325

Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/6.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/6.java
Current actions:
INSERT:
28:if(boundaries!=null){
double norm=0;
for(int i=0;i<init.length;i++){
 final double delta=boundaries[1][i]-boundaries[0][i];
if(delta>0){
norm+=delta*init[i];
}
else{
norm+=delta*delta/4;
}
}
if(norm>Integer.MAX_VALUE){
throw new NumberIsTooLargeException(norm,Integer.MAX_VALUE,true);
}
}
TO:
27

Following are 0th generated patches:
Validating 78 patches...
Current actions:
INSERT:
28:if(boundaries!=null){
double norm=0;
for(int i=0;i<init.length;i++){
 final double delta=boundaries[1][i]-boundaries[0][i];
if(delta>0){
norm+=delta*init[i];
}
else{
norm+=delta*delta/4;
}
}
if(norm>Integer.MAX_VALUE){
throw new NumberIsTooLargeException(norm,Integer.MAX_VALUE,true);
}
}
TO:
27

Following are 1th generated patches:
Validating 124 patches...
Current actions:
INSERT:
32:if(delta>0){
norm+=delta*init[i];
}
TO:
27

Following are 2th generated patches:
Validating 200 patches...
Current actions:
INSERT:
39:if(norm>Integer.MAX_VALUE){
throw new NumberIsTooLargeException(norm,Integer.MAX_VALUE,true);
}
TO:
27

Following are 3th generated patches:
Validating 200 patches...
Current actions:
INSERT:
29:double norm=0;
TO:
27

Following are 4th generated patches:
Validating 1 patches...
Current actions:
INSERT:
30:for(int i=0;i<init.length;i++){
 final double delta=boundaries[1][i]-boundaries[0][i];
if(delta>0){
norm+=delta*init[i];
}
else{
norm+=delta*delta/4;
}
}
TO:
27

Tested:4188 patches
Compile failed:3958 patches
Compilation rate:0.054918815663801336
NNNNNNNNNNNNNNNNNPNNNNPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNPPNPPPPPPPPPPNNNNNNPPPPPPPPNPNNNNNPNNNNNNNNNNNNNPPNNNNNNPNNNNNNNNPPPNNNNNNPNNNPNPNNNNNNNNNPNNNNNNNNNNPNNNNNNPNPNNPNNPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/7.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/7.java
Current actions:
INSERT:
28:double norm=0;
TO:
27

Following are 0th generated patches:
Validating 46 patches...
Current actions:
INSERT:
34:if(sigma*10>FastMath.sqrt(Double.MAX_VALUE)){
throw new OutOfRangeException(sigma,0,Double.MAX_VALUE);
}
TO:
27

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
28:double norm=0;
TO:
27

INSERT:
34:if(sigma*10>FastMath.sqrt(Double.MAX_VALUE)){
throw new OutOfRangeException(sigma,0,Double.MAX_VALUE);
}
TO:
27

Following are 2th generated patches:
Validating 200 patches...
Current actions:
INSERT:
28:double norm=0;
TO:
27

INSERT:
29:for(int i=0;i<init.length;i++){
 final double tmp=init[i]-lB[i];
norm+=tmp*tmp;
}
TO:
27

INSERT:
33: final double sigma=FastMath.sqrt(norm);
TO:
27

INSERT:
34:if(sigma*10>FastMath.sqrt(Double.MAX_VALUE)){
throw new OutOfRangeException(sigma,0,Double.MAX_VALUE);
}
TO:
27

Following are 3th generated patches:
Validating 200 patches...
Tested:4832 patches
Compile failed:4597 patches
Compilation rate:0.0486341059602649

Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/8.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/8.java
Current actions:
UPDATE
FROM:
38:if(inputSigma[i]<0){
throw new NotPositiveException(inputSigma[i]);
}
TO:
38:if(inputSigma[i]<=0){
throw new NotStrictlyPositiveException(inputSigma[i]);
}

Following are 0th generated patches:
Validating 3 patches...
Current actions:
UPDATE
FROM:
38:if(inputSigma[i]<0){
throw new NotPositiveException(inputSigma[i]);
}
TO:
38:if(inputSigma[i]<=0){
throw new NotStrictlyPositiveException(inputSigma[i]);
}

Following are 1th generated patches:
Validating 74 patches...
Current actions:
UPDATE
FROM:
39:throw new NotPositiveException(inputSigma[i]);
TO:
39:throw new NotStrictlyPositiveException(inputSigma[i]);

Following are 2th generated patches:
Validating 146 patches...
Current actions:
UPDATE
FROM:
38:if(inputSigma[i]<0){
throw new NotPositiveException(inputSigma[i]);
}
TO:
38:if(inputSigma[i]<=0){
throw new NotStrictlyPositiveException(inputSigma[i]);
}

UPDATE
FROM:
39:throw new NotPositiveException(inputSigma[i]);
TO:
39:throw new NotStrictlyPositiveException(inputSigma[i]);

Following are 3th generated patches:
Validating 200 patches...
Tested:5255 patches
Compile failed:4749 patches
Compilation rate:0.09628924833491913
NNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPNNNPPPPPPPPNPPPPPPPPPPPPNPPPPPPPPPPNPPPPPPPPPPNPPPPPPNPPPPPPPPPNPPPPPPPPPPPPPPPNPPPPPPPPNPPPPPPPPPPPNPPPPPPPPPPNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPNPPPPPPPPPPPPPPP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/9.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/9.java
Current actions:
INSERT:
28:double maxAbs=0;
TO:
27

Following are 0th generated patches:
Validating 17 patches...
Current actions:
INSERT:
28:double maxAbs=0;
TO:
27

INSERT:
32:for(int i=0;i<init.length;i++){
inputSigma[i]=FastMath.max(inputSigma[i],10*maxAbs);
}
TO:
27

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
32:for(int i=0;i<init.length;i++){
inputSigma[i]=FastMath.max(inputSigma[i],10*maxAbs);
}
TO:
27

Following are 2th generated patches:
Validating 200 patches...
Current actions:
INSERT:
28:double maxAbs=0;
TO:
27

INSERT:
29:for(int i=0;i<init.length;i++){
maxAbs=FastMath.max(maxAbs,FastMath.abs(init[i]));
}
TO:
27

INSERT:
32:for(int i=0;i<init.length;i++){
inputSigma[i]=FastMath.max(inputSigma[i],10*maxAbs);
}
TO:
27

Following are 3th generated patches:
Validating 200 patches...
Current actions:
INSERT:
29:for(int i=0;i<init.length;i++){
maxAbs=FastMath.max(maxAbs,FastMath.abs(init[i]));
}
TO:
27

INSERT:
32:for(int i=0;i<init.length;i++){
inputSigma[i]=FastMath.max(inputSigma[i],10*maxAbs);
}
TO:
27

Following are 4th generated patches:
Validating 200 patches...
Tested:6070 patches
Compile failed:5563 patches
Compilation rate:0.08352553542009884

Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/10.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/10.java
Current actions:
Wrap:
MethodDeclaration
On:
[for(int i=0;i<init.length;i++){
if(inputSigma[i]<0){
throw new NotPositiveException(inputSigma[i]);
}
if(boundaries!=null){
if(inputSigma[i]>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(inputSigma[i],0,boundaries[1][i]-boundaries[0][i]);
}
}
}, else{
boundaries=null;
}, {
boundaries=null;
}, else{
boundaries=null;
}, {
boundaries=null;
}, boundaries=null;, boundaries=null;, boundaries=new double[2];, boundaries=new double[2];, boundaries[0]=lB;, boundaries[0]=lB;, boundaries[1]=uB;, boundaries[1]=uB;]
Following are 0th generated patches:
Validating 200 patches...
Current actions:
INSERT:
33:if(inputSigma==null){
this.inputSigma=new double[init.length];
for(int i=0;i<init.length;i++){
 final double normalizedStartPoint=this.normalizedStart[i];
 final double distanceToBoundary=boundaries[1][i]-normalizedStartPoint;
if(distanceToBoundary==0){
this.inputSigma[i]=0;
}
else{
this.inputSigma[i]=distanceToBoundary/100;
}
}
}
TO:
27

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
38:if(distanceToBoundary==0){
this.inputSigma[i]=0;
}
TO:
27

Following are 2th generated patches:
Validating 128 patches...
Current actions:
INSERT:
30:normalizedInit[i]=boundaries[0][i]+(boundaries[1][i]-boundaries[0][i])*init[i];
TO:
27

INSERT:
32:this.normalizedStart=normalizedInit;
TO:
27

DELETE:
Original line: 33if(inputSigma!=null){
if(inputSigma.length!=init.length){
throw new DimensionMismatchException(inputSigma.length,init.length);
}
for(int i=0;i<init.length;i++){
if(inputSigma[i]<0){
throw new NotPositiveException(inputSigma[i]);
}
if(boundaries!=null){
if(inputSigma[i]>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(inputSigma[i],0,boundaries[1][i]-boundaries[0][i]);
}
}
}
}

INSERT:
33:if(inputSigma==null){
this.inputSigma=new double[init.length];
for(int i=0;i<init.length;i++){
 final double normalizedStartPoint=this.normalizedStart[i];
 final double distanceToBoundary=boundaries[1][i]-normalizedStartPoint;
if(distanceToBoundary==0){
this.inputSigma[i]=0;
}
else{
this.inputSigma[i]=distanceToBoundary/100;
}
}
}
TO:
27

INSERT:
46:else{
this.inputSigma=inputSigma.clone();
}
TO:
27

Following are 3th generated patches:
Validating 200 patches...
Current actions:
INSERT:
2:private void checkParameters(){
 final double[] init=getStartPoint();
 final double[] lB=getLowerBound();
 final double[] uB=getUpperBound();
boolean hasFiniteBounds=false;
for(int i=0;i<lB.length;i++){
if(!Double.isInfinite(lB[i])||!Double.isInfinite(uB[i])){
hasFiniteBounds=true;
break;
}
}
boolean hasInfiniteBounds=false;
if(hasFiniteBounds){
for(int i=0;i<lB.length;i++){
if(Double.isInfinite(lB[i])||Double.isInfinite(uB[i])){
hasInfiniteBounds=true;
break;
}
}
if(hasInfiniteBounds){
throw new MathUnsupportedOperationException();
}
else{
boundaries=new double[2];
boundaries[0]=lB;
boundaries[1]=uB;
 final double[] normalizedInit=new double[init.length];
for(int i=0;i<init.length;i++){
normalizedInit[i]=boundaries[0][i]+(boundaries[1][i]-boundaries[0][i])*init[i];
}
this.normalizedStart=normalizedInit;
if(inputSigma==null){
this.inputSigma=new double[init.length];
for(int i=0;i<init.length;i++){
 final double normalizedStartPoint=this.normalizedStart[i];
 final double distanceToBoundary=boundaries[1][i]-normalizedStartPoint;
if(distanceToBoundary==0){
this.inputSigma[i]=0;
}
else{
this.inputSigma[i]=distanceToBoundary/100;
}
}
}
else{
this.inputSigma=inputSigma.clone();
}
}
}
else{
boundaries=null;
this.normalizedStart=init;
this.inputSigma=inputSigma.clone();
}
for(int i=0;i<init.length;i++){
if(inputSigma[i]<0){
throw new NotPositiveException(inputSigma[i]);
}
if(boundaries!=null){
if(inputSigma[i]>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(inputSigma[i],0,boundaries[1][i]-boundaries[0][i]);
}
}
}
}
TO:
1

DELETE:
Original line: 25boundaries=new double[2];

DELETE:
Original line: 26boundaries[0]=lB;

DELETE:
Original line: 27boundaries[1]=uB;

INSERT:
28: final double[] normalizedInit=new double[init.length];
TO:
27

INSERT:
29:for(int i=0;i<init.length;i++){
normalizedInit[i]=boundaries[0][i]+(boundaries[1][i]-boundaries[0][i])*init[i];
}
TO:
27

DELETE:
Original line: 30else{
boundaries=null;
}

INSERT:
32:this.normalizedStart=normalizedInit;
TO:
27

DELETE:
Original line: 33if(inputSigma!=null){
if(inputSigma.length!=init.length){
throw new DimensionMismatchException(inputSigma.length,init.length);
}
for(int i=0;i<init.length;i++){
if(inputSigma[i]<0){
throw new NotPositiveException(inputSigma[i]);
}
if(boundaries!=null){
if(inputSigma[i]>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(inputSigma[i],0,boundaries[1][i]-boundaries[0][i]);
}
}
}
}

INSERT:
33:if(inputSigma==null){
this.inputSigma=new double[init.length];
for(int i=0;i<init.length;i++){
 final double normalizedStartPoint=this.normalizedStart[i];
 final double distanceToBoundary=boundaries[1][i]-normalizedStartPoint;
if(distanceToBoundary==0){
this.inputSigma[i]=0;
}
else{
this.inputSigma[i]=distanceToBoundary/100;
}
}
}
TO:
27

INSERT:
46:else{
this.inputSigma=inputSigma.clone();
}
TO:
27

INSERT:
53:this.normalizedStart=init;
TO:
31

INSERT:
54:this.inputSigma=inputSigma.clone();
TO:
31

Following are 4th generated patches:
Validating 200 patches...
Tested:6976 patches
Compile failed:6443 patches
Compilation rate:0.07640481651376146
NNNNNNNNNNNNNNNNNNNNNNNNNNNPPNNNNNNPNNNNNNNNPPNNNNNNNNPNNNNNPNNNNPNPNNNNNNNNNNPNNNPNNNNNNNNNNNNNPPNNNNNNNNNNNNNNNNNNNPNNNNNNNPNPPNNPPPNNPNNNNNNNNNNNNNNPNNNNPNNNNNNNNNNNNNNPNNNNNNPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/11.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/11.java
Current actions:
INSERT:
28:int len=boundaries[0].length;
TO:
27

Following are 0th generated patches:
Validating 103 patches...
Current actions:
INSERT:
34:if(i!=j){
denominator*=(boundaries[1][j]-boundaries[0][j]);
}
TO:
27

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
38:if(denominator>numerator){
throw new MathIllegalArgumentException();
}
TO:
27

Following are 2th generated patches:
Validating 200 patches...
Current actions:
INSERT:
29:long numerator=1;
TO:
27

INSERT:
33:for(int j=0;j<len;++j){
if(i!=j){
denominator*=(boundaries[1][j]-boundaries[0][j]);
}
}
TO:
27

INSERT:
38:if(denominator>numerator){
throw new MathIllegalArgumentException();
}
TO:
27

Following are 3th generated patches:
Validating 200 patches...
Tested:7678 patches
Compile failed:7135 patches
Compilation rate:0.07072154206824693
NNNNNNNNNNNNNNNNNNNPNPPPNNNNNNNNPNNNNPNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNPNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/12.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/12.java
Current actions:
INSERT:
28:for(int i=0;i<init.length;i++){
if((boundaries[1][i]-boundaries[0][i])/init[i]>=MAX_NORM){
throw new MathIllegalArgumentException(LocalizedFormats.INITIAL_STEP_TOO_LARGE,boundaries[1][i]-boundaries[0][i],init[i]);
}
}
TO:
27

Following are 0th generated patches:
Validating 3 patches...
Current actions:
INSERT:
29:if((boundaries[1][i]-boundaries[0][i])/init[i]>=MAX_NORM){
throw new MathIllegalArgumentException(LocalizedFormats.INITIAL_STEP_TOO_LARGE,boundaries[1][i]-boundaries[0][i],init[i]);
}
TO:
27

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
30:throw new MathIllegalArgumentException(LocalizedFormats.INITIAL_STEP_TOO_LARGE,boundaries[1][i]-boundaries[0][i],init[i]);
TO:
27

Following are 2th generated patches:
Validating 200 patches...
Current actions:
INSERT:
28:for(int i=0;i<init.length;i++){
if((boundaries[1][i]-boundaries[0][i])/init[i]>=MAX_NORM){
throw new MathIllegalArgumentException(LocalizedFormats.INITIAL_STEP_TOO_LARGE,boundaries[1][i]-boundaries[0][i],init[i]);
}
}
TO:
27

Following are 3th generated patches:
Validating 200 patches...
Tested:8281 patches
Compile failed:7578 patches
Compilation rate:0.0848931288491728
NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPNPPPPPPPPPPNPPPPPPPPPPNPPPPPPPPPPPPPPPPNPPPPPPPPPPPNNPPPPPPPPPPPPPNPPPPPPNPPPNNPNNNNNNNNNNPPPPPPPPPPPPPNPPPPPPPPPNPNNNNNPNNNNPNNNPPPNPPPPPPPPPPNPPPPPPPPPPNPPPPPPPPPPPPPPPPNPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/13.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/13.java
Current actions:
DELETE:
Original line: 14if(hasFiniteBounds){
for(int i=0;i<lB.length;i++){
if(Double.isInfinite(lB[i])||Double.isInfinite(uB[i])){
hasInfiniteBounds=true;
break;
}
}
if(hasInfiniteBounds){
throw new MathUnsupportedOperationException();
}
else{
boundaries=new double[2];
boundaries[0]=lB;
boundaries[1]=uB;
}
}

Following are 0th generated patches:
Validating 200 patches...
Current actions:
INSERT:
20:if(hasFiniteBounds&&hasInfiniteBounds){
throw new MathUnsupportedOperationException();
}
TO:
23

DELETE:
Original line: 22throw new MathUnsupportedOperationException();

Following are 1th generated patches:
Validating 46 patches...
Current actions:
INSERT:
23:if(hasFiniteBounds){
boundaries=new double[2];
boundaries[0]=lB;
boundaries[1]=uB;
if(getSigma()!=null){
for(int i=0;i<getSigma().length;i++){
if(getSigma()[i]>getUpperBound()[i]-getLowerBound()[i]){
throw new OutOfRangeException(getSigma()[i],0,getUpperBound()[i]-getLowerBound()[i]);
}
}
}
}
TO:
23

Following are 2th generated patches:
Validating 12 patches...
Current actions:
INSERT:
27:if(getSigma()!=null){
for(int i=0;i<getSigma().length;i++){
if(getSigma()[i]>getUpperBound()[i]-getLowerBound()[i]){
throw new OutOfRangeException(getSigma()[i],0,getUpperBound()[i]-getLowerBound()[i]);
}
}
}
TO:
23

Following are 3th generated patches:
Validating 200 patches...
Current actions:
INSERT:
29:if(getSigma()[i]>getUpperBound()[i]-getLowerBound()[i]){
throw new OutOfRangeException(getSigma()[i],0,getUpperBound()[i]-getLowerBound()[i]);
}
TO:
23

Following are 4th generated patches:
Validating 200 patches...
Current actions:
DELETE:
Original line: 14if(hasFiniteBounds){
for(int i=0;i<lB.length;i++){
if(Double.isInfinite(lB[i])||Double.isInfinite(uB[i])){
hasInfiniteBounds=true;
break;
}
}
if(hasInfiniteBounds){
throw new MathUnsupportedOperationException();
}
else{
boundaries=new double[2];
boundaries[0]=lB;
boundaries[1]=uB;
}
}

INSERT:
23:if(hasFiniteBounds){
boundaries=new double[2];
boundaries[0]=lB;
boundaries[1]=uB;
if(getSigma()!=null){
for(int i=0;i<getSigma().length;i++){
if(getSigma()[i]>getUpperBound()[i]-getLowerBound()[i]){
throw new OutOfRangeException(getSigma()[i],0,getUpperBound()[i]-getLowerBound()[i]);
}
}
}
}
TO:
23

Tested:8765 patches
Compile failed:8013 patches
Compilation rate:0.08579577866514547
NNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/14.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/14.java
Current actions:
INSERT:
28:if(boundaries[0][0]>=boundaries[1][0]){
throw new NotFiniteNumberException();
}
TO:
27

Following are 0th generated patches:
Validating 74 patches...
Current actions:
INSERT:
28:if(boundaries[0][0]>=boundaries[1][0]){
throw new NotFiniteNumberException();
}
TO:
27

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
34:if(min>=max){
throw new NotFiniteNumberException();
}
TO:
27

Following are 2th generated patches:
Validating 200 patches...
Current actions:
INSERT:
34:if(min>=max){
throw new NotFiniteNumberException();
}
TO:
27

INSERT:
38:throw new NotFiniteNumberException();
TO:
27

Following are 4th generated patches:
Validating 200 patches...
Current actions:
INSERT:
28:if(boundaries[0][0]>=boundaries[1][0]){
throw new NotFiniteNumberException();
}
TO:
27

INSERT:
32: final double min=boundaries[0][i];
TO:
27

Tested:9426 patches
Compile failed:8493 patches
Compilation rate:0.09898154042011457

Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/15.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/15.java
Current actions:
INSERT:
28:if(Double.isInfinite(encode(uB)-encode(lB))){
throw new MathUnsupportedOperationException();
}
TO:
27

Following are 0th generated patches:
Validating 2 patches...
Current actions:
INSERT:
28:if(Double.isInfinite(encode(uB)-encode(lB))){
throw new MathUnsupportedOperationException();
}
TO:
27

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
29:throw new MathUnsupportedOperationException();
TO:
27

Following are 2th generated patches:
Validating 148 patches...
Tested:9776 patches
Compile failed:8720 patches
Compilation rate:0.10801963993453355
NPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPNNPPPPPPPPPNPNNNNNNNNNNNNPPPPPPPPPPNNNNPPPPPPPNPPPPPPPPPPPPPPPNPPPPPPPPPPNPPPPPPPPPPPPNPPPPPPPPPPPNPPPPPPPPPPPPPPPPNPPPPPPPPPPNPPPPPPPPPPP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/16.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/16.java
Current actions:
INSERT:
28:for(int i=0;i<boundaries[0].length;i++){
if(init[i]>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(init[i],boundaries[0][i],boundaries[1][i]);
}
}
TO:
27

Following are 0th generated patches:
Validating 3 patches...
Current actions:
INSERT:
29:if(init[i]>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(init[i],boundaries[0][i],boundaries[1][i]);
}
TO:
27

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
28:for(int i=0;i<boundaries[0].length;i++){
if(init[i]>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(init[i],boundaries[0][i],boundaries[1][i]);
}
}
TO:
27

Following are 2th generated patches:
Validating 200 patches...
Current actions:
INSERT:
30:throw new OutOfRangeException(init[i],boundaries[0][i],boundaries[1][i]);
TO:
27

Following are 3th generated patches:
Validating 145 patches...
Tested:10324 patches
Compile failed:8955 patches
Compilation rate:0.1326036419992251
NNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPPPPPPNPPPPPPPPPPPPPPPPPPPPNPPPPPPPPPPPPPPPPPPPPNPPPPPPPPPPPPPPPPPPPNPPPPPPPPPPPNPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPNPPPPPPPPPPPNPPPPPPPPPPPPPPPPPPPPPPPPPPNPPPPPPPPPPPPPPPPPPPPPPPPNNPPPPPPPPPPNPPPPPPPPPNPPPPPPPPPPPNPPPPPPPPPNPPPPPPPPPPPPPPPPPPPNPPNNPPPPPPPPNNNNNNNNNNNPNPPPPPPPPPPNPPPPPPPPPPNPPPPPPPPPPPPPPPPPPNPPPPPPPPPPPPPP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/17.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/17.java
Current actions:
INSERT:
28:for(int i=0;i<init.length;i++){
 final double sigma=inputSigma==null?1.0:inputSigma[i];
if(boundaries[1][i]-boundaries[0][i]<2*sigma){
throw new OutOfRangeException(sigma,0,boundaries[1][i]-boundaries[0][i]);
}
}
TO:
27

Following are 0th generated patches:
Validating 6 patches...
Current actions:
INSERT:
30:if(boundaries[1][i]-boundaries[0][i]<2*sigma){
throw new OutOfRangeException(sigma,0,boundaries[1][i]-boundaries[0][i]);
}
TO:
27

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
28:for(int i=0;i<init.length;i++){
 final double sigma=inputSigma==null?1.0:inputSigma[i];
if(boundaries[1][i]-boundaries[0][i]<2*sigma){
throw new OutOfRangeException(sigma,0,boundaries[1][i]-boundaries[0][i]);
}
}
TO:
27

Following are 2th generated patches:
Validating 200 patches...
Current actions:
INSERT:
29: final double sigma=inputSigma==null?1.0:inputSigma[i];
TO:
27

Following are 3th generated patches:
Validating 132 patches...
Current actions:
INSERT:
31:throw new OutOfRangeException(sigma,0,boundaries[1][i]-boundaries[0][i]);
TO:
27

Following are 4th generated patches:
Validating 145 patches...
Current actions:
INSERT:
29: final double sigma=inputSigma==null?1.0:inputSigma[i];
TO:
27

INSERT:
30:if(boundaries[1][i]-boundaries[0][i]<2*sigma){
throw new OutOfRangeException(sigma,0,boundaries[1][i]-boundaries[0][i]);
}
TO:
27

Tested:11007 patches
Compile failed:9494 patches
Compilation rate:0.13745798128463704

Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/18.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/18.java
Current actions:
INSERT:
28:for(int i=0;i<init.length;i++){
double sigma=inputSigma==null?1.0:inputSigma[i];
if(sigma>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(sigma,0,boundaries[1][i]-boundaries[0][i]);
}
}
TO:
27

Following are 0th generated patches:
Validating 27 patches...
Current actions:
INSERT:
30:if(sigma>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(sigma,0,boundaries[1][i]-boundaries[0][i]);
}
TO:
27

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
28:for(int i=0;i<init.length;i++){
double sigma=inputSigma==null?1.0:inputSigma[i];
if(sigma>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(sigma,0,boundaries[1][i]-boundaries[0][i]);
}
}
TO:
27

DELETE:
Original line: 43throw new OutOfRangeException(inputSigma[i],0,boundaries[1][i]-boundaries[0][i]);

Following are 2th generated patches:
Validating 200 patches...
Current actions:
INSERT:
30:if(sigma>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(sigma,0,boundaries[1][i]-boundaries[0][i]);
}
TO:
27

DELETE:
Original line: 43throw new OutOfRangeException(inputSigma[i],0,boundaries[1][i]-boundaries[0][i]);

Following are 3th generated patches:
Validating 200 patches...
Tested:11634 patches
Compile failed:10103 patches
Compilation rate:0.13159704314938972
NNNNNNNNNNNNNNNNNNNNPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNPNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/19.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/19.java
Current actions:
INSERT:
28:if(computeOptimalScale(init)>0){
throw new NoBracketingException();
}
TO:
27

Following are 0th generated patches:
Validating 2 patches...
Current actions:
INSERT:
28:if(computeOptimalScale(init)>0){
throw new NoBracketingException();
}
TO:
27

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
29:throw new NoBracketingException();
TO:
27

Following are 2th generated patches:
Validating 149 patches...
Tested:11985 patches
Compile failed:10332 patches
Compilation rate:0.1379224030037547
NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPNPPPPPPPPPPNNNNNNPNNNNNNNPPPPPPPPPPNNNNPPPPPPPPNPPPPPPPPPPPPPPNPPPPPPPPPPNPPPPPPPPPPPPNPPPPPPPPPPPPNPPPPPPPPPPPPPPNPPPPPPPPPPPNPPPPPPPPPPP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/20.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/20.java
Current actions:
INSERT:
28:if(FastMath.abs(init[0])>FastMath.abs(boundaries[0][0])){
throw new OutOfRangeException(init[0],boundaries[0][0],boundaries[1][0]);
}
TO:
27

Following are 0th generated patches:
Validating 8 patches...
Current actions:
INSERT:
28:if(FastMath.abs(init[0])>FastMath.abs(boundaries[0][0])){
throw new OutOfRangeException(init[0],boundaries[0][0],boundaries[1][0]);
}
TO:
27

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
31:if(FastMath.abs(init[1])>FastMath.abs(boundaries[0][1])){
throw new OutOfRangeException(init[1],boundaries[0][1],boundaries[1][1]);
}
TO:
27

Following are 2th generated patches:
Validating 200 patches...
Current actions:
INSERT:
28:if(FastMath.abs(init[0])>FastMath.abs(boundaries[0][0])){
throw new OutOfRangeException(init[0],boundaries[0][0],boundaries[1][0]);
}
TO:
27

INSERT:
31:if(FastMath.abs(init[1])>FastMath.abs(boundaries[0][1])){
throw new OutOfRangeException(init[1],boundaries[0][1],boundaries[1][1]);
}
TO:
27

Following are 3th generated patches:
Validating 200 patches...
Tested:12593 patches
Compile failed:10938 patches
Compilation rate:0.13142221869292464

Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/21.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/21.java
Current actions:
INSERT:
28:double sum=0;
TO:
27

Following are 0th generated patches:
Validating 17 patches...
Current actions:
INSERT:
32:if(sum>Double.MAX_VALUE){
throw new MathArithmeticException();
}
TO:
27

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
33:throw new MathArithmeticException();
TO:
27

Following are 2th generated patches:
Validating 149 patches...
Current actions:
INSERT:
28:double sum=0;
TO:
27

INSERT:
32:if(sum>Double.MAX_VALUE){
throw new MathArithmeticException();
}
TO:
27

Following are 3th generated patches:
Validating 200 patches...
Current actions:
INSERT:
30:sum+=(uB[i]-lB[i])*(uB[i]-lB[i]);
TO:
27

Following are 4th generated patches:
Validating 200 patches...
Current actions:
INSERT:
29:for(int i=0;i<init.length;i++){
sum+=(uB[i]-lB[i])*(uB[i]-lB[i]);
}
TO:
27

INSERT:
32:if(sum>Double.MAX_VALUE){
throw new MathArithmeticException();
}
TO:
27

Tested:13358 patches
Compile failed:11399 patches
Compilation rate:0.14665369067225634
NNNNNNNNNNNNNNNPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPNPPPPPPPPPPNNNNNNNPNNNNNNPPPPPPPPPPNNNNPPPPPPPPNPPPPPPPPPPPPPNPPPPPPPPPPPNPPPPPPPPPPPPPNPPPPPPPPPPPNPPPPPPPPPPPPPNPPPPPPPPPPPPNPPPPPPPPPPPNPPPPPPPPPPPPPPPPPPPPNNPPPPPPPPPPPPPPPPPPPPNNPPPPPPPPPPPPPPPPPPPPPPPPPPPNNPPPPPPPPPPPPPPPPPPPPPPPNNPPPPPPNPPPPNNPPPPNPPPPPPPPPPPPPPPPNPNPPPPPPPPPPPPPPPPPPPPPPPPPNPNPPPPPPPPPPPPPPPPPPPPPPNPNPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/22.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/22.java
Current actions:
INSERT:
28:if(Double.isInfinite(encode(uB))||Double.isInfinite(encode(lB))){
throw new OutOfRangeException(lB,uB);
}
TO:
27

Following are 0th generated patches:
Validating 2 patches...
Current actions:
INSERT:
28:if(Double.isInfinite(encode(uB))||Double.isInfinite(encode(lB))){
throw new OutOfRangeException(lB,uB);
}
TO:
27

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
29:throw new OutOfRangeException(lB,uB);
TO:
27

Following are 2th generated patches:
Validating 146 patches...
Tested:13706 patches
Compile failed:11625 patches
Compilation rate:0.15183131475266307
NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPNPPPPPPPPPNPNNNNNNNPNNNNNPPPPPPPPPPNPPPPPPPPPPNPPPPPPPPPPNPPPPPPPPPPNPPPPPPPPPPPPPPNPPPPPPPPPPPPPPNPPPPPPPPPPPNPPPPPPPPPPPNPPPPPPPPPPPP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/23.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/23.java
Current actions:
INSERT:
28:if(inputSigma!=null){
for(int i=0;i<inputSigma.length;i++){
if(inputSigma[i]<0){
throw new NotPositiveException(inputSigma[i]);
}
if(inputSigma[i]>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(inputSigma[i],0,boundaries[1][i]-boundaries[0][i]);
}
}
}
TO:
27

Following are 0th generated patches:
Validating 35 patches...
Current actions:
INSERT:
28:if(inputSigma!=null){
for(int i=0;i<inputSigma.length;i++){
if(inputSigma[i]<0){
throw new NotPositiveException(inputSigma[i]);
}
if(inputSigma[i]>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(inputSigma[i],0,boundaries[1][i]-boundaries[0][i]);
}
}
}
TO:
27

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
28:if(inputSigma!=null){
for(int i=0;i<inputSigma.length;i++){
if(inputSigma[i]<0){
throw new NotPositiveException(inputSigma[i]);
}
if(inputSigma[i]>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(inputSigma[i],0,boundaries[1][i]-boundaries[0][i]);
}
}
}
TO:
27

DELETE:
Original line: 41if(boundaries!=null){
if(inputSigma[i]>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(inputSigma[i],0,boundaries[1][i]-boundaries[0][i]);
}
}

Following are 2th generated patches:
Validating 200 patches...
Current actions:
DELETE:
Original line: 37for(int i=0;i<init.length;i++){
if(inputSigma[i]<0){
throw new NotPositiveException(inputSigma[i]);
}
if(boundaries!=null){
if(inputSigma[i]>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(inputSigma[i],0,boundaries[1][i]-boundaries[0][i]);
}
}
}

Following are 3th generated patches:
Validating 1 patches...
Current actions:
INSERT:
29:for(int i=0;i<inputSigma.length;i++){
if(inputSigma[i]<0){
throw new NotPositiveException(inputSigma[i]);
}
if(inputSigma[i]>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(inputSigma[i],0,boundaries[1][i]-boundaries[0][i]);
}
}
TO:
27

DELETE:
Original line: 33if(inputSigma!=null){
if(inputSigma.length!=init.length){
throw new DimensionMismatchException(inputSigma.length,init.length);
}
for(int i=0;i<init.length;i++){
if(inputSigma[i]<0){
throw new NotPositiveException(inputSigma[i]);
}
if(boundaries!=null){
if(inputSigma[i]>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(inputSigma[i],0,boundaries[1][i]-boundaries[0][i]);
}
}
}
}

Following are 4th generated patches:
Validating 2 patches...
Current actions:
DELETE:
Original line: 35throw new DimensionMismatchException(inputSigma.length,init.length);

DELETE:
Original line: 41if(boundaries!=null){
if(inputSigma[i]>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(inputSigma[i],0,boundaries[1][i]-boundaries[0][i]);
}
}

Tested:14128 patches
Compile failed:11981 patches
Compilation rate:0.15196772366930916
PPPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNPNNPNNPPPPPNNNPNPPNNNNNNNNNPNNPNNNNNNNNNNNPNNNNNNNNNNNNNNPNNNNPNNNNNNNNNNNNPNNNNNNNNPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNPNNPPPPNPNNPPNPNNNNNNNNNPNNNNNNPNNNNNPNNNNNNNNNNNNNNPNNNNNNNPNNNNNNNNNNNNNPNNNNNNPPPP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/24.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/24.java
Current actions:
Wrap:
ForStatement
On:
[if(inputSigma[i]>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(inputSigma[i],0,boundaries[1][i]-boundaries[0][i]);
}]
Following are 0th generated patches:
Validating 3 patches...
Current actions:
DELETE:
Original line: 41if(boundaries!=null){
if(inputSigma[i]>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(inputSigma[i],0,boundaries[1][i]-boundaries[0][i]);
}
}

Following are 1th generated patches:
Validating 1 patches...
Current actions:
INSERT:
28:for(int i=0;i<init.length;i++){
if(inputSigma[i]>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(inputSigma[i],0,boundaries[1][i]-boundaries[0][i]);
}
}
TO:
27

DELETE:
Original line: 42if(inputSigma[i]>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(inputSigma[i],0,boundaries[1][i]-boundaries[0][i]);
}

Following are 2th generated patches:
Validating 1 patches...
Current actions:
INSERT:
28:for(int i=0;i<init.length;i++){
if(inputSigma[i]>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(inputSigma[i],0,boundaries[1][i]-boundaries[0][i]);
}
}
TO:
27

DELETE:
Original line: 41if(boundaries!=null){
if(inputSigma[i]>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(inputSigma[i],0,boundaries[1][i]-boundaries[0][i]);
}
}

Following are 3th generated patches:
Validating 2 patches...
Tested:14133 patches
Compile failed:11981 patches
Compilation rate:0.15226774216373026
PPPPP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/25.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/25.java
Current actions:
INSERT:
28:if(inputSigma!=null){
if(inputSigma.length!=init.length){
throw new DimensionMismatchException(inputSigma.length,init.length);
}
for(int i=0;i<init.length;i++){
if(inputSigma[i]<0){
throw new NotPositiveException(inputSigma[i]);
}
if(inputSigma[i]>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(inputSigma[i],0,boundaries[1][i]-boundaries[0][i]);
}
}
}
TO:
27

Following are 0th generated patches:
Validating 28 patches...
Current actions:
INSERT:
28:if(inputSigma!=null){
if(inputSigma.length!=init.length){
throw new DimensionMismatchException(inputSigma.length,init.length);
}
for(int i=0;i<init.length;i++){
if(inputSigma[i]<0){
throw new NotPositiveException(inputSigma[i]);
}
if(inputSigma[i]>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(inputSigma[i],0,boundaries[1][i]-boundaries[0][i]);
}
}
}
TO:
27

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
32:for(int i=0;i<init.length;i++){
if(inputSigma[i]<0){
throw new NotPositiveException(inputSigma[i]);
}
if(inputSigma[i]>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(inputSigma[i],0,boundaries[1][i]-boundaries[0][i]);
}
}
TO:
27

DELETE:
Original line: 38if(inputSigma[i]<0){
throw new NotPositiveException(inputSigma[i]);
}

DELETE:
Original line: 42if(inputSigma[i]>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(inputSigma[i],0,boundaries[1][i]-boundaries[0][i]);
}

Following are 2th generated patches:
Validating 1 patches...
Current actions:
DELETE:
Original line: 33if(inputSigma!=null){
if(inputSigma.length!=init.length){
throw new DimensionMismatchException(inputSigma.length,init.length);
}
for(int i=0;i<init.length;i++){
if(inputSigma[i]<0){
throw new NotPositiveException(inputSigma[i]);
}
if(boundaries!=null){
if(inputSigma[i]>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(inputSigma[i],0,boundaries[1][i]-boundaries[0][i]);
}
}
}
}

Following are 3th generated patches:
Validating 1 patches...
Current actions:
INSERT:
28:if(inputSigma!=null){
if(inputSigma.length!=init.length){
throw new DimensionMismatchException(inputSigma.length,init.length);
}
for(int i=0;i<init.length;i++){
if(inputSigma[i]<0){
throw new NotPositiveException(inputSigma[i]);
}
if(inputSigma[i]>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(inputSigma[i],0,boundaries[1][i]-boundaries[0][i]);
}
}
}
TO:
27

DELETE:
Original line: 33if(inputSigma!=null){
if(inputSigma.length!=init.length){
throw new DimensionMismatchException(inputSigma.length,init.length);
}
for(int i=0;i<init.length;i++){
if(inputSigma[i]<0){
throw new NotPositiveException(inputSigma[i]);
}
if(boundaries!=null){
if(inputSigma[i]>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(inputSigma[i],0,boundaries[1][i]-boundaries[0][i]);
}
}
}
}

Following are 4th generated patches:
Validating 200 patches...
Current actions:
INSERT:
28:if(inputSigma!=null){
if(inputSigma.length!=init.length){
throw new DimensionMismatchException(inputSigma.length,init.length);
}
for(int i=0;i<init.length;i++){
if(inputSigma[i]<0){
throw new NotPositiveException(inputSigma[i]);
}
if(inputSigma[i]>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(inputSigma[i],0,boundaries[1][i]-boundaries[0][i]);
}
}
}
TO:
27

DELETE:
Original line: 33if(inputSigma!=null){
if(inputSigma.length!=init.length){
throw new DimensionMismatchException(inputSigma.length,init.length);
}
for(int i=0;i<init.length;i++){
if(inputSigma[i]<0){
throw new NotPositiveException(inputSigma[i]);
}
if(boundaries!=null){
if(inputSigma[i]>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(inputSigma[i],0,boundaries[1][i]-boundaries[0][i]);
}
}
}
}

Tested:14543 patches
Compile failed:12013 patches
Compilation rate:0.17396685690710306
PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPNNNNPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPNNPNNPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPNNNNPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPNPPPPPPNPPNPNPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPNNNNPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPNNNPNPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPNNNNPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPNPPPPNPNNPPPPPPP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/26.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/26.java
Current actions:
UPDATE
FROM:
38:if(inputSigma[i]<0){
throw new NotPositiveException(inputSigma[i]);
}
TO:
38:if(inputSigma[i]<=0){
throw new NotPositiveException(inputSigma[i]);
}

Following are 0th generated patches:
Validating 1 patches...
Current actions:
UPDATE
FROM:
38:if(inputSigma[i]<0){
throw new NotPositiveException(inputSigma[i]);
}
TO:
38:if(inputSigma[i]<=0){
throw new NotPositiveException(inputSigma[i]);
}

Following are 1th generated patches:
Validating 74 patches...
Tested:14618 patches
Compile failed:12070 patches
Compilation rate:0.17430565056779312
PNNNNNNPPPPPPNPNPNPNNNNNNNNPNNNNNNNPPPNNNNNNPNNNNNNNNNNNNNPNNNNNNNNNNNNNNPP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/27.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/27.java
Current actions:
INSERT:
28: final double[] sigma=getSigma();
TO:
27

Following are 0th generated patches:
Validating 181 patches...
Current actions:
INSERT:
30:if(sigma[i]>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(sigma[i],0,boundaries[1][i]-boundaries[0][i]);
}
TO:
27

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
28: final double[] sigma=getSigma();
TO:
27

INSERT:
30:if(sigma[i]>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(sigma[i],0,boundaries[1][i]-boundaries[0][i]);
}
TO:
27

DELETE:
Original line: 33if(inputSigma!=null){
if(inputSigma.length!=init.length){
throw new DimensionMismatchException(inputSigma.length,init.length);
}
for(int i=0;i<init.length;i++){
if(inputSigma[i]<0){
throw new NotPositiveException(inputSigma[i]);
}
if(boundaries!=null){
if(inputSigma[i]>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(inputSigma[i],0,boundaries[1][i]-boundaries[0][i]);
}
}
}
}

Following are 2th generated patches:
Validating 200 patches...
Current actions:
INSERT:
29:for(int i=0;i<sigma.length;i++){
if(sigma[i]>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(sigma[i],0,boundaries[1][i]-boundaries[0][i]);
}
}
TO:
27

DELETE:
Original line: 33if(inputSigma!=null){
if(inputSigma.length!=init.length){
throw new DimensionMismatchException(inputSigma.length,init.length);
}
for(int i=0;i<init.length;i++){
if(inputSigma[i]<0){
throw new NotPositiveException(inputSigma[i]);
}
if(boundaries!=null){
if(inputSigma[i]>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(inputSigma[i],0,boundaries[1][i]-boundaries[0][i]);
}
}
}
}

Following are 3th generated patches:
Validating 200 patches...
Tested:15398 patches
Compile failed:12811 patches
Compilation rate:0.16800883231588518

Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/28.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/28.java
Current actions:
INSERT:
28:if(Double.isInfinite(getSigma(init))){
throw new OutOfRangeException(getSigma(init),0,Double.POSITIVE_INFINITY);
}
TO:
27

Following are 0th generated patches:
Validating 2 patches...
Current actions:
INSERT:
28:if(Double.isInfinite(getSigma(init))){
throw new OutOfRangeException(getSigma(init),0,Double.POSITIVE_INFINITY);
}
TO:
27

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
29:throw new OutOfRangeException(getSigma(init),0,Double.POSITIVE_INFINITY);
TO:
27

Following are 2th generated patches:
Validating 145 patches...
Tested:15745 patches
Compile failed:13037 patches
Compilation rate:0.17199110828834552
NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPNPPPPPPPPPNPNNNNNNNNNNNPNPPPPPPPPPPNPPPPPPPPPNPPPPPPPPPPPNPPPPPPPPPPPPNPPPPPPPPPPNPPPPPPPPPPPPPPPNPPPPPPPPPPPPPNPPPPPPPPPPPNPPPPPPPPPP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/29.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/29.java
Current actions:
INSERT:
28:if(Double.isInfinite(encode(init))){
throw new OutOfRangeException(init[0],boundaries[0][0],boundaries[1][0]);
}
TO:
27

Following are 0th generated patches:
Validating 2 patches...
Current actions:
INSERT:
28:if(Double.isInfinite(encode(init))){
throw new OutOfRangeException(init[0],boundaries[0][0],boundaries[1][0]);
}
TO:
27

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
29:throw new OutOfRangeException(init[0],boundaries[0][0],boundaries[1][0]);
TO:
27

Following are 2th generated patches:
Validating 145 patches...
Tested:16092 patches
Compile failed:13261 patches
Compilation rate:0.17592592592592593
NPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPNNPPPPPPPPPPNNNNNNNNNNNNNPPPPPPPPPPNPPPPPPPPPNPPPPPPPPPPPNPPPPPPPPPPNPPPPPPPPPPPPPPNPPPPPPPPPPPPPNPPPPPPPPPPPPNPPPPPPPPPPPPPNPPPPPPPPPP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/30.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/30.java
Current actions:
INSERT:
28:for(int i=0;i<init.length;i++){
if(inputSigma==null){
normalization[i]=1.0/(uB[i]-lB[i]);
}
else{
if(inputSigma[i]>(uB[i]-lB[i])){
throw new OutOfRangeException(inputSigma[i],0,uB[i]-lB[i]);
}
normalization[i]=1.0/inputSigma[i];
}
}
TO:
27

Following are 0th generated patches:
Validating 200 patches...
Current actions:
INSERT:
29:if(inputSigma==null){
normalization[i]=1.0/(uB[i]-lB[i]);
}
TO:
27

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
33:if(inputSigma[i]>(uB[i]-lB[i])){
throw new OutOfRangeException(inputSigma[i],0,uB[i]-lB[i]);
}
TO:
30

Following are 2th generated patches:
Validating 200 patches...
Current actions:
INSERT:
28:for(int i=0;i<init.length;i++){
if(inputSigma==null){
normalization[i]=1.0/(uB[i]-lB[i]);
}
else{
if(inputSigma[i]>(uB[i]-lB[i])){
throw new OutOfRangeException(inputSigma[i],0,uB[i]-lB[i]);
}
normalization[i]=1.0/inputSigma[i];
}
}
TO:
27

DELETE:
Original line: 31boundaries=null;

DELETE:
Original line: 33if(inputSigma!=null){
if(inputSigma.length!=init.length){
throw new DimensionMismatchException(inputSigma.length,init.length);
}
for(int i=0;i<init.length;i++){
if(inputSigma[i]<0){
throw new NotPositiveException(inputSigma[i]);
}
if(boundaries!=null){
if(inputSigma[i]>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(inputSigma[i],0,boundaries[1][i]-boundaries[0][i]);
}
}
}
}

INSERT:
41:else{
boundaries=null;
}
TO:
47

Following are 3th generated patches:
Validating 200 patches...
Current actions:
INSERT:
29:if(inputSigma==null){
normalization[i]=1.0/(uB[i]-lB[i]);
}
TO:
27

DELETE:
Original line: 31boundaries=null;

DELETE:
Original line: 33if(inputSigma!=null){
if(inputSigma.length!=init.length){
throw new DimensionMismatchException(inputSigma.length,init.length);
}
for(int i=0;i<init.length;i++){
if(inputSigma[i]<0){
throw new NotPositiveException(inputSigma[i]);
}
if(boundaries!=null){
if(inputSigma[i]>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(inputSigma[i],0,boundaries[1][i]-boundaries[0][i]);
}
}
}
}

INSERT:
33:if(inputSigma[i]>(uB[i]-lB[i])){
throw new OutOfRangeException(inputSigma[i],0,uB[i]-lB[i]);
}
TO:
30

INSERT:
36:normalization[i]=1.0/inputSigma[i];
TO:
30

INSERT:
41:else{
boundaries=null;
}
TO:
47

Following are 4th generated patches:
Validating 200 patches...
Tested:17056 patches
Compile failed:14225 patches
Compilation rate:0.16598264540337712

Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/31.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/31.java
Current actions:
INSERT:
28:if(inputSigma!=null){
for(int i=0;i<init.length;i++){
if(inputSigma[i]>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(inputSigma[i],0,boundaries[1][i]-boundaries[0][i]);
}
}
}
TO:
27

Following are 0th generated patches:
Validating 65 patches...
Current actions:
INSERT:
28:if(inputSigma!=null){
for(int i=0;i<init.length;i++){
if(inputSigma[i]>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(inputSigma[i],0,boundaries[1][i]-boundaries[0][i]);
}
}
}
TO:
27

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
28:if(inputSigma!=null){
for(int i=0;i<init.length;i++){
if(inputSigma[i]>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(inputSigma[i],0,boundaries[1][i]-boundaries[0][i]);
}
}
}
TO:
27

DELETE:
Original line: 33if(inputSigma!=null){
if(inputSigma.length!=init.length){
throw new DimensionMismatchException(inputSigma.length,init.length);
}
for(int i=0;i<init.length;i++){
if(inputSigma[i]<0){
throw new NotPositiveException(inputSigma[i]);
}
if(boundaries!=null){
if(inputSigma[i]>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(inputSigma[i],0,boundaries[1][i]-boundaries[0][i]);
}
}
}
}

Following are 2th generated patches:
Validating 200 patches...
Current actions:
DELETE:
Original line: 39throw new NotPositiveException(inputSigma[i]);

Following are 3th generated patches:
Validating 1 patches...
Current actions:
DELETE:
Original line: 35throw new DimensionMismatchException(inputSigma.length,init.length);

Following are 4th generated patches:
Validating 1 patches...
Current actions:
INSERT:
28:if(inputSigma!=null){
for(int i=0;i<init.length;i++){
if(inputSigma[i]>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(inputSigma[i],0,boundaries[1][i]-boundaries[0][i]);
}
}
}
TO:
27

DELETE:
Original line: 35throw new DimensionMismatchException(inputSigma.length,init.length);

DELETE:
Original line: 37for(int i=0;i<init.length;i++){
if(inputSigma[i]<0){
throw new NotPositiveException(inputSigma[i]);
}
if(boundaries!=null){
if(inputSigma[i]>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(inputSigma[i],0,boundaries[1][i]-boundaries[0][i]);
}
}
}

Tested:17498 patches
Compile failed:14581 patches
Compilation rate:0.16670476625900102
PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNPNNPNNPPPPPNNNPPNNNPNNNNNNNNPNNNNPNNNNNNPNNNNNNNNNNNPNNNNNNNNNNNNNNNPNNNNNNNNNNPNNNNPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNPNNPPPNNPNPPPPNNNNNNNNNNNPPNNNNNNNNNNNNNPNNNNNNNNNNNPNNNNNNNNPNNNNNNNNNNNPNNNNNNNPPPP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/32.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/32.java
Current actions:
DELETE:
Original line: 3 final double[] init=getStartPoint();

Following are 0th generated patches:
Validating 7 patches...
Current actions:
DELETE:
Original line: 3 final double[] init=getStartPoint();

DELETE:
Original line: 4 final double[] lB=getLowerBound();

DELETE:
Original line: 5 final double[] uB=getUpperBound();

Following are 1th generated patches:
Validating 3 patches...
Current actions:
DELETE:
Original line: 3 final double[] init=getStartPoint();

DELETE:
Original line: 4 final double[] lB=getLowerBound();

Following are 2th generated patches:
Validating 2 patches...
Current actions:
DELETE:
Original line: 4 final double[] lB=getLowerBound();

Following are 3th generated patches:
Validating 1 patches...
Current actions:
DELETE:
Original line: 3 final double[] init=getStartPoint();

Following are 4th generated patches:
Validating 1 patches...
Current actions:
DELETE:
Original line: 5 final double[] uB=getUpperBound();

Tested:17509 patches
Compile failed:14592 patches
Compilation rate:0.1666000342680907
NNNNNNNNNNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/33.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/33.java
Current actions:
INSERT:
28:double max=0;
TO:
27

Following are 0th generated patches:
Validating 59 patches...
Current actions:
INSERT:
32:if(inputSigma!=null){
for(int i=0;i<init.length;i++){
max=Math.max(max,inputSigma[i]);
}
}
TO:
27

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
37:if(max>Double.POSITIVE_INFINITY/2){
throw new OutOfRangeException(max,0,Double.POSITIVE_INFINITY);
}
TO:
27

Following are 2th generated patches:
Validating 200 patches...
Current actions:
INSERT:
28:double max=0;
TO:
27

INSERT:
32:if(inputSigma!=null){
for(int i=0;i<init.length;i++){
max=Math.max(max,inputSigma[i]);
}
}
TO:
27

INSERT:
38:throw new OutOfRangeException(max,0,Double.POSITIVE_INFINITY);
TO:
27

Following are 3th generated patches:
Validating 200 patches...
Current actions:
INSERT:
28:double max=0;
TO:
27

INSERT:
37:if(max>Double.POSITIVE_INFINITY/2){
throw new OutOfRangeException(max,0,Double.POSITIVE_INFINITY);
}
TO:
27

Following are 4th generated patches:
Validating 200 patches...
Tested:18366 patches
Compile failed:15230 patches
Compilation rate:0.17075029946640533

Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/34.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/34.java
Current actions:
INSERT:
28: final double sigmaMax=FastMath.max(inputSigma);
TO:
27

Following are 0th generated patches:
Validating 11 patches...
Current actions:
INSERT:
30:if(sigmaMax>initMax){
throw new OutOfRangeException(sigmaMax,0,initMax);
}
TO:
27

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
28: final double sigmaMax=FastMath.max(inputSigma);
TO:
27

INSERT:
29: final double initMax=FastMath.max(init);
TO:
27

INSERT:
30:if(sigmaMax>initMax){
throw new OutOfRangeException(sigmaMax,0,initMax);
}
TO:
27

Following are 2th generated patches:
Validating 200 patches...
Current actions:
INSERT:
28: final double sigmaMax=FastMath.max(inputSigma);
TO:
27

INSERT:
31:throw new OutOfRangeException(sigmaMax,0,initMax);
TO:
27

Following are 3th generated patches:
Validating 176 patches...
Current actions:
INSERT:
29: final double initMax=FastMath.max(init);
TO:
27

Following are 4th generated patches:
Validating 31 patches...
Current actions:
INSERT:
29: final double initMax=FastMath.max(init);
TO:
27

INSERT:
30:if(sigmaMax>initMax){
throw new OutOfRangeException(sigmaMax,0,initMax);
}
TO:
27

Tested:18981 patches
Compile failed:15815 patches
Compilation rate:0.1667983773246931

Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/35.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/35.java
Current actions:
INSERT:
28:if(isNormalized()){
for(int i=0;i<init.length;i++){
if(inputSigma[i]>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(inputSigma[i],0,boundaries[1][i]-boundaries[0][i]);
}
}
}
TO:
27

Following are 0th generated patches:
Validating 7 patches...
Current actions:
INSERT:
28:if(isNormalized()){
for(int i=0;i<init.length;i++){
if(inputSigma[i]>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(inputSigma[i],0,boundaries[1][i]-boundaries[0][i]);
}
}
}
TO:
27

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
28:if(isNormalized()){
for(int i=0;i<init.length;i++){
if(inputSigma[i]>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(inputSigma[i],0,boundaries[1][i]-boundaries[0][i]);
}
}
}
TO:
27

DELETE:
Original line: 41if(boundaries!=null){
if(inputSigma[i]>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(inputSigma[i],0,boundaries[1][i]-boundaries[0][i]);
}
}

Following are 2th generated patches:
Validating 200 patches...
Current actions:
INSERT:
28:if(isNormalized()){
for(int i=0;i<init.length;i++){
if(inputSigma[i]>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(inputSigma[i],0,boundaries[1][i]-boundaries[0][i]);
}
}
}
TO:
27

DELETE:
Original line: 41if(boundaries!=null){
if(inputSigma[i]>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(inputSigma[i],0,boundaries[1][i]-boundaries[0][i]);
}
}

Following are 3th generated patches:
Validating 200 patches...
Tested:19585 patches
Compile failed:16417 patches
Compilation rate:0.16175644625989277

Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/36.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/36.java
Current actions:
INSERT:
28:if(isStrictlyPositive(getSigma())){
double max=0;
for(int i=0;i<inputSigma.length;i++){
max+=inputSigma[i]*2;
}
if(max>0){
double[] d=encode(max);
if(d[0]==0&&d[1]==0){
throw new OutOfRangeException(max,0,Double.POSITIVE_INFINITY,true);
}
}
}
TO:
27

Following are 0th generated patches:
Validating 38 patches...
Current actions:
INSERT:
28:if(isStrictlyPositive(getSigma())){
double max=0;
for(int i=0;i<inputSigma.length;i++){
max+=inputSigma[i]*2;
}
if(max>0){
double[] d=encode(max);
if(d[0]==0&&d[1]==0){
throw new OutOfRangeException(max,0,Double.POSITIVE_INFINITY,true);
}
}
}
TO:
27

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
33:if(max>0){
double[] d=encode(max);
if(d[0]==0&&d[1]==0){
throw new OutOfRangeException(max,0,Double.POSITIVE_INFINITY,true);
}
}
TO:
27

Following are 2th generated patches:
Validating 200 patches...
Current actions:
INSERT:
35:if(d[0]==0&&d[1]==0){
throw new OutOfRangeException(max,0,Double.POSITIVE_INFINITY,true);
}
TO:
27

Following are 3th generated patches:
Validating 200 patches...
Current actions:
INSERT:
36:throw new OutOfRangeException(max,0,Double.POSITIVE_INFINITY,true);
TO:
27

Following are 4th generated patches:
Validating 145 patches...
Current actions:
INSERT:
29:double max=0;
TO:
27

INSERT:
31:max+=inputSigma[i]*2;
TO:
27

INSERT:
33:if(max>0){
double[] d=encode(max);
if(d[0]==0&&d[1]==0){
throw new OutOfRangeException(max,0,Double.POSITIVE_INFINITY,true);
}
}
TO:
27

Tested:20368 patches
Compile failed:17077 patches
Compilation rate:0.16157698350353494

Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/37.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/37.java
Current actions:
Wrap:
MethodDeclaration
On:
[else{
boundaries=null;
}, break;, if(hasFiniteBounds){
for(int i=0;i<lB.length;i++){
if(Double.isInfinite(lB[i])||Double.isInfinite(uB[i])){
hasInfiniteBounds=true;
break;
}
}
if(hasInfiniteBounds){
throw new MathUnsupportedOperationException();
}
else{
boundaries=new double[2];
boundaries[0]=lB;
boundaries[1]=uB;
}
}, {
for(int i=0;i<lB.length;i++){
if(Double.isInfinite(lB[i])||Double.isInfinite(uB[i])){
hasInfiniteBounds=true;
break;
}
}
if(hasInfiniteBounds){
throw new MathUnsupportedOperationException();
}
else{
boundaries=new double[2];
boundaries[0]=lB;
boundaries[1]=uB;
}
}, throw new MathUnsupportedOperationException();, {
if(inputSigma[i]<0){
throw new NotPositiveException(inputSigma[i]);
}
if(boundaries!=null){
if(inputSigma[i]>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(inputSigma[i],0,boundaries[1][i]-boundaries[0][i]);
}
}
}, for(int i=0;i<init.length;i++){
if(inputSigma[i]<0){
throw new NotPositiveException(inputSigma[i]);
}
if(boundaries!=null){
if(inputSigma[i]>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(inputSigma[i],0,boundaries[1][i]-boundaries[0][i]);
}
}
}]
Following are 0th generated patches:
Validating 200 patches...
Current actions:
UPDATE
FROM:
21:if(hasInfiniteBounds){
throw new MathUnsupportedOperationException();
}
TO:
14:if(hasInfiniteBounds(lB,uB)){
throw new MathUnsupportedOperationException();
}

Following are 1th generated patches:
Validating 1 patches...
Current actions:
INSERT:
22:if(inputSigma==null){
numEvals+=1;
}
TO:
37

Following are 2th generated patches:
Validating 122 patches...
Current actions:
INSERT:
27:if(sigma<0){
throw new NotPositiveException(sigma);
}
TO:
40

Following are 3th generated patches:
Validating 200 patches...
Current actions:
INSERT:
30:if(sigma>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(sigma,0,boundaries[1][i]-boundaries[0][i]);
}
TO:
44

Following are 4th generated patches:
Validating 200 patches...
Current actions:
INSERT:
2:private void checkParameters(){
 final double[] init=getStartPoint();
 final double[] lB=getLowerBound();
 final double[] uB=getUpperBound();
boolean hasFiniteBounds=false;
for(int i=0;i<lB.length;i++){
if(!Double.isInfinite(lB[i])||!Double.isInfinite(uB[i])){
hasFiniteBounds=true;
break;
}
}
if(hasFiniteBounds){
if(hasInfiniteBounds(lB,uB)){
throw new MathUnsupportedOperationException();
}
boundaries=new double[2];
boundaries[0]=lB;
boundaries[1]=uB;
int numEvals=0;
for(int i=0;i<init.length;i++){
if(inputSigma==null){
numEvals+=1;
}
else{
 final double sigma=inputSigma[i];
if(sigma<0){
throw new NotPositiveException(sigma);
}
if(sigma>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(sigma,0,boundaries[1][i]-boundaries[0][i]);
}
numEvals+=2;
}
}
if(numEvals>100000){
throw new TooManyEvaluationsException(maxEval,numEvals);
}
}
else{
boundaries=null;
}
}
TO:
1

DELETE:
Original line: 10break;

UPDATE
FROM:
21:if(hasInfiniteBounds){
throw new MathUnsupportedOperationException();
}
TO:
14:if(hasInfiniteBounds(lB,uB)){
throw new MathUnsupportedOperationException();
}

DELETE:
Original line: 14if(hasFiniteBounds){
for(int i=0;i<lB.length;i++){
if(Double.isInfinite(lB[i])||Double.isInfinite(uB[i])){
hasInfiniteBounds=true;
break;
}
}
if(hasInfiniteBounds){
throw new MathUnsupportedOperationException();
}
else{
boundaries=new double[2];
boundaries[0]=lB;
boundaries[1]=uB;
}
}

INSERT:
19:boundaries[1]=uB;
TO:
23

INSERT:
20:int numEvals=0;
TO:
23

INSERT:
23:numEvals+=1;
TO:
37

INSERT:
25:else{
 final double sigma=inputSigma[i];
if(sigma<0){
throw new NotPositiveException(sigma);
}
if(sigma>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(sigma,0,boundaries[1][i]-boundaries[0][i]);
}
numEvals+=2;
}
TO:
40

DELETE:
Original line: 30else{
boundaries=null;
}

DELETE:
Original line: 33if(inputSigma!=null){
if(inputSigma.length!=init.length){
throw new DimensionMismatchException(inputSigma.length,init.length);
}
for(int i=0;i<init.length;i++){
if(inputSigma[i]<0){
throw new NotPositiveException(inputSigma[i]);
}
if(boundaries!=null){
if(inputSigma[i]>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(inputSigma[i],0,boundaries[1][i]-boundaries[0][i]);
}
}
}
}

INSERT:
36:if(numEvals>100000){
throw new TooManyEvaluationsException(maxEval,numEvals);
}
TO:
46

Tested:21034 patches
Compile failed:17743 patches
Compilation rate:0.15646096795664163

Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/38.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/38.java
Current actions:
INSERT:
28:if(encode(boundaries[1])>encode(boundaries[0])){
throw new OutOfRangeException(encode(boundaries[1]),0,encode(boundaries[0]));
}
TO:
27

Following are 0th generated patches:
Validating 2 patches...
Current actions:
INSERT:
28:if(encode(boundaries[1])>encode(boundaries[0])){
throw new OutOfRangeException(encode(boundaries[1]),0,encode(boundaries[0]));
}
TO:
27

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
29:throw new OutOfRangeException(encode(boundaries[1]),0,encode(boundaries[0]));
TO:
27

Following are 2th generated patches:
Validating 145 patches...
Tested:21381 patches
Compile failed:17969 patches
Compilation rate:0.15958093634535336
NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPNPPPPPPPPPNPNNNNNPNNNNNNNPPPPPPPPPPNPPPPPPPPPNPPPPPPPPPPPNPPPPPPPPPPNPPPPPPPPPPPPPNPPPPPPPPPPPPPPNPPPPPPPPPPPPNPPPPPPPPPPNPPPPPPPPPPPP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/39.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/39.java
Current actions:
INSERT:
28: final double max=getMaximum();
TO:
27

Following are 0th generated patches:
Validating 200 patches...
Current actions:
INSERT:
30:if(inputSigma!=null){
if(inputSigma[i]<0){
throw new NotPositiveException(inputSigma[i]);
}
if(inputSigma[i]>max-boundaries[0][i]){
throw new OutOfRangeException(inputSigma[i],0,max-boundaries[0][i]);
}
}
TO:
27

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
34:if(inputSigma[i]>max-boundaries[0][i]){
throw new OutOfRangeException(inputSigma[i],0,max-boundaries[0][i]);
}
TO:
27

Following are 2th generated patches:
Validating 200 patches...
Current actions:
INSERT:
28: final double max=getMaximum();
TO:
27

INSERT:
29:for(int i=0;i<init.length;i++){
if(inputSigma!=null){
if(inputSigma[i]<0){
throw new NotPositiveException(inputSigma[i]);
}
if(inputSigma[i]>max-boundaries[0][i]){
throw new OutOfRangeException(inputSigma[i],0,max-boundaries[0][i]);
}
}
else{
if(init[i]<boundaries[0][i]){
throw new OutOfRangeException(init[i],boundaries[0][i],Double.POSITIVE_INFINITY);
}
if(init[i]>max){
throw new OutOfRangeException(init[i],Double.NEGATIVE_INFINITY,max);
}
if(boundaries[0][i]<0){
throw new OutOfRangeException(boundaries[0][i],0,Double.POSITIVE_INFINITY);
}
if(boundaries[1][i]>max){
throw new OutOfRangeException(boundaries[1][i],Double.NEGATIVE_INFINITY,max);
}
}
}
TO:
27

DELETE:
Original line: 33if(inputSigma!=null){
if(inputSigma.length!=init.length){
throw new DimensionMismatchException(inputSigma.length,init.length);
}
for(int i=0;i<init.length;i++){
if(inputSigma[i]<0){
throw new NotPositiveException(inputSigma[i]);
}
if(boundaries!=null){
if(inputSigma[i]>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(inputSigma[i],0,boundaries[1][i]-boundaries[0][i]);
}
}
}
}

INSERT:
58:for(int i=0;i<init.length;i++){
if(inputSigma[i]<0){
throw new NotPositiveException(inputSigma[i]);
}
}
TO:
31

INSERT:
65:for(int i=0;i<init.length;i++){
if(init[i]<Double.NEGATIVE_INFINITY){
throw new OutOfRangeException(init[i],Double.NEGATIVE_INFINITY,Double.POSITIVE_INFINITY);
}
if(init[i]>Double.POSITIVE_INFINITY){
throw new OutOfRangeException(init[i],Double.NEGATIVE_INFINITY,Double.POSITIVE_INFINITY);
}
}
TO:
40

Tested:21944 patches
Compile failed:18532 patches
Compilation rate:0.15548669340138535

Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/40.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/40.java
Current actions:
INSERT:
28:if(getNormalizingConstant()>0){
throw new MathIllegalArgumentException();
}
TO:
27

Following are 0th generated patches:
Validating 2 patches...
Current actions:
INSERT:
28:if(getNormalizingConstant()>0){
throw new MathIllegalArgumentException();
}
TO:
27

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
29:throw new MathIllegalArgumentException();
TO:
27

Following are 2th generated patches:
Validating 149 patches...
Tested:22295 patches
Compile failed:18761 patches
Compilation rate:0.15851087687822382
NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPNPPPPPPPPPPNNNNNNPNNNNNNNPPPPPPPPNPPNNNPPPPPPPPNPPPPPPPPPPPPPPNPPPPPPPPPPNPPPPPPPPPPPPNPPPPPPPPPPPPNPPPPPPPPPPPPPPPNPPPPPPPPPPNPPPPPPPPPPP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/41.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/41.java
Current actions:
INSERT:
28:checkNormalization();
TO:
27

Following are 0th generated patches:
Validating 1 patches...
Current actions:
INSERT:
28:checkNormalization();
TO:
27

Following are 1th generated patches:
Validating 143 patches...
Tested:22439 patches
Compile failed:18777 patches
Compilation rate:0.16319800347609073
NNNPPPPPPPPPPPPPPPPPPPPPPPPPPPPNPPNPPPPPPPPPNPNNPPPPPPPPPPPPPPPPPPNPPPPPPPPPPPNPPPPPPPPPPPNPPPPPPPNPPPNPPPPPNPPPPPPPPPPPPPPNPPPPPPPPPPNPPPPPPPPP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/42.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/42.java
Current actions:
DELETE:
Original line: 33if(inputSigma!=null){
if(inputSigma.length!=init.length){
throw new DimensionMismatchException(inputSigma.length,init.length);
}
for(int i=0;i<init.length;i++){
if(inputSigma[i]<0){
throw new NotPositiveException(inputSigma[i]);
}
if(boundaries!=null){
if(inputSigma[i]>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(inputSigma[i],0,boundaries[1][i]-boundaries[0][i]);
}
}
}
}

Following are 0th generated patches:
Validating 200 patches...
Current actions:
INSERT:
33:if(inputSigma==null){
sigma=new double[init.length];
Arrays.fill(sigma,1);
}
TO:
32

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
44:if(sigma[i]<0){
throw new NotPositiveException(sigma[i]);
}
TO:
32

Following are 2th generated patches:
Validating 200 patches...
Current actions:
DELETE:
Original line: 33if(inputSigma!=null){
if(inputSigma.length!=init.length){
throw new DimensionMismatchException(inputSigma.length,init.length);
}
for(int i=0;i<init.length;i++){
if(inputSigma[i]<0){
throw new NotPositiveException(inputSigma[i]);
}
if(boundaries!=null){
if(inputSigma[i]>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(inputSigma[i],0,boundaries[1][i]-boundaries[0][i]);
}
}
}
}

INSERT:
33:if(inputSigma==null){
sigma=new double[init.length];
Arrays.fill(sigma,1);
}
TO:
32

INSERT:
37:else{
if(inputSigma.length!=init.length){
throw new DimensionMismatchException(inputSigma.length,init.length);
}
}
TO:
32

INSERT:
43:for(int i=0;i<init.length;i++){
if(sigma[i]<0){
throw new NotPositiveException(sigma[i]);
}
}
TO:
32

INSERT:
48:if(boundaries!=null){
for(int i=0;i<init.length;i++){
if(sigma[i]>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(sigma[i],0,boundaries[1][i]-boundaries[0][i]);
}
}
}
TO:
36

Tested:23011 patches
Compile failed:19336 patches
Compilation rate:0.15970622745643387

Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/43.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/43.java
Current actions:
INSERT:
28:double deltaMax=0;
TO:
27

Following are 0th generated patches:
Validating 200 patches...
Current actions:
INSERT:
31:if(delta>deltaMax){
deltaMax=delta;
}
TO:
27

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
35:if(inputSigma==null){
inputSigma=new double[boundaries[0].length];
Arrays.fill(inputSigma,1);
}
TO:
27

Following are 2th generated patches:
Validating 200 patches...
Current actions:
INSERT:
28:double deltaMax=0;
TO:
27

INSERT:
29:for(int i=0;i<boundaries[0].length;i++){
double delta=boundaries[1][i]-boundaries[0][i];
if(delta>deltaMax){
deltaMax=delta;
}
}
TO:
27

INSERT:
35:if(inputSigma==null){
inputSigma=new double[boundaries[0].length];
Arrays.fill(inputSigma,1);
}
TO:
27

INSERT:
43:if(inputSigma[i]>deltaMax){
throw new OutOfRangeException(inputSigma[i],0,deltaMax);
}
TO:
27

Tested:23611 patches
Compile failed:19712 patches
Compilation rate:0.1651348947524459
NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPNNNNNNNNNNNNNNPNNPPPPNNPNNNPNNNPNNNNNNNNNNNNNNNPNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNPNNNNNNNNNPPNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNPNNNNNNPNPPNNNNNPNNNPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPNPPPPPPPPPPNPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPNPPPPPPPPPPNPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/44.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/44.java
Current actions:
INSERT:
28:if(Double.isInfinite(lB[0])||Double.isInfinite(uB[0])){
throw new MathUnsupportedOperationException();
}
TO:
27

Following are 0th generated patches:
Validating 2 patches...
Current actions:
INSERT:
28:if(Double.isInfinite(lB[0])||Double.isInfinite(uB[0])){
throw new MathUnsupportedOperationException();
}
TO:
27

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
29:throw new MathUnsupportedOperationException();
TO:
27

Following are 2th generated patches:
Validating 148 patches...
Tested:23961 patches
Compile failed:19754 patches
Compilation rate:0.17557697925796084
PPPPPPPPPPPPPPPPPPPPPPNNPPPPPPPPPPPPPPPPPPPPNNPPPPPPPPPPPPPPPPPPPPPPPPPPPPNNPPPPPPPPPPPPPPPPPPPPPPNNPPPPPPPPPPNNPPPPPPPPPPPPPPPPPPPPPPPPPPPNNPPPPPPPPPPPPPPPPPPPPNPPPNPPPPPPPPPPPPPPPPPPPPPPPPPNNPPPPPPPPPPPPPPPPPPPNNPPPPPPPPPPNNNNNNNNNNNNNPPPPPPPPPPNNNNPPPPPPNPPPPPPPPPPPPPPNPPPPPPPPPPPPPNPPPPPPPPPPNPPPPPPPPPPPPNPPPPPPPPPPPPPNPPPPPPPPPPPPPPNPPPPPPPPPP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/45.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/45.java
Current actions:
INSERT:
28: final double[] normalized=new double[init.length];
TO:
27

Following are 0th generated patches:
Validating 51 patches...
Current actions:
INSERT:
34:if(Double.isInfinite(getSigma(normalized,sigma))){
throw new OutOfRangeException(getSigma(normalized,sigma),0,Double.POSITIVE_INFINITY);
}
TO:
27

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
30: final double[] sigma=new double[normalized.length];
TO:
27

INSERT:
31:for(int i=0;i<normalized.length;i++){
sigma[i]=boundaries[1][i]-boundaries[0][i];
}
TO:
27

INSERT:
34:if(Double.isInfinite(getSigma(normalized,sigma))){
throw new OutOfRangeException(getSigma(normalized,sigma),0,Double.POSITIVE_INFINITY);
}
TO:
27

Following are 2th generated patches:
Validating 200 patches...
Current actions:
INSERT:
28: final double[] normalized=new double[init.length];
TO:
27

INSERT:
34:if(Double.isInfinite(getSigma(normalized,sigma))){
throw new OutOfRangeException(getSigma(normalized,sigma),0,Double.POSITIVE_INFINITY);
}
TO:
27

Following are 3th generated patches:
Validating 200 patches...
Tested:24610 patches
Compile failed:20400 patches
Compilation rate:0.17106867127184072

Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/46.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/46.java
Current actions:
Wrap:
IfStatement
On:
[throw new MathUnsupportedOperationException();]
Following are 0th generated patches:
Validating 200 patches...
Current actions:
INSERT:
14:if(Double.isInfinite(lB[i])||Double.isInfinite(uB[i])){
throw new MathUnsupportedOperationException();
}
TO:
14

DELETE:
Original line: 22throw new MathUnsupportedOperationException();

INSERT:
38:}

TO:
27

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
34:if(FastMath.abs(init[i]-lB[i])>maxDistance||FastMath.abs(init[i]-uB[i])>maxDistance){
throw new MathArithmeticException();
}
TO:
27

Following are 2th generated patches:
Validating 200 patches...
Current actions:
DELETE:
Original line: 24else{
boundaries=new double[2];
boundaries[0]=lB;
boundaries[1]=uB;
}

INSERT:
28:double maxDistance=0;
TO:
27

INSERT:
29:for(int i=0;i<lB.length;i++){
 final double dist=boundaries[1][i]-boundaries[0][i];
maxDistance=FastMath.max(maxDistance,dist);
}
TO:
27

INSERT:
33:for(int i=0;i<init.length;i++){
if(FastMath.abs(init[i]-lB[i])>maxDistance||FastMath.abs(init[i]-uB[i])>maxDistance){
throw new MathArithmeticException();
}
}
TO:
27

INSERT:
38:}

TO:
27

INSERT:
39:else{
boundaries=null;
}
TO:
27

Following are 3th generated patches:
Validating 200 patches...
Current actions:
DELETE:
Original line: 13boolean hasInfiniteBounds=false;

INSERT:
17:boolean hasInfiniteBounds=false;
TO:
14

DELETE:
Original line: 24else{
boundaries=new double[2];
boundaries[0]=lB;
boundaries[1]=uB;
}

INSERT:
28:double maxDistance=0;
TO:
27

INSERT:
29:for(int i=0;i<lB.length;i++){
 final double dist=boundaries[1][i]-boundaries[0][i];
maxDistance=FastMath.max(maxDistance,dist);
}
TO:
27

INSERT:
33:for(int i=0;i<init.length;i++){
if(FastMath.abs(init[i]-lB[i])>maxDistance||FastMath.abs(init[i]-uB[i])>maxDistance){
throw new MathArithmeticException();
}
}
TO:
27

INSERT:
38:}

TO:
27

INSERT:
39:else{
boundaries=null;
}
TO:
27

Following are 4th generated patches:
Validating 200 patches...
Tested:25495 patches
Compile failed:21285 patches
Compilation rate:0.16513041772896647

Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/47.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/47.java
Current actions:
INSERT:
28:double sum=0;
TO:
27

Following are 0th generated patches:
Validating 31 patches...
Current actions:
INSERT:
33:if(sum<Double.POSITIVE_INFINITY){
throw new MathUnsupportedOperationException();
}
TO:
27

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
28:double sum=0;
TO:
27

INSERT:
29:for(int i=0;i<init.length;i++){
sum+=(boundaries[1][i]-boundaries[0][i])*(boundaries[1][i]-boundaries[0][i]);
}
TO:
27

INSERT:
32:sum/=init.length;
TO:
27

INSERT:
34:throw new MathUnsupportedOperationException();
TO:
27

Following are 2th generated patches:
Validating 200 patches...
Current actions:
INSERT:
29:for(int i=0;i<init.length;i++){
sum+=(boundaries[1][i]-boundaries[0][i])*(boundaries[1][i]-boundaries[0][i]);
}
TO:
27

INSERT:
33:if(sum<Double.POSITIVE_INFINITY){
throw new MathUnsupportedOperationException();
}
TO:
27

Following are 3th generated patches:
Validating 200 patches...
Tested:26125 patches
Compile failed:21894 patches
Compilation rate:0.16195215311004785

Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/48.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/48.java
Current actions:
INSERT:
28:if(Double.isInfinite(getNormalizer())){
throw new MathIllegalStateException(LocalizedFormats.OVERFLOW);
}
TO:
27

Following are 0th generated patches:
Validating 2 patches...
Current actions:
INSERT:
28:if(Double.isInfinite(getNormalizer())){
throw new MathIllegalStateException(LocalizedFormats.OVERFLOW);
}
TO:
27

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
29:throw new MathIllegalStateException(LocalizedFormats.OVERFLOW);
TO:
27

Following are 2th generated patches:
Validating 200 patches...
Tested:26527 patches
Compile failed:22124 patches
Compilation rate:0.16598182983375429
NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPNPPPPPPPPPNPNNNNNNPNNNNNNPPPPPPPPPPNPPPPPPPPPPNPPPPPPPPPPNPPPPPPPPPPPPNPPPPPPPPPPPPPPPNPPPPPPPPPPPPNPPPPPPPPPPPPNPPPPPPPPPPNPPPPPPPPPPPPNPPPPPPPPPPPPPPNPPPPPPPPPPPPNPPPPPPPPPPPNPPPPPPPPPPPP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/49.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/49.java
Current actions:
INSERT:
28:for(int i=0;i<init.length;i++){
double s=inputSigma[i];
if(s>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(s,0,boundaries[1][i]-boundaries[0][i]);
}
}
TO:
27

Following are 0th generated patches:
Validating 27 patches...
Current actions:
INSERT:
30:if(s>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(s,0,boundaries[1][i]-boundaries[0][i]);
}
TO:
27

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
28:for(int i=0;i<init.length;i++){
double s=inputSigma[i];
if(s>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(s,0,boundaries[1][i]-boundaries[0][i]);
}
}
TO:
27

DELETE:
Original line: 42if(inputSigma[i]>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(inputSigma[i],0,boundaries[1][i]-boundaries[0][i]);
}

Following are 2th generated patches:
Validating 200 patches...
Current actions:
INSERT:
28:for(int i=0;i<init.length;i++){
double s=inputSigma[i];
if(s>boundaries[1][i]-boundaries[0][i]){
throw new OutOfRangeException(s,0,boundaries[1][i]-boundaries[0][i]);
}
}
TO:
27

Following are 3th generated patches:
Validating 200 patches...
Tested:27154 patches
Compile failed:22722 patches
Compilation rate:0.1632172055682404

Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/50.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/50.java
Current actions:
INSERT:
28:if(MathArrays.distance(lB,uB)>1000){
throw new OutOfRangeException(MathArrays.distance(lB,uB),0,1000);
}
TO:
27

Following are 0th generated patches:
Validating 2 patches...
Current actions:
INSERT:
28:if(MathArrays.distance(lB,uB)>1000){
throw new OutOfRangeException(MathArrays.distance(lB,uB),0,1000);
}
TO:
27

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
29:throw new OutOfRangeException(MathArrays.distance(lB,uB),0,1000);
TO:
27

Following are 2th generated patches:
Validating 170 patches...
Tested:27526 patches
Compile failed:22822 patches
Compilation rate:0.17089297391557073
PPNNNNNNPPPPPPPPPPNPPPPPPPPNPNPNPPPPPPPNNNPPPPPPPPPPNPPPPPPPNNPPNPNNPPPPPPPNPPPPPPPPPPPPPNNNNNPPNPPPPPPPPPPNNPNPNNPPPNPNNNNNPNPNPPPPPPPPPPNPPPPPPPPPNNNNNPPPPPPPPPPNPPPPPPPPNNPPNNPNPPPNPPPPPPPPPPPPPPPPPPNNNNNPPPPPPPPPNNPNPPPPPPPNPPPNNPPPPPPNPPPNPPNNPPNPPNNNNPNNNNPNNNPPPPPPPPPNPPNPPPPPPNPNPPPNPPPPPNPPPPNPNPPPPPPPNPPPNNPNPPPPPPPPPNNNPPPPPPPPNPNPPNPPPPPPPPPPNPNNPPPPPPPPPPPP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/51.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/51.java
Current actions:
INSERT:
28:double min=Double.POSITIVE_INFINITY;
TO:
27

Following are 0th generated patches:
Validating 200 patches...
Current actions:
INSERT:
31:if(init[i]<min){
min=init[i];
}
TO:
27

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
34:if(init[i]>max){
max=init[i];
}
TO:
27

Following are 2th generated patches:
Validating 200 patches...
Current actions:
INSERT:
28:double min=Double.POSITIVE_INFINITY;
TO:
27

INSERT:
29:double max=Double.NEGATIVE_INFINITY;
TO:
27

INSERT:
31:if(init[i]<min){
min=init[i];
}
TO:
27

INSERT:
35:max=init[i];
TO:
27

INSERT:
38:for(int i=0;i<lB.length;i++){
if(lB[i]<min){
min=lB[i];
}
if(lB[i]>max){
max=lB[i];
}
}
TO:
27

INSERT:
46:for(int i=0;i<uB.length;i++){
if(uB[i]<min){
min=uB[i];
}
if(uB[i]>max){
max=uB[i];
}
}
TO:
27

INSERT:
54:double range=max-min;
TO:
27

INSERT:
55:for(int i=0;i<init.length;i++){
if(range<init[i]){
throw new OutOfRangeException(init[i],min,max);
}
}
TO:
27

INSERT:
60:for(int i=0;i<lB.length;i++){
if(range<lB[i]){
throw new OutOfRangeException(lB[i],min,max);
}
}
TO:
27

INSERT:
65:for(int i=0;i<uB.length;i++){
if(range<uB[i]){
throw new OutOfRangeException(uB[i],min,max);
}
}
TO:
27

Tested:28126 patches
Compile failed:23419 patches
Compilation rate:0.1673540496337908

Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/52.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/52.java
Current actions:
INSERT:
28:if(boundaries[1][0]-boundaries[0][0]>Integer.MAX_VALUE){
throw new OutOfRangeException(boundaries[1][0],0,Integer.MAX_VALUE);
}
TO:
27

Following are 0th generated patches:
Validating 2 patches...
Current actions:
INSERT:
28:if(boundaries[1][0]-boundaries[0][0]>Integer.MAX_VALUE){
throw new OutOfRangeException(boundaries[1][0],0,Integer.MAX_VALUE);
}
TO:
27

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
29:throw new OutOfRangeException(boundaries[1][0],0,Integer.MAX_VALUE);
TO:
27

Following are 2th generated patches:
Validating 145 patches...
Tested:28473 patches
Compile failed:23458 patches
Compilation rate:0.17613177396129667
PPPPPPPPPPPPPPPPPPPPPPNNPPPPPPPPPPPPPPPPPPPPNNPPPPPPPPPPPPPPPPPPPPPPPPPPPPNNPPPPPPPPPPPPPPPPPPPPPPNNPPPPPPPPPPNNPPPPPPPPPPPPPPPPPPPPPPPPPPPNNPPPPPPPPPPPPPPPPPPPPPNPPPPNPPPPPPPPPPPPPPPPPPPPPNPPNPPPPPPPPPPPPPPPPPPPNNPPPPPPPPPNPNNNNNNNNNNNNPPPPPPPPPPNPPPPPPPPPNPPPPPPPPPPPNPPPPPPPPPPPPPNPPPPPPPPPPPNPPPPPPPPPPPPNPPPPPPPPPPPPPNPPPPPPPPPPPPPNPPPPPPPPPP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/53.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/53.java
Current actions:
INSERT:
28:if(!isFinite()){
throw new NumberIsTooLargeException(boundaries[1][0],Double.MAX_VALUE,true);
}
TO:
27

Following are 0th generated patches:
Validating 2 patches...
Current actions:
INSERT:
28:if(!isFinite()){
throw new NumberIsTooLargeException(boundaries[1][0],Double.MAX_VALUE,true);
}
TO:
27

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
29:throw new NumberIsTooLargeException(boundaries[1][0],Double.MAX_VALUE,true);
TO:
27

Following are 2th generated patches:
Validating 145 patches...
Tested:28820 patches
Compile failed:23682 patches
Compilation rate:0.1782789729354615
NPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPNNPPPPPPPPPNNNNNNNNNNNNNPPPPPPPPPNPPPPPPPPPPPPPNPPPPPPPPPNPPPPPPPPPPPPPNPPPPPPPPPPPPNPPPPPPPPPPPPNPPPPPPPPPPPPNPPPPPPPPPPPPNPPPPPPPPPPPP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/54.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/54.java
Current actions:
INSERT:
28:double maxInputSigma=0;
TO:
27

Following are 0th generated patches:
Validating 71 patches...
Current actions:
INSERT:
36:if(maxSigma>=1){
throw new OutOfRangeException(maxSigma,0,Double.POSITIVE_INFINITY);
}
TO:
27

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
29:for(int i=0;i<inputSigma.length;i++){
maxInputSigma=FastMath.max(maxInputSigma,inputSigma[i]);
}
TO:
27

INSERT:
32:double maxSigma=0;
TO:
27

INSERT:
33:for(int i=0;i<init.length;i++){
maxSigma=FastMath.max(maxSigma,FastMath.abs(init[i])+maxInputSigma);
}
TO:
27

INSERT:
36:if(maxSigma>=1){
throw new OutOfRangeException(maxSigma,0,Double.POSITIVE_INFINITY);
}
TO:
27

Following are 2th generated patches:
Validating 200 patches...
Current actions:
INSERT:
28:double maxInputSigma=0;
TO:
27

INSERT:
29:for(int i=0;i<inputSigma.length;i++){
maxInputSigma=FastMath.max(maxInputSigma,inputSigma[i]);
}
TO:
27

INSERT:
32:double maxSigma=0;
TO:
27

INSERT:
34:maxSigma=FastMath.max(maxSigma,FastMath.abs(init[i])+maxInputSigma);
TO:
27

INSERT:
37:throw new OutOfRangeException(maxSigma,0,Double.POSITIVE_INFINITY);
TO:
27

Following are 3th generated patches:
Validating 200 patches...
Tested:29490 patches
Compile failed:24345 patches
Compilation rate:0.17446592065106817

Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/55.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/55.java
Current actions:
INSERT:
28:double max=Double.NEGATIVE_INFINITY;
TO:
27

Following are 0th generated patches:
Validating 61 patches...
Current actions:
INSERT:
32:if(r>s){
return ;
}
TO:
27

Following are 1th generated patches:
Validating 60 patches...
Current actions:
INSERT:
28:double max=Double.NEGATIVE_INFINITY;
TO:
27

INSERT:
29:for(int i=0;i<init.length;i++){
 final double s=boundaries[1][i]-boundaries[0][i];
 final double r=init[i]-boundaries[0][i];
if(r>s){
return ;
}
max=FastMath.max(max,s-r);
}
TO:
27

INSERT:
37:throw new OutOfRangeException(max,0,0);
TO:
27

Following are 2th generated patches:
Validating 200 patches...
Current actions:
INSERT:
28:double max=Double.NEGATIVE_INFINITY;
TO:
27

INSERT:
29:for(int i=0;i<init.length;i++){
 final double s=boundaries[1][i]-boundaries[0][i];
 final double r=init[i]-boundaries[0][i];
if(r>s){
return ;
}
max=FastMath.max(max,s-r);
}
TO:
27

Following are 3th generated patches:
Validating 200 patches...
Current actions:
INSERT:
29:for(int i=0;i<init.length;i++){
 final double s=boundaries[1][i]-boundaries[0][i];
 final double r=init[i]-boundaries[0][i];
if(r>s){
return ;
}
max=FastMath.max(max,s-r);
}
TO:
27

Following are 4th generated patches:
Validating 200 patches...
Current actions:
INSERT:
30: final double s=boundaries[1][i]-boundaries[0][i];
TO:
27

INSERT:
31: final double r=init[i]-boundaries[0][i];
TO:
27

INSERT:
32:if(r>s){
return ;
}
TO:
27

INSERT:
35:max=FastMath.max(max,s-r);
TO:
27

INSERT:
37:throw new OutOfRangeException(max,0,0);
TO:
27

Tested:30209 patches
Compile failed:25048 patches
Compilation rate:0.17084312622066272

Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/56.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/math_19/56.java
Current actions:
INSERT:
28: final double range=encode()-getLowerLimit();
TO:
27

Following are 0th generated patches:
Validating 5 patches...
Current actions:
INSERT:
29:if(range<0){
throw new OutOfRangeException(range,0,Double.POSITIVE_INFINITY);
}
TO:
27

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
30:throw new OutOfRangeException(range,0,Double.POSITIVE_INFINITY);
TO:
27

Following are 2th generated patches:
Validating 145 patches...
Current actions:
INSERT:
28: final double range=encode()-getLowerLimit();
TO:
27

INSERT:
30:throw new OutOfRangeException(range,0,Double.POSITIVE_INFINITY);
TO:
27

Following are 3th generated patches:
Validating 200 patches...
Current actions:
INSERT:
28: final double range=encode()-getLowerLimit();
TO:
27

INSERT:
29:if(range<0){
throw new OutOfRangeException(range,0,Double.POSITIVE_INFINITY);
}
TO:
27

Following are 4th generated patches:
Validating 200 patches...
Tested:30959 patches
Compile failed:25677 patches
Compilation rate:0.1706127458897251

Finish : math-19 > patch : 0 | Start : Fri Apr 05 20:09:57 HKT 2024 | End : 2024.04.05 AD at 21:43:46 HKT
