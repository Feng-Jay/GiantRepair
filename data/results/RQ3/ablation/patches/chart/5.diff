Following diff 0:
-this.data.add(-index-1,newXYDataItem(x,y));
+index=-(index+1);
+if(!(maximumItemCount==this.data.size())){
+this.data.add(newXYDataItem(x,y));
+}
+else{
+this.data.add(index,newXYDataItem(x,y));
+}
Following diff 0:
-this.data.add(-index-1,newXYDataItem(x,y));
+index=-(index+1);
+this.data.add(newXYDataItem(x,y));
Following diff 0:
-this.data.add(-index-1,newXYDataItem(x,y));
+this.data.add(newXYDataItem(x,y));
Following diff 0:
-this.data.add(-index-1,newXYDataItem(x,y));
+index=-(index+1);
+if(!(index==this.data.size())){
+this.data.add(newXYDataItem(x,y));
+}
+else{
+this.data.add(index,newXYDataItem(x,y));
+}
Following diff 0:
-this.data.add(-index-1,newXYDataItem(x,y));
+index=-(index+1);
+if(!(serialVersionUID==this.data.size())){
+this.data.add(newXYDataItem(x,y));
+}
+else{
+this.data.add(index,newXYDataItem(x,y));
+}
Following diff 0:
-this.data.add(-index-1,newXYDataItem(x,y));
+index=-(index+1);
+if(!(maximumItemCount==this.data.size())){
+this.data.add(newXYDataItem(x,y));
+}
+else{
+this.data.add(index,newXYDataItem(x,y));
+}
Following diff 0:
-this.data.add(-index-1,newXYDataItem(x,y));
+intnewIndex=-index-1;
+newIndex=this.data.size();
+this.data.add(newIndex,newXYDataItem(x,y));
Following diff 0:
-this.data.add(-index-1,newXYDataItem(x,y));
+intnewIndex=-index-1;
+newIndex=0;
+if(!(newIndex>this.data.size())){
+newIndex=this.data.size();
+}
+this.data.add(newIndex,newXYDataItem(x,y));
Following diff 0:
-this.data.add(-index-1,newXYDataItem(x,y));
+intnewIndex=-index-1;
+newIndex=0;
+if(!(newIndex>=this.data.size())){
+newIndex=this.data.size();
+}
+this.data.add(newIndex,newXYDataItem(x,y));
Following diff 0:
-this.data.add(-index-1,newXYDataItem(x,y));
+intnewIndex=-index-1;
+newIndex=0;
+if(newIndex<this.data.size()){
+newIndex=this.data.size();
+}
+this.data.add(newIndex,newXYDataItem(x,y));
Following diff 0:
-this.data.add(-index-1,newXYDataItem(x,y));
+intnewIndex=-index-1;
+newIndex=0;
+if(autoSort){
+newIndex=this.data.size();
+}
+this.data.add(newIndex,newXYDataItem(x,y));
