Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+if(node.hasChildren()||isNameAssignedTo(node.getQualifiedName(),replacement)){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+if(node.hasMoreThanOneChild()||isNameAssignedTo(node.getQualifiedName(),replacement)){
+returnfalse;
+}
Following diff 0:
+if(node.hasChildren()){
+returnfalse;
+}
Following diff 0:
+if(node.isGetProp()){
+returnisSafeReplacement(node,replacement);
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
-returnfalse;
-}
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
Following diff 0:
-node=node.getFirstChild();
-returnfalse;
+NodenodeToCheck=node;
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
Following diff 0:
-node=node.getFirstChild();
-returnfalse;
+NodenodeToCheck=node;
+while(nodeToCheck.hasMoreThanOneChild()){
+nodeToCheck=nodeToCheck.getFirstChild();
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
+returnfalse;
+}
+}
Following diff 0:
-returntrue;
+if(!(node.hasChildren())){
+returntrue;
+}
+returnfalse;
Following diff 0:
-returntrue;
+if(!(node.isGetProp())){
+returntrue;
+}
+returnfalse;
Following diff 0:
+if(node.hasChildren()&&replacement.getFirstChild().isName()){
+returnfalse;
+}
Following diff 0:
+if(node.hasChildren()){
+returnfalse;
+}
Following diff 0:
-if(node.isName()&&isNameAssignedTo(node.getString(),replacement)){
+NodenodeToCheck=node.getFirstChild();
+while(nodeToCheck.isGetProp()){
+nodeToCheck=nodeToCheck.getFirstChild();
+}
+if(nodeToCheck.isName()&&isNameAssignedTo(nodeToCheck.getString(),replacement)){
