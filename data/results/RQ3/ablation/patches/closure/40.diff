Following diff 0:
-JsNamenameInfo=getName(nameNode.getString(),true);
-recordSet(nameInfo.name,nameNode);
+recordSet(ns.name,nameNode);
+recordSet(ns.name,nameNode);
Following diff 0:
-if(name!=null){
-refNodes.add(newClassDefiningFunctionNode(name,n,parent,parent.getParent()));
-}
+recordSet(ns.name,nameNode);
+refNodes.add(newClassDefiningFunctionNode(getName(ns.name,false),n,parent,parent.getParent()));
Following diff 0:
-refNodes.add(newClassDefiningFunctionNode(name,n,parent,parent.getParent()));
+recordSet(ns.name,nameNode);
+refNodes.add(newClassDefiningFunctionNode(getName(ns.name,false),n,parent,parent.getParent()));
Following diff 0:
-JsNamenameInfo=getName(nameNode.getString(),true);
-recordSet(nameInfo.name,nameNode);
-JsNamename=getName(ns.name,false);
-if(name!=null){
-refNodes.add(newClassDefiningFunctionNode(name,n,parent,parent.getParent()));
-}
+recordSet(ns.name,nameNode);
+recordSet(ns.name,nameNode);
+refNodes.add(newClassDefiningFunctionNode(getName(ns.name,false),n,parent,parent.getParent()));
Following diff 0:
+recordSet(ns.name,nameNode);
Following diff 0:
+recordSet(ns.name,n);
Following diff 0:
+if(ns!=null){
+if(!(ns.onlyAffectsClassDef)){
+JsNamename=getName(ns.name,false);
+if(name!=null){
+n.isQualifiedName();
+}
+}
+else{
+recordSet(ns.name,nameNode);
+}
+}
Following diff 0:
+if(ns!=null){
+if(!(ns.onlyAffectsClassDef)){
+JsNamename=getName(ns.name,false);
+if(!(name!=null)){
+n.getAncestors();
+}
+}
+else{
+recordSet(ns.name,nameNode);
+}
+}
Following diff 0:
+if(ns!=null){
+if(!(ns.onlyAffectsClassDef)){
+JsNamename=getName(ns.name,false);
+if(!(name!=null)){
+n.getLastChild();
+}
+}
+else{
+recordSet(ns.name,nameNode);
+}
+}
Following diff 0:
+if(ns!=null){
+if(!(ns.onlyAffectsClassDef)){
+JsNamename=getName(ns.name,false);
+if(!(name!=null)){
+n.getType();
+}
+}
+else{
+recordSet(ns.name,nameNode);
+}
+}
Following diff 0:
+if(ns!=null){
+if(!(ns.onlyAffectsClassDef)){
+JsNamename=getName(ns.name,false);
+if(name!=null){
+parent.getType();
+}
+}
+else{
+recordSet(ns.name,nameNode);
+}
+}
Following diff 0:
+if(ns!=null){
+if(!(ns.onlyAffectsClassDef)){
+JsNamename=getName(ns.name,false);
+if(!(name!=null)){
+parent.getType();
+}
+}
+else{
+recordSet(ns.name,nameNode);
+}
+}
Following diff 0:
+if(ns!=null){
+if(!(ns.onlyAffectsClassDef)){
+JsNamename=getName(ns.name,false);
+if(name!=null){
+parent.hasOneChild();
+}
+}
+else{
+recordSet(ns.name,nameNode);
+}
+}
Following diff 0:
+if(ns!=null){
+if(!(ns.onlyAffectsClassDef)){
+JsNamename=getName(ns.name,false);
+if(!(name!=null)){
+parent.getFirstChild();
+}
+}
+else{
+recordSet(ns.name,nameNode);
+}
+}
Following diff 0:
+if(ns!=null){
+if(!(ns.onlyAffectsClassDef)){
+JsNamename=getName(ns.name,false);
+if(name!=null){
+parent.getLastChild();
+}
+}
+else{
+recordSet(ns.name,nameNode);
+}
+}
Following diff 0:
+if(ns!=null){
+if(!(ns.onlyAffectsClassDef)){
+JsNamename=getName(ns.name,false);
+if(!(name!=null)){
+parent.getLastChild();
+}
+}
+else{
+recordSet(ns.name,nameNode);
+}
+}
Following diff 0:
+if(ns!=null){
+if(!(ns.onlyAffectsClassDef)){
+JsNamename=getName(WINDOW,removeUnreferenced);
+if(name!=null){
+refNodes.add(newClassDefiningFunctionNode(name,n,parent,parent.getParent()));
+}
+}
+else{
+recordSet(ns.name,nameNode);
+}
+}
Following diff 0:
+if(ns!=null){
+if(!(ns.onlyAffectsClassDef)){
+JsNamename=getName(ns.name,false);
+if(name!=null){
+parent.isExprResult();
+}
+}
+else{
+recordSet(ns.name,nameNode);
+}
+}
Following diff 0:
+if(ns!=null){
+if(!(ns.onlyAffectsClassDef)){
+JsNamename=getName(ns.name,false);
+if(!(name!=null)){
+parent.isExprResult();
+}
+}
+else{
+recordSet(ns.name,nameNode);
+}
+}
Following diff 0:
+if(ns!=null){
+if(!(ns.onlyAffectsClassDef)){
+JsNamename=getName(ns.name,false);
+if(name!=null){
+parent.isInstanceOf();
+}
+}
+else{
+recordSet(ns.name,nameNode);
+}
+}
Following diff 0:
+if(ns!=null){
+if(!(ns.onlyAffectsClassDef)){
+JsNamename=getName(ns.name,false);
+if(!(name!=null)){
+parent.isInstanceOf();
+}
+}
+else{
+recordSet(ns.name,nameNode);
+}
+}
Following diff 0:
+if(ns!=null){
+if(!(ns.onlyAffectsClassDef)){
+JsNamename=getName(ns.name,false);
+if(name!=null){
+t.inGlobalScope();
+}
+}
+else{
+recordSet(ns.name,nameNode);
+}
+}
Following diff 0:
+if(ns!=null){
+if(!(ns.onlyAffectsClassDef)){
+JsNamename=getName(ns.name,false);
+if(!(name!=null)){
+t.inGlobalScope();
+}
+}
+else{
+recordSet(ns.name,nameNode);
+}
+}
Following diff 0:
+if(ns!=null){
+if(!(ns.onlyAffectsClassDef)){
+JsNamename=getName(ns.name,false);
+if(!(name!=null)){
+t.getScope();
+}
+}
+else{
+recordSet(ns.name,nameNode);
+}
+}
Following diff 0:
+if(ns!=null){
+if(!(ns.onlyAffectsClassDef)){
+JsNamename=getName(ns.name,false);
+if(name!=null){
+n.getFirstChild();
+}
+}
+else{
+recordSet(ns.name,nameNode);
+}
+}
Following diff 0:
+if(ns!=null){
+if(!(ns.onlyAffectsClassDef)){
+JsNamename=getName(ns.name,false);
+if(name!=null){
+n.isAssign();
+}
+}
+else{
+recordSet(ns.name,nameNode);
+}
+}
Following diff 0:
+if(ns!=null){
+if(!(ns.onlyAffectsClassDef)){
+JsNamename=getName(ns.name,false);
+if(!(name!=null)){
+n.isAssign();
+}
+}
+else{
+recordSet(ns.name,nameNode);
+}
+}
Following diff 0:
+if(ns!=null){
+if(!(ns.onlyAffectsClassDef)){
+JsNamename=getName(ns.name,false);
+if(name!=null){
+n.isCall();
+}
+}
+else{
+recordSet(ns.name,nameNode);
+}
+}
Following diff 0:
+if(ns!=null){
+if(!(ns.onlyAffectsClassDef)){
+JsNamename=getName(ns.name,false);
+if(name!=null){
+n.children();
+}
+}
+else{
+recordSet(ns.name,nameNode);
+}
+}
Following diff 0:
+if(ns!=null){
+if(!(ns.onlyAffectsClassDef)){
+JsNamename=getName(ns.name,false);
+if(!(name!=null)){
+n.children();
+}
+}
+else{
+recordSet(ns.name,nameNode);
+}
+}
Following diff 0:
+if(ns!=null){
+if(!(ns.onlyAffectsClassDef)){
+JsNamename=getName(ns.name,false);
+if(!(name!=null)){
+n.isFor();
+}
+}
+else{
+recordSet(ns.name,nameNode);
+}
+}
Following diff 0:
+if(ns!=null){
+if(!(ns.onlyAffectsClassDef)){
+JsNamename=getName(ns.name,false);
+if(name!=null){
+n.isName();
+}
+}
+else{
+recordSet(ns.name,nameNode);
+}
+}
Following diff 0:
+if(ns!=null){
+if(!(ns.onlyAffectsClassDef)){
+JsNamename=getName(ns.name,false);
+if(!(name!=null)){
+n.isName();
+}
+}
+else{
+recordSet(ns.name,nameNode);
+}
+}
