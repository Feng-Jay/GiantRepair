Following diff 0:
-if(!NodeUtil.isGet(first)){
+if(!first.isCast()&&!NodeUtil.isGet(first)){
Following diff 0:
-if(!NodeUtil.isGet(first)){
-n.putBooleanProp(Node.FREE_CALL,true);
-}
+if(!first.isCast()&&!NodeUtil.isGet(first)){
+n.putBooleanProp(Node.FREE_CALL,true);
+}
Following diff 0:
+if(first.isCast()){
+return;
+}
Following diff 0:
+while(first.isCast()){
+first=first.getFirstChild();
+}
Following diff 0:
+if(first.isCast()||first.isBreak()){
+return;
+}
Following diff 0:
+if(first.isCast()||first.isVarArgs()){
+return;
+}
Following diff 0:
+if(first.isCast()||first.isGetterDef()){
+return;
+}
Following diff 0:
+if(first.isCast()||first.isGetElem()){
+return;
+}
Following diff 0:
+if(first.isCast()||first.isDec()){
+return;
+}
Following diff 0:
+if(first.isCast()||first.isSetterDef()){
+return;
+}
Following diff 0:
+if(first.isCast()||first.isDo()){
+return;
+}
Following diff 0:
+if(first.isCast()||first.isFor()){
+return;
+}
Following diff 0:
+if(first.isCast()||first.isEmpty()){
+return;
+}
Following diff 0:
+if(first.isCast()||first.isHook()){
+return;
+}
Following diff 0:
+if(first.isCast()||first.isIf()){
+return;
+}
Following diff 0:
+if(first.isCast()||first.isLabel()){
+return;
+}
Following diff 0:
+if(first.isCast()||first.isNew()){
+return;
+}
Following diff 0:
+if(first.isCast()||first.isThis()){
+return;
+}
Following diff 0:
+if(first.isCast()||first.isNot()){
+return;
+}
Following diff 0:
+if(first.isCast()||first.isTry()){
+return;
+}
Following diff 0:
+if(first.isCast()||first.isAdd()){
+return;
+}
Following diff 0:
+if(first.isCast()||first.isAnd()){
+return;
+}
Following diff 0:
+if(first.isCast()||first.isBlock()){
+return;
+}
Following diff 0:
+if(first.isCast()||first.isCast()){
+return;
+}
Following diff 0:
+if(first.isCast()||first.isDelProp()){
+return;
+}
Following diff 0:
+if(first.isCast()||first.isCatch()){
+return;
+}
Following diff 0:
+if(first.isCast()||first.isComma()){
+return;
+}
Following diff 0:
+if(first.isCast()||first.isFalse()){
+return;
+}
Following diff 0:
+if(first.isCast()||first.isGetProp()){
+return;
+}
Following diff 0:
+if(first.isCast()||first.isIn()){
+return;
+}
Following diff 0:
+if(first.isCast()||first.isInc()){
+return;
+}
Following diff 0:
+if(first.isCast()||first.isNE()){
+return;
+}
Following diff 0:
+if(first.isCast()||first.isNull()){
+return;
+}
Following diff 0:
+if(first.isCast()||first.isNumber()){
+return;
+}
Following diff 0:
+if(first.isCast()||first.isOr()){
+return;
+}
Following diff 0:
+if(first.isCast()||first.isReturn()){
+return;
+}
Following diff 0:
+if(first.isCast()||first.isRegExp()){
+return;
+}
Following diff 0:
+if(first.isCast()||first.isScript()){
+return;
+}
Following diff 0:
+if(first.isCast()||first.isString()){
+return;
+}
Following diff 0:
+if(first.isCast()||first.isSwitch()){
+return;
+}
Following diff 0:
+if(first.isCast()||first.isVoid()){
+return;
+}
Following diff 0:
+if(first.isCast()||first.isVar()){
+return;
+}
Following diff 0:
+if(first.isCast()||first.isWhile()){
+return;
+}
Following diff 0:
+if(first.isCast()||first.isWith()){
+return;
+}
