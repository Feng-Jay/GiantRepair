Following diff 0:
-while(c!=null){
-traverse(c);
-Nodenext=c.getNext();
-c=next;
-}
+while(c!=null){
+Nodenext=c.getNext();
+traverse(c);
+c=next;
+}
Following diff 0:
-traverse(c);
+c.getChildCount();
+traverse(c);
Following diff 0:
-traverse(c);
+this.toString();
+traverse(c);
Following diff 0:
-traverse(c);
+c.children();
+traverse(c);
Following diff 0:
-traverse(c);
+c.isEquivalentTo(c);
+traverse(c);
Following diff 0:
-traverse(c);
+c.isAssign();
+traverse(c);
Following diff 0:
-traverse(c);
+c.isCall();
+traverse(c);
Following diff 0:
-traverse(c);
+c.isDec();
+traverse(c);
Following diff 0:
-traverse(c);
+c.isBlock();
+traverse(c);
Following diff 0:
-traverse(c);
+c.isDebugger();
+traverse(c);
Following diff 0:
-traverse(c);
+c.isContinue();
+traverse(c);
Following diff 0:
-traverse(c);
+c.isHook();
+traverse(c);
Following diff 0:
-traverse(c);
+c.isDo();
+traverse(c);
Following diff 0:
-traverse(c);
+c.isGetElem();
+traverse(c);
Following diff 0:
-traverse(c);
+c.isEmpty();
+traverse(c);
Following diff 0:
-traverse(c);
+c.isIn();
+traverse(c);
Following diff 0:
-traverse(c);
+c.isInc();
+traverse(c);
Following diff 0:
-traverse(c);
+c.isNew();
+traverse(c);
Following diff 0:
-traverse(c);
+c.isOr();
+traverse(c);
Following diff 0:
-traverse(c);
+c.isInstanceOf();
+traverse(c);
Following diff 0:
-traverse(c);
+c.isThis();
+traverse(c);
Following diff 0:
-traverse(c);
+c.isTry();
+traverse(c);
Following diff 0:
-traverse(c);
+c.isTypeOf();
+traverse(c);
Following diff 0:
-traverse(c);
+this.getCompiler();
+traverse(c);
Following diff 0:
-traverse(c);
+c.isVoid();
+traverse(c);
Following diff 0:
-traverse(c);
+c.isWith();
+traverse(c);
Following diff 0:
-traverse(c);
+c.siblings();
+traverse(c);
Following diff 0:
-traverse(c);
+c.isSyntheticBlock();
+traverse(c);
Following diff 0:
-traverse(c);
+c.isLocalResultCall();
+traverse(c);
Following diff 0:
-traverse(c);
+c.isAssignAdd();
+traverse(c);
Following diff 0:
-traverse(c);
+c.isIf();
+traverse(c);
Following diff 0:
-traverse(c);
+c.isNE();
+traverse(c);
Following diff 0:
-traverse(c);
+c.isNull();
+traverse(c);
Following diff 0:
-traverse(c);
+c.isSwitch();
+traverse(c);
Following diff 0:
-traverse(c);
+c.isRegExp();
+traverse(c);
Following diff 0:
-traverse(c);
+c.getNext();
+traverse(c);
Following diff 0:
-traverse(c);
+c.toString();
+traverse(c);
Following diff 0:
-traverse(c);
+c.toStringTree();
+traverse(c);
Following diff 0:
-traverse(c);
+c.getLineno();
+traverse(c);
Following diff 0:
-traverse(c);
+c.getAncestors();
+traverse(c);
Following diff 0:
-traverse(c);
+c.getSourceOffset();
+traverse(c);
Following diff 0:
-traverse(c);
+c.cloneTree();
+traverse(c);
Following diff 0:
-traverse(c);
+c.getDirectives();
+traverse(c);
Following diff 0:
-traverse(c);
+c.hashCode();
+traverse(c);
Following diff 0:
-traverse(c);
+c.getParent();
+traverse(c);
Following diff 0:
-traverse(c);
+c.getType();
+traverse(c);
Following diff 0:
-traverse(c);
+c.getFirstChild();
+traverse(c);
Following diff 0:
-traverse(c);
+c.getLastSibling();
+traverse(c);
Following diff 0:
-traverse(c);
+c.getSourceFileName();
+traverse(c);
Following diff 0:
-traverse(c);
+c.getLength();
+traverse(c);
Following diff 0:
-traverse(c);
+c.getQualifiedName();
+traverse(c);
Following diff 0:
-traverse(c);
+c.getJSType();
+traverse(c);
Following diff 0:
-traverse(c);
+c.getJSDocInfo();
+traverse(c);
Following diff 0:
-traverse(c);
+c.getCharno();
+traverse(c);
Following diff 0:
-traverse(c);
+c.isArrayLit();
+traverse(c);
Following diff 0:
-traverse(c);
+c.isComma();
+traverse(c);
Following diff 0:
-traverse(c);
+c.isFor();
+traverse(c);
Following diff 0:
-traverse(c);
+c.isLabelName();
+traverse(c);
Following diff 0:
-traverse(c);
+c.isThrow();
+traverse(c);
Following diff 0:
-traverse(c);
+c.getLastChild();
+traverse(c);
Following diff 0:
-traverse(c);
+c.getInputId();
+traverse(c);
Following diff 0:
-traverse(c);
+c.getSourcePosition();
+traverse(c);
Following diff 0:
-traverse(c);
+node.getParent();
+traverse(c);
Following diff 0:
-traverse(c);
+c.isQualifiedName();
+traverse(c);
Following diff 0:
-traverse(c);
+c.cloneNode();
+traverse(c);
Following diff 0:
-traverse(c);
+c.isOptionalArg();
+traverse(c);
Following diff 0:
-traverse(c);
+c.wasEmptyNode();
+traverse(c);
Following diff 0:
-traverse(c);
+c.isBreak();
+traverse(c);
Following diff 0:
-traverse(c);
+c.isCase();
+traverse(c);
Following diff 0:
-traverse(c);
+c.isCatch();
+traverse(c);
Following diff 0:
-traverse(c);
+c.isDelProp();
+traverse(c);
Following diff 0:
-traverse(c);
+c.isFalse();
+traverse(c);
Following diff 0:
-traverse(c);
+c.isExprResult();
+traverse(c);
Following diff 0:
-traverse(c);
+c.isFunction();
+traverse(c);
Following diff 0:
-traverse(c);
+c.isGetProp();
+traverse(c);
Following diff 0:
-traverse(c);
+c.isGetterDef();
+traverse(c);
Following diff 0:
-traverse(c);
+c.isFromExterns();
+traverse(c);
Following diff 0:
-traverse(c);
+c.isLabel();
+traverse(c);
Following diff 0:
-traverse(c);
+c.isNot();
+traverse(c);
Following diff 0:
-traverse(c);
+c.isReturn();
+traverse(c);
Following diff 0:
-traverse(c);
+c.isSetterDef();
+traverse(c);
Following diff 0:
-traverse(c);
+c.isStringKey();
+traverse(c);
Following diff 0:
-traverse(c);
+c.isString();
+traverse(c);
Following diff 0:
-traverse(c);
+c.isTrue();
+traverse(c);
Following diff 0:
-traverse(c);
+c.isVar();
+traverse(c);
Following diff 0:
-traverse(c);
+c.isWhile();
+traverse(c);
