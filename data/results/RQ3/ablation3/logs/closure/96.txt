Repair : closure_96
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/0.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/0.java
Tested:0 patches
Compile failed:0 patches
Compilation rate:NaN

Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/1.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/1.java
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18:if(minArgs>numArgs||(maxArgs<numArgs&&!functionType.isVarArgs())){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

Following are 0th generated patches:
Validating 1 patches...
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18:if(minArgs>numArgs||(maxArgs<numArgs&&!functionType.isVarArgs())){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

Following are 0th generated patches:
Validating 1 patches...
Tested:2 patches
Compile failed:2 patches
Compilation rate:0.0
NN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/2.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/2.java
Current actions:
UPDATE
FROM:
19:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
TO:
19:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" arguments":"");

Following are 0th generated patches:
Validating 1 patches...
Current actions:
UPDATE
FROM:
19:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
TO:
19:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" arguments":"");

Following are 1th generated patches:
Validating 200 patches...
Tested:203 patches
Compile failed:201 patches
Compilation rate:0.009852216748768473
PPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/3.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/3.java
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18:if(minArgs>numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

Following are 0th generated patches:
Validating 7 patches...
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18:if(minArgs>numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

Following are 1th generated patches:
Validating 1 patches...
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18:if(minArgs>numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

INSERT:
19:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
TO:
18

INSERT:
21:else{
if(maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
}
TO:
18

Following are 2th generated patches:
Validating 200 patches...
Current actions:
INSERT:
19:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
TO:
18

INSERT:
21:else{
if(maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
}
TO:
18

Following are 3th generated patches:
Validating 200 patches...
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18:if(minArgs>numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

INSERT:
21:else{
if(maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
}
TO:
18

Following are 4th generated patches:
Validating 2 patches...
Current actions:
INSERT:
21:else{
if(maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
}
TO:
18

Tested:611 patches
Compile failed:604 patches
Compilation rate:0.011456628477905073
NNNNPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/4.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/4.java
Current actions:
INSERT:
20:return ;
TO:
19

Following are 0th generated patches:
Validating 18 patches...
Current actions:
INSERT:
23:if(maxMissingParams>0){
report(t,call,MISSING_PARAMETER,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(maxMissingParams));
return ;
}
TO:
19

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
20:return ;
TO:
19

INSERT:
21:}

TO:
19

INSERT:
22:int maxMissingParams=numArgs-functionType.getParameters().size();
TO:
19

INSERT:
23:if(maxMissingParams>0){
report(t,call,MISSING_PARAMETER,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(maxMissingParams));
return ;
}
TO:
19

Following are 2th generated patches:
Validating 200 patches...
Tested:1026 patches
Compile failed:1018 patches
Compilation rate:0.007797270955165692
NNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/5.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/5.java
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18:if(minArgs>numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

Following are 0th generated patches:
Validating 5 patches...
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18:if(minArgs>numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

Following are 1th generated patches:
Validating 1 patches...
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18:if(minArgs>numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

INSERT:
21:else{
if(maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),minArgs==0?"zero":"between "+minArgs+" and "+maxArgs,"no more than "+maxArgs+" argument(s)");
}
}
TO:
20

Following are 2th generated patches:
Validating 2 patches...
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18:if(minArgs>numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

INSERT:
22:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),minArgs==0?"zero":"between "+minArgs+" and "+maxArgs,"no more than "+maxArgs+" argument(s)");
TO:
20

Following are 3th generated patches:
Validating 200 patches...
Current actions:
INSERT:
22:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),minArgs==0?"zero":"between "+minArgs+" and "+maxArgs,"no more than "+maxArgs+" argument(s)");
TO:
20

Following are 4th generated patches:
Validating 200 patches...
Current actions:
INSERT:
21:else{
if(maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),minArgs==0?"zero":"between "+minArgs+" and "+maxArgs,"no more than "+maxArgs+" argument(s)");
}
}
TO:
20

Tested:1434 patches
Compile failed:1415 patches
Compilation rate:0.013249651324965132
PPPPPPPPNNNNNNNNNNNNNNNNNPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/6.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/6.java
Current actions:
INSERT:
19:String functionName=call.getFirstChild().getQualifiedName();
TO:
18

Following are 0th generated patches:
Validating 21 patches...
Current actions:
INSERT:
20:String[] functionArguments=new String[numArgs];
TO:
18

UPDATE
FROM:
19:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
TO:
24:report(t,call,WRONG_ARGUMENT_COUNT,functionName,Arrays.toString(functionArguments),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
22:functionArguments[i]=validator.getReadableJSTypeName(call.getChildAtIndex(i+1),false);
TO:
18

Following are 2th generated patches:
Validating 200 patches...
Current actions:
INSERT:
19:String functionName=call.getFirstChild().getQualifiedName();
TO:
18

INSERT:
22:functionArguments[i]=validator.getReadableJSTypeName(call.getChildAtIndex(i+1),false);
TO:
18

UPDATE
FROM:
19:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
TO:
24:report(t,call,WRONG_ARGUMENT_COUNT,functionName,Arrays.toString(functionArguments),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");

Following are 3th generated patches:
Validating 200 patches...
Tested:2054 patches
Compile failed:2030 patches
Compilation rate:0.011684518013631937

Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/7.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/7.java
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18:if(minArgs>numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

Following are 0th generated patches:
Validating 5 patches...
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18:if(minArgs>numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

Following are 1th generated patches:
Validating 1 patches...
Current actions:
INSERT:
21:else{
if(maxArgs!=Integer.MAX_VALUE&&numArgs>maxArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
}
TO:
20

INSERT:
24:}

TO:
20

Following are 2th generated patches:
Validating 1 patches...
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18:if(minArgs>numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

INSERT:
21:else{
if(maxArgs!=Integer.MAX_VALUE&&numArgs>maxArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
}
TO:
20

INSERT:
24:}

TO:
20

Following are 3th generated patches:
Validating 2 patches...
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18:if(minArgs>numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

INSERT:
22:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
TO:
20

INSERT:
24:}

TO:
20

Following are 4th generated patches:
Validating 200 patches...
Current actions:
INSERT:
22:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
TO:
20

INSERT:
24:}

TO:
20

Tested:2263 patches
Compile failed:2233 patches
Compilation rate:0.013256738842244807
PPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/8.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/8.java
Current actions:
Wrap:
MethodDeclaration
On:
[int numArgs=call.getChildCount()-1;, int minArgs=functionType.getMinArguments();, int maxArgs=functionType.getMaxArguments();, if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}, {
Iterator<Node> arguments=call.children().iterator();
arguments.next();
Iterator<Node> parameters=functionType.getParameters().iterator();
int ordinal=0;
Node parameter=null;
Node argument=null;
while(arguments.hasNext()&&parameters.hasNext()){
parameter=parameters.next();
argument=arguments.next();
ordinal++;
validator.expectArgumentMatchesParameter(t,argument,getJSType(argument),getJSType(parameter),call,ordinal);
}
int numArgs=call.getChildCount()-1;
int minArgs=functionType.getMinArguments();
int maxArgs=functionType.getMaxArguments();
if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
}, ordinal++;, validator.expectArgumentMatchesParameter(t,argument,getJSType(argument),getJSType(parameter),call,ordinal);, Iterator<Node> arguments=call.children().iterator();, arguments.next();, Iterator<Node> parameters=functionType.getParameters().iterator();]
Following are 0th generated patches:
Validating 1 patches...
Current actions:
DELETE:
Original line: 2{
Iterator<Node> arguments=call.children().iterator();
arguments.next();
Iterator<Node> parameters=functionType.getParameters().iterator();
int ordinal=0;
Node parameter=null;
Node argument=null;
while(arguments.hasNext()&&parameters.hasNext()){
parameter=parameters.next();
argument=arguments.next();
ordinal++;
validator.expectArgumentMatchesParameter(t,argument,getJSType(argument),getJSType(parameter),call,ordinal);
}
int numArgs=call.getChildCount()-1;
int minArgs=functionType.getMinArguments();
int maxArgs=functionType.getMaxArguments();
if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
}

INSERT:
2:private void visitParameterList(NodeTraversal t,Node call,FunctionType functionType){
int numArgs=call.getChildCount()-1;
int minArgs=functionType.getMinArguments();
int maxArgs=functionType.getMaxArguments();
if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
Iterator<Node> arguments=call.children().iterator();
arguments.next();
Iterator<Node> parameters=functionType.getParameters().iterator();
int ordinal=0;
Node parameter=null;
Node argument=null;
while(arguments.hasNext()&&parameters.hasNext()){
parameter=parameters.next();
argument=arguments.next();
ordinal++;
validator.expectArgumentMatchesParameter(t,argument,getJSType(argument),getJSType(parameter),call,ordinal);
}
}
TO:
1

DELETE:
Original line: 3Iterator<Node> arguments=call.children().iterator();

DELETE:
Original line: 4arguments.next();

DELETE:
Original line: 5Iterator<Node> parameters=functionType.getParameters().iterator();

DELETE:
Original line: 12ordinal++;

DELETE:
Original line: 13validator.expectArgumentMatchesParameter(t,argument,getJSType(argument),getJSType(parameter),call,ordinal);

DELETE:
Original line: 15int numArgs=call.getChildCount()-1;

DELETE:
Original line: 16int minArgs=functionType.getMinArguments();

DELETE:
Original line: 17int maxArgs=functionType.getMaxArguments();

DELETE:
Original line: 18if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

Following are 1th generated patches:
Validating 1 patches...
Tested:2265 patches
Compile failed:2235 patches
Compilation rate:0.013245033112582781
NN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/9.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/9.java
Tested:2265 patches
Compile failed:2235 patches
Compilation rate:0.013245033112582781

Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/10.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/10.java
Current actions:
INSERT:
20:return ;
TO:
19

Following are 0th generated patches:
Validating 105 patches...
Current actions:
INSERT:
22:if(call.getChildCount()>1&&functionType.isVarArgs()){
Node lastArgument=call.getLastChild();
JSType lastArgumentType=getJSType(lastArgument);
if(lastArgumentType.isArrayType()&&getNativeType(ARRAY_TYPE).isSubtypeOf(lastArgumentType)&&lastArgument.getType()==Token.ARRAYLIT){
JSType lastParameter=functionType.getParameters().getLast();
if(getNativeType(ARRAY_TYPE).isSubtypeOf(getJSType(lastParameter))){
int lastArgLength=getNativeType(ARRAY_TYPE).cast(lastArgumentType).evaluate(lastArgument).length;
int lastParamLength=getNativeType(ARRAY_TYPE).evaluate(getJSType(lastParameter)).length;
if(lastArgLength!=lastParamLength){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
}
}
}
TO:
19

Following are 1th generated patches:
Validating 1 patches...
Current actions:
INSERT:
25:if(lastArgumentType.isArrayType()&&getNativeType(ARRAY_TYPE).isSubtypeOf(lastArgumentType)&&lastArgument.getType()==Token.ARRAYLIT){
JSType lastParameter=functionType.getParameters().getLast();
if(getNativeType(ARRAY_TYPE).isSubtypeOf(getJSType(lastParameter))){
int lastArgLength=getNativeType(ARRAY_TYPE).cast(lastArgumentType).evaluate(lastArgument).length;
int lastParamLength=getNativeType(ARRAY_TYPE).evaluate(getJSType(lastParameter)).length;
if(lastArgLength!=lastParamLength){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
}
}
TO:
19

Following are 2th generated patches:
Validating 1 patches...
Current actions:
INSERT:
21:}

TO:
19

INSERT:
23:Node lastArgument=call.getLastChild();
TO:
19

INSERT:
24:JSType lastArgumentType=getJSType(lastArgument);
TO:
19

INSERT:
25:if(lastArgumentType.isArrayType()&&getNativeType(ARRAY_TYPE).isSubtypeOf(lastArgumentType)&&lastArgument.getType()==Token.ARRAYLIT){
JSType lastParameter=functionType.getParameters().getLast();
if(getNativeType(ARRAY_TYPE).isSubtypeOf(getJSType(lastParameter))){
int lastArgLength=getNativeType(ARRAY_TYPE).cast(lastArgumentType).evaluate(lastArgument).length;
int lastParamLength=getNativeType(ARRAY_TYPE).evaluate(getJSType(lastParameter)).length;
if(lastArgLength!=lastParamLength){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
}
}
TO:
19

Tested:2372 patches
Compile failed:2336 patches
Compilation rate:0.01517706576728499
NNNNNNNNNNNNNNNPNNNNPNNNNNNNNNPPNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/11.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/11.java
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18:if(minArgs>numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

Following are 0th generated patches:
Validating 7 patches...
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18:if(minArgs>numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

Following are 1th generated patches:
Validating 1 patches...
Current actions:
INSERT:
19:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
TO:
18

INSERT:
21:else{
if(maxArgs!=Integer.MAX_VALUE&&numArgs>maxArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
}
TO:
18

Following are 2th generated patches:
Validating 200 patches...
Current actions:
INSERT:
19:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
TO:
18

Following are 3th generated patches:
Validating 200 patches...
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18:if(minArgs>numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

INSERT:
19:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
TO:
18

INSERT:
21:else{
if(maxArgs!=Integer.MAX_VALUE&&numArgs>maxArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
}
TO:
18

Following are 4th generated patches:
Validating 200 patches...
Tested:2979 patches
Compile failed:2938 patches
Compilation rate:0.013763007720711649

Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/12.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/12.java
Current actions:
INSERT:
21:else{
if(functionType.hasVarArgs()&&numArgs<minArgs){
report(t,call,MISSING_ARGUMENTS,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(minArgs-numArgs));
}
}
TO:
20

Following are 0th generated patches:
Validating 2 patches...
Current actions:
INSERT:
22:report(t,call,MISSING_ARGUMENTS,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(minArgs-numArgs));
TO:
20

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
21:else{
if(functionType.hasVarArgs()&&numArgs<minArgs){
report(t,call,MISSING_ARGUMENTS,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(minArgs-numArgs));
}
}
TO:
20

Following are 2th generated patches:
Validating 1 patches...
Tested:3182 patches
Compile failed:3140 patches
Compilation rate:0.013199245757385292
NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/13.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/13.java
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18:if(minArgs>numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

Following are 0th generated patches:
Validating 7 patches...
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18:if(minArgs>numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

Following are 1th generated patches:
Validating 1 patches...
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18:if(minArgs>numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

INSERT:
19:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
TO:
18

Following are 2th generated patches:
Validating 200 patches...
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18:if(minArgs>numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

INSERT:
19:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
TO:
18

INSERT:
21:else{
if(maxArgs!=Integer.MAX_VALUE&&maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
}
TO:
18

Following are 3th generated patches:
Validating 200 patches...
Current actions:
INSERT:
19:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
TO:
18

INSERT:
21:else{
if(maxArgs!=Integer.MAX_VALUE&&maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
}
TO:
18

Following are 4th generated patches:
Validating 200 patches...
Tested:3789 patches
Compile failed:3741 patches
Compilation rate:0.012668250197941409

Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/14.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/14.java
Current actions:
DELETE:
Original line: 5Iterator<Node> parameters=functionType.getParameters().iterator();

Following are 0th generated patches:
Validating 21 patches...
Current actions:
DELETE:
Original line: 7Node parameter=null;

INSERT:
7:for(Node parameter : functionType.getParameters()){
ordinal++;
argument=arguments.next();
validator.expectArgumentMatchesParameter(t,argument,getJSType(argument),getJSType(parameter),call,ordinal);
}
TO:
8

DELETE:
Original line: 10parameter=parameters.next();

DELETE:
Original line: 11argument=arguments.next();

DELETE:
Original line: 12ordinal++;

DELETE:
Original line: 13validator.expectArgumentMatchesParameter(t,argument,getJSType(argument),getJSType(parameter),call,ordinal);

Following are 1th generated patches:
Validating 3 patches...
Current actions:
DELETE:
Original line: 5Iterator<Node> parameters=functionType.getParameters().iterator();

DELETE:
Original line: 9while(arguments.hasNext()&&parameters.hasNext()){
parameter=parameters.next();
argument=arguments.next();
ordinal++;
validator.expectArgumentMatchesParameter(t,argument,getJSType(argument),getJSType(parameter),call,ordinal);
}

Following are 2th generated patches:
Validating 2 patches...
Current actions:
DELETE:
Original line: 7Node parameter=null;

DELETE:
Original line: 10parameter=parameters.next();

Following are 3th generated patches:
Validating 2 patches...
Current actions:
INSERT:
7:for(Node parameter : functionType.getParameters()){
ordinal++;
argument=arguments.next();
validator.expectArgumentMatchesParameter(t,argument,getJSType(argument),getJSType(parameter),call,ordinal);
}
TO:
8

DELETE:
Original line: 9while(arguments.hasNext()&&parameters.hasNext()){
parameter=parameters.next();
argument=arguments.next();
ordinal++;
validator.expectArgumentMatchesParameter(t,argument,getJSType(argument),getJSType(parameter),call,ordinal);
}

Following are 4th generated patches:
Validating 2 patches...
Current actions:
DELETE:
Original line: 5Iterator<Node> parameters=functionType.getParameters().iterator();

DELETE:
Original line: 7Node parameter=null;

INSERT:
7:for(Node parameter : functionType.getParameters()){
ordinal++;
argument=arguments.next();
validator.expectArgumentMatchesParameter(t,argument,getJSType(argument),getJSType(parameter),call,ordinal);
}
TO:
8

DELETE:
Original line: 10parameter=parameters.next();

DELETE:
Original line: 11argument=arguments.next();

DELETE:
Original line: 12ordinal++;

DELETE:
Original line: 13validator.expectArgumentMatchesParameter(t,argument,getJSType(argument),getJSType(parameter),call,ordinal);

Tested:3805 patches
Compile failed:3749 patches
Compilation rate:0.014717477003942181
NNNNNNPPPPPPPPNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/15.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/15.java
Current actions:
INSERT:
19:String argsString="";
TO:
18

Following are 0th generated patches:
Validating 31 patches...
Current actions:
INSERT:
20:if(numArgs!=1){
argsString="arguments";
}
TO:
18

Following are 1th generated patches:
Validating 142 patches...
Current actions:
INSERT:
20:if(numArgs!=1){
argsString="arguments";
}
TO:
18

INSERT:
23:else{
argsString="argument";
}
TO:
18

Following are 2th generated patches:
Validating 143 patches...
Current actions:
INSERT:
24:argsString="argument";
TO:
18

Following are 3th generated patches:
Validating 1 patches...
Current actions:
INSERT:
19:String argsString="";
TO:
18

INSERT:
20:if(numArgs!=1){
argsString="arguments";
}
TO:
18

UPDATE
FROM:
19:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
TO:
26:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),argsString,String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");

Following are 4th generated patches:
Validating 200 patches...
Current actions:
INSERT:
19:String argsString="";
TO:
18

INSERT:
20:if(numArgs!=1){
argsString="arguments";
}
TO:
18

INSERT:
23:else{
argsString="argument";
}
TO:
18

UPDATE
FROM:
19:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
TO:
26:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),argsString,String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");

Tested:4319 patches
Compile failed:4249 patches
Compilation rate:0.01620745542949757
NNNNNNNNNNNNNPNPNNPPPPNPNNNPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/16.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/16.java
Tested:4319 patches
Compile failed:4249 patches
Compilation rate:0.01620745542949757

Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/17.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/17.java
Current actions:
DELETE:
Original line: 19report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");

Following are 0th generated patches:
Validating 51 patches...
Current actions:
INSERT:
20:if(maxArgs!=Integer.MAX_VALUE){
argsStr=String.format("between %d and %d arguments",minArgs,maxArgs);
}
TO:
18

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
19:String argsStr=null;
TO:
18

INSERT:
20:if(maxArgs!=Integer.MAX_VALUE){
argsStr=String.format("between %d and %d arguments",minArgs,maxArgs);
}
TO:
18

INSERT:
24:argsStr=String.format("at least %d argument(s)",minArgs);
TO:
18

Following are 2th generated patches:
Validating 200 patches...
Current actions:
DELETE:
Original line: 19report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");

INSERT:
19:String argsStr=null;
TO:
18

INSERT:
20:if(maxArgs!=Integer.MAX_VALUE){
argsStr=String.format("between %d and %d arguments",minArgs,maxArgs);
}
TO:
18

INSERT:
24:argsStr=String.format("at least %d argument(s)",minArgs);
TO:
18

INSERT:
26:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),argsStr,"");
TO:
18

Following are 3th generated patches:
Validating 200 patches...
Tested:4966 patches
Compile failed:4869 patches
Compilation rate:0.019532823197744662
NNNNNNNNNNNNNPPPPPPNNNNNNNNNNNNPPNPPNNNNPNPPNPPNNPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNPN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/18.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/18.java
Current actions:
Move
FROM:
Former Line 15:int numArgs=call.getChildCount()-1;
TO:
Current Line 2:Block

Following are 0th generated patches:
Validating 200 patches...
Current actions:
INSERT:
7:if(!functionType.hasFixedArity()){
return ;
}
TO:
6

Following are 1th generated patches:
Validating 200 patches...
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
13:if(minArguments>numArgs||maxArguments<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArguments),maxArguments!=Integer.MAX_VALUE?" and no more than "+maxArguments+" argument(s)":"");
}

Following are 2th generated patches:
Validating 1 patches...
Current actions:
DELETE:
Original line: 8Node argument=null;

INSERT:
10:int numParameters=functionType.getParameters().size();
TO:
6

UPDATE
FROM:
16:int minArgs=functionType.getMinArguments();
TO:
11:int minArguments=functionType.getMinArguments();

DELETE:
Original line: 11argument=arguments.next();

UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
13:if(minArguments>numArgs||maxArguments<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArguments),maxArguments!=Integer.MAX_VALUE?" and no more than "+maxArguments+" argument(s)":"");
}

INSERT:
21:Node parameter=parameters.next();
TO:
9

Following are 3th generated patches:
Validating 200 patches...
Tested:5482 patches
Compile failed:5385 patches
Compilation rate:0.017694272163444

Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/19.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/19.java
Current actions:
DELETE:
Original line: 19report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");

Following are 0th generated patches:
Validating 78 patches...
Current actions:
INSERT:
21:if(minArgs!=maxArgs){
extraMessage=" between "+minArgs+" and "+maxArgs+" argument(s)";
}
TO:
18

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
20:String extraMessage="";
TO:
18

Following are 2th generated patches:
Validating 1 patches...
Current actions:
INSERT:
21:if(minArgs!=maxArgs){
extraMessage=" between "+minArgs+" and "+maxArgs+" argument(s)";
}
TO:
18

INSERT:
27:report(t,call,WRONG_ARGUMENT_COUNT,functionName,String.valueOf(numArgs),extraMessage);
TO:
18

Following are 3th generated patches:
Validating 200 patches...
Current actions:
DELETE:
Original line: 19report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");

INSERT:
21:if(minArgs!=maxArgs){
extraMessage=" between "+minArgs+" and "+maxArgs+" argument(s)";
}
TO:
18

INSERT:
25:extraMessage=" at least "+minArgs+" argument(s)";
TO:
18

INSERT:
27:report(t,call,WRONG_ARGUMENT_COUNT,functionName,String.valueOf(numArgs),extraMessage);
TO:
18

Following are 4th generated patches:
Validating 200 patches...
Tested:6159 patches
Compile failed:6041 patches
Compilation rate:0.019158954375710344
NNNNNNNNNNNNNPPPNNNNNPNPNPNPNNNNNNNNNNNNNNNPNNNPPPNNNNNNNNNNPPNPNPNNNNNNNPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/20.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/20.java
Current actions:
DELETE:
Original line: 3Iterator<Node> arguments=call.children().iterator();

Following are 0th generated patches:
Validating 200 patches...
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
6:if(numArgs<minArgs||numArgs>maxArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

Following are 1th generated patches:
Validating 1 patches...
Current actions:
DELETE:
Original line: 5Iterator<Node> parameters=functionType.getParameters().iterator();

DELETE:
Original line: 8Node argument=null;

Following are 2th generated patches:
Validating 2 patches...
Current actions:
DELETE:
Original line: 3Iterator<Node> arguments=call.children().iterator();

DELETE:
Original line: 4arguments.next();

DELETE:
Original line: 5Iterator<Node> parameters=functionType.getParameters().iterator();

DELETE:
Original line: 6int ordinal=0;

UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
6:if(numArgs<minArgs||numArgs>maxArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

DELETE:
Original line: 8Node argument=null;

DELETE:
Original line: 11argument=arguments.next();

DELETE:
Original line: 12ordinal++;

DELETE:
Original line: 13validator.expectArgumentMatchesParameter(t,argument,getJSType(argument),getJSType(parameter),call,ordinal);

Following are 3th generated patches:
Validating 9 patches...
Current actions:
DELETE:
Original line: 5Iterator<Node> parameters=functionType.getParameters().iterator();

DELETE:
Original line: 8Node argument=null;

DELETE:
Original line: 12ordinal++;

Following are 4th generated patches:
Validating 3 patches...
Current actions:
DELETE:
Original line: 3Iterator<Node> arguments=call.children().iterator();

DELETE:
Original line: 5Iterator<Node> parameters=functionType.getParameters().iterator();

DELETE:
Original line: 6int ordinal=0;

UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
6:if(numArgs<minArgs||numArgs>maxArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

DELETE:
Original line: 7Node parameter=null;

DELETE:
Original line: 9while(arguments.hasNext()&&parameters.hasNext()){
parameter=parameters.next();
argument=arguments.next();
ordinal++;
validator.expectArgumentMatchesParameter(t,argument,getJSType(argument),getJSType(parameter),call,ordinal);
}

Tested:6364 patches
Compile failed:6197 patches
Compilation rate:0.026241357636706476
NNNNNNNNNNNNNNNNNPNPNNNNNNNNPNNNNNNNNNNNNNNNNNNNNPNNPNNNNPPPPNPNNNPNNNPNNNNPPPPNPPNNNNNNPNNNNNNNNNNNPNNNNNNPNNNNNPNNNNNNNNNNNNNPPPPPPNNNNNNNPNNNPNNNNNPNNNPPPPPNNPNNNNPNNNPPPPPPPNNNNNNNNNNNNPNNNNPNNNNPPNNNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/21.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/21.java
Current actions:
DELETE:
Original line: 13validator.expectArgumentMatchesParameter(t,argument,getJSType(argument),getJSType(parameter),call,ordinal);

Following are 0th generated patches:
Validating 5 patches...
Current actions:
INSERT:
13:if(validator.expectArgumentMatchesParameter(t,argument,getJSType(argument),getJSType(parameter),call,ordinal)){
break;
}
TO:
12

Following are 1th generated patches:
Validating 200 patches...
Current actions:
DELETE:
Original line: 13validator.expectArgumentMatchesParameter(t,argument,getJSType(argument),getJSType(parameter),call,ordinal);

Following are 2th generated patches:
Validating 1 patches...
Current actions:
INSERT:
14:break;
TO:
12

Following are 3th generated patches:
Validating 1 patches...
Current actions:
INSERT:
13:if(validator.expectArgumentMatchesParameter(t,argument,getJSType(argument),getJSType(parameter),call,ordinal)){
break;
}
TO:
12

DELETE:
Original line: 13validator.expectArgumentMatchesParameter(t,argument,getJSType(argument),getJSType(parameter),call,ordinal);

Following are 4th generated patches:
Validating 200 patches...
Current actions:
DELETE:
Original line: 13validator.expectArgumentMatchesParameter(t,argument,getJSType(argument),getJSType(parameter),call,ordinal);

INSERT:
14:break;
TO:
12

Tested:6770 patches
Compile failed:6600 patches
Compilation rate:0.025110782865583457
NNNPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/22.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/22.java
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18:if(minArgs>numArgs||(maxArgs!=Integer.MAX_VALUE&&maxArgs<numArgs)){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

Following are 0th generated patches:
Validating 1 patches...
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18:if(minArgs>numArgs||(maxArgs!=Integer.MAX_VALUE&&maxArgs<numArgs)){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

Following are 0th generated patches:
Validating 1 patches...
Tested:6772 patches
Compile failed:6600 patches
Compilation rate:0.025398700531600708
PP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/23.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/23.java
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18:if(minArgs>numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

Following are 0th generated patches:
Validating 1 patches...
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18:if(minArgs>numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

Following are 0th generated patches:
Validating 1 patches...
Tested:6774 patches
Compile failed:6600 patches
Compilation rate:0.025686448184233834
PP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/24.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/24.java
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18:if(minArgs>numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

Following are 0th generated patches:
Validating 7 patches...
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18:if(minArgs>numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

Following are 1th generated patches:
Validating 1 patches...
Current actions:
INSERT:
21:if(maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18

Following are 2th generated patches:
Validating 200 patches...
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18:if(minArgs>numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

INSERT:
21:if(maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18

Following are 3th generated patches:
Validating 200 patches...
Current actions:
UPDATE
FROM:
18:if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18:if(minArgs>numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

INSERT:
19:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
TO:
18

INSERT:
21:if(maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
18

Following are 4th generated patches:
Validating 200 patches...
Tested:7381 patches
Compile failed:7194 patches
Compilation rate:0.02533532041728763

Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/25.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/25.java
Current actions:
INSERT:
6:if(numArgs==-1){
numArgs=call.getChildCount()-1;
}
TO:
2

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
22:if(paramIndex>=numArgs){
return ;
}
TO:
19

Following are 2th generated patches:
Validating 200 patches...
Current actions:
DELETE:
Original line: 7Node parameter=null;

DELETE:
Original line: 8Node argument=null;

DELETE:
Original line: 12ordinal++;

INSERT:
14:}

TO:
19

INSERT:
17:Node parameter=null;
TO:
19

INSERT:
20:ordinal++;
TO:
19

INSERT:
22:if(paramIndex>=numArgs){
return ;
}
TO:
19

Following are 3th generated patches:
Validating 200 patches...
Current actions:
INSERT:
3:Node firstArg=call.getChildAtIndex(1);
TO:
2

DELETE:
Original line: 3Iterator<Node> arguments=call.children().iterator();

DELETE:
Original line: 4arguments.next();

INSERT:
4:Node lastArg=call.getLastChild();
TO:
2

INSERT:
5:int numArgs=lastArg.getIntProp(Node.END_OF_STATEMENT_PROP);
TO:
2

DELETE:
Original line: 5Iterator<Node> parameters=functionType.getParameters().iterator();

INSERT:
6:if(numArgs==-1){
numArgs=call.getChildCount()-1;
}
TO:
2

DELETE:
Original line: 6int ordinal=0;

DELETE:
Original line: 9while(arguments.hasNext()&&parameters.hasNext()){
parameter=parameters.next();
argument=arguments.next();
ordinal++;
validator.expectArgumentMatchesParameter(t,argument,getJSType(argument),getJSType(parameter),call,ordinal);
}

INSERT:
13:return ;
TO:
19

INSERT:
14:}

TO:
19

INSERT:
15:Iterator<Node> parameters=functionType.getParameters().iterator();
TO:
19

INSERT:
16:int ordinal=0;
TO:
19

INSERT:
18:while(parameters.hasNext()){
parameter=parameters.next();
ordinal++;
int paramIndex=ordinal-1;
if(paramIndex>=numArgs){
return ;
}
validator.expectArgumentMatchesParameter(t,firstArg.getNext(),getJSType(firstArg.getNext()),getJSType(parameter),call,ordinal);
}
TO:
19

Following are 4th generated patches:
Validating 200 patches...
Tested:8175 patches
Compile failed:7972 patches
Compilation rate:0.024831804281345567

Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/26.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/26.java
Current actions:
INSERT:
15:if(functionType.isVarArgs()){
int numArgs=call.getChildCount()-1;
int minArgs=functionType.getMinArguments();
int maxArgs=functionType.getMaxArguments();
if(minArgs>numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
}
TO:
14

Following are 0th generated patches:
Validating 197 patches...
Current actions:
INSERT:
15:if(functionType.isVarArgs()){
int numArgs=call.getChildCount()-1;
int minArgs=functionType.getMinArguments();
int maxArgs=functionType.getMaxArguments();
if(minArgs>numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
}
TO:
14

Following are 1th generated patches:
Validating 1 patches...
Current actions:
INSERT:
19:if(minArgs>numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
TO:
14

DELETE:
Original line: 19report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");

Following are 2th generated patches:
Validating 200 patches...
Current actions:
DELETE:
Original line: 16int minArgs=functionType.getMinArguments();

INSERT:
17:int minArgs=functionType.getMinArguments();
TO:
14

INSERT:
26:int maxArgs=functionType.getMaxArguments();
TO:
14

Following are 3th generated patches:
Validating 200 patches...
Current actions:
DELETE:
Original line: 15int numArgs=call.getChildCount()-1;

INSERT:
15:if(functionType.isVarArgs()){
int numArgs=call.getChildCount()-1;
int minArgs=functionType.getMinArguments();
int maxArgs=functionType.getMaxArguments();
if(minArgs>numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
}
TO:
14

DELETE:
Original line: 16int minArgs=functionType.getMinArguments();

DELETE:
Original line: 17int maxArgs=functionType.getMaxArguments();

DELETE:
Original line: 18if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

INSERT:
23:else{
int numArgs=call.getChildCount()-1;
int minArgs=functionType.getMinArguments();
int maxArgs=functionType.getMaxArguments();
if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}
}
TO:
14

Following are 4th generated patches:
Validating 1 patches...
Tested:8604 patches
Compile failed:8400 patches
Compilation rate:0.023709902370990237
NNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/27.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/27.java
Current actions:
INSERT:
21:else{
int numParams=functionType.getParameters().size();
if(numArgs<numParams){
report(t,call,NOT_ENOUGH_ARGUMENTS,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(numParams));
}
}
TO:
20

Following are 0th generated patches:
Validating 6 patches...
Current actions:
INSERT:
23:if(numArgs<numParams){
report(t,call,NOT_ENOUGH_ARGUMENTS,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(numParams));
}
TO:
20

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
24:report(t,call,NOT_ENOUGH_ARGUMENTS,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(numParams));
TO:
20

Following are 2th generated patches:
Validating 200 patches...
Current actions:
INSERT:
21:else{
int numParams=functionType.getParameters().size();
if(numArgs<numParams){
report(t,call,NOT_ENOUGH_ARGUMENTS,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(numParams));
}
}
TO:
20

Following are 3th generated patches:
Validating 1 patches...
Current actions:
INSERT:
22:int numParams=functionType.getParameters().size();
TO:
20

INSERT:
23:if(numArgs<numParams){
report(t,call,NOT_ENOUGH_ARGUMENTS,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(numParams));
}
TO:
20

Following are 4th generated patches:
Validating 200 patches...
Tested:9210 patches
Compile failed:9005 patches
Compilation rate:0.02225841476655809

Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/28.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/28.java
Current actions:
INSERT:
20:return ;
TO:
19

Following are 0th generated patches:
Validating 5 patches...
Current actions:
INSERT:
22:if(functionType.getMaxArguments()==Integer.MAX_VALUE&&numArgs<functionType.getMinArguments()-1){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(functionType.getMinArguments()-1),"or more");
}
TO:
19

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
20:return ;
TO:
19

INSERT:
21:}

TO:
19

INSERT:
23:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(functionType.getMinArguments()-1),"or more");
TO:
19

Following are 2th generated patches:
Validating 200 patches...
Current actions:
INSERT:
21:}

TO:
19

INSERT:
23:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(functionType.getMinArguments()-1),"or more");
TO:
19

Following are 3th generated patches:
Validating 200 patches...
Current actions:
INSERT:
20:return ;
TO:
19

INSERT:
21:}

TO:
19

INSERT:
22:if(functionType.getMaxArguments()==Integer.MAX_VALUE&&numArgs<functionType.getMinArguments()-1){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(functionType.getMinArguments()-1),"or more");
}
TO:
19

Following are 4th generated patches:
Validating 200 patches...
Tested:10013 patches
Compile failed:9804 patches
Compilation rate:0.020872865275142316
NNPPPNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/29.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/29.java
Current actions:
DELETE:
Original line: 3Iterator<Node> arguments=call.children().iterator();

Following are 0th generated patches:
Validating 200 patches...
Current actions:
INSERT:
13:if(arg!=null){
report(t,arg,DUPLICATE_ARGUMENTS);
}
TO:
13

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
19:if(numArgs<minArgs){
report(t,call,TOO_FEW_ARGUMENTS,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(minArgs),String.valueOf(numArgs));
}
TO:
17

Following are 2th generated patches:
Validating 200 patches...
Current actions:
INSERT:
3:Node arg=call.getFirstChild().getNext();
TO:
2

DELETE:
Original line: 4arguments.next();

UPDATE
FROM:
9:while(arguments.hasNext()&&parameters.hasNext()){
parameter=parameters.next();
argument=arguments.next();
ordinal++;
validator.expectArgumentMatchesParameter(t,argument,getJSType(argument),getJSType(parameter),call,ordinal);
}
TO:
7:while(arg!=null&&parameters.hasNext()){
parameter=parameters.next();
ordinal++;
validator.expectArgumentMatchesParameter(t,arg,getJSType(arg),getJSType(parameter),call,ordinal);
arg=arg.getNext();
}

DELETE:
Original line: 8Node argument=null;

INSERT:
11:arg=arg.getNext();
TO:
13

INSERT:
13:if(arg!=null){
report(t,arg,DUPLICATE_ARGUMENTS);
}
TO:
13

DELETE:
Original line: 15int numArgs=call.getChildCount()-1;

INSERT:
18:int numArgs=call.getChildCount()-1;
TO:
17

DELETE:
Original line: 18if(minArgs>numArgs||maxArgs<numArgs){
report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
}

INSERT:
19:if(numArgs<minArgs){
report(t,call,TOO_FEW_ARGUMENTS,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(minArgs),String.valueOf(numArgs));
}
TO:
17

INSERT:
22:else{
if(numArgs>maxArgs){
report(t,call,TOO_MANY_ARGUMENTS,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(maxArgs));
}
}
TO:
17

Following are 3th generated patches:
Validating 200 patches...
Tested:10789 patches
Compile failed:10562 patches
Compilation rate:0.021039948095282233

Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/30.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/30.java
Current actions:
INSERT:
19:String functionName=call.getFirstChild().getQualifiedName();
TO:
18

Following are 0th generated patches:
Validating 7 patches...
Current actions:
INSERT:
19:String functionName=call.getFirstChild().getQualifiedName();
TO:
18

INSERT:
20:String args=numArgs>0?numArgs+" arguments":"no arguments";
TO:
18

UPDATE
FROM:
19:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),String.valueOf(numArgs),String.valueOf(minArgs),maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");
TO:
21:report(t,call,WRONG_ARGUMENT_COUNT,validator.getReadableJSTypeName(call.getFirstChild(),false),args,functionName,minArgs,maxArgs!=Integer.MAX_VALUE?" and no more than "+maxArgs+" argument(s)":"");

Following are 1th generated patches:
Validating 200 patches...
Tested:10994 patches
Compile failed:10764 patches
Compilation rate:0.02092050209205021
NNNNPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/31.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/closure_96/31.java
Current actions:
DELETE:
Original line: 5Iterator<Node> parameters=functionType.getParameters().iterator();

Following are 0th generated patches:
Validating 161 patches...
Current actions:
INSERT:
10:if(paramIndex>=functionType.getParameters().size()){
break;
}
TO:
8

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
8:int paramIndex=0;
TO:
8

INSERT:
10:if(paramIndex>=functionType.getParameters().size()){
break;
}
TO:
8

Following are 2th generated patches:
Validating 200 patches...
Current actions:
INSERT:
8:int paramIndex=0;
TO:
8

DELETE:
Original line: 10parameter=parameters.next();

DELETE:
Original line: 11argument=arguments.next();

INSERT:
13:parameter=functionType.getParameters().get(paramIndex);
TO:
8

Following are 3th generated patches:
Validating 200 patches...
Current actions:
DELETE:
Original line: 5Iterator<Node> parameters=functionType.getParameters().iterator();

INSERT:
8:int paramIndex=0;
TO:
8

INSERT:
9:for(Node arg=arguments.next();arg!=null;arg=arguments.next(),paramIndex++){
if(paramIndex>=functionType.getParameters().size()){
break;
}
parameter=functionType.getParameters().get(paramIndex);
ordinal++;
validator.expectArgumentMatchesParameter(t,arg,getJSType(arg),getJSType(parameter),call,ordinal);
}
TO:
8

DELETE:
Original line: 9while(arguments.hasNext()&&parameters.hasNext()){
parameter=parameters.next();
argument=arguments.next();
ordinal++;
validator.expectArgumentMatchesParameter(t,argument,getJSType(argument),getJSType(parameter),call,ordinal);
}

Following are 4th generated patches:
Validating 73 patches...
Tested:11822 patches
Compile failed:11574 patches
Compilation rate:0.020977837929284385

Finish : closure-96 > patch : 0 | Start : Thu Apr 11 14:59:07 HKT 2024 | End : 2024.04.11 AD at 15:26:34 HKT
