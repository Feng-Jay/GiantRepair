Repair : time_24
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/0.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/0.java
Tested:0 patches
Compile failed:0 patches
Compilation rate:NaN

Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/1.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/1.java
Current actions:
DELETE:
Original line: 31if(iZone==null){
millis-=iOffset;
}

Following are 0th generated patches:
Validating 91 patches...
Current actions:
DELETE:
Original line: 31if(iZone==null){
millis-=iOffset;
}

DELETE:
Original line: 34else{
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}

Following are 1th generated patches:
Validating 2 patches...
Current actions:
DELETE:
Original line: 31if(iZone==null){
millis-=iOffset;
}

DELETE:
Original line: 35int offset=iZone.getOffsetFromLocal(millis);

DELETE:
Original line: 36millis-=offset;

DELETE:
Original line: 37if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}

Following are 2th generated patches:
Validating 4 patches...
Current actions:
DELETE:
Original line: 35int offset=iZone.getOffsetFromLocal(millis);

DELETE:
Original line: 38String message="Illegal instant due to time zone offset transition ("+iZone+')';

Following are 3th generated patches:
Validating 2 patches...
Current actions:
DELETE:
Original line: 34else{
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}

Following are 4th generated patches:
Validating 1 patches...
Current actions:
DELETE:
Original line: 32millis-=iOffset;

DELETE:
Original line: 34else{
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}

Tested:95 patches
Compile failed:62 patches
Compilation rate:0.3473684210526316
NNNNNNNNNNNNNNNNNPPNPPPPPPPNNNNNNNNNNNNNNNNPNNPNPNNNNNNNNPPNPPPNNNNNNNNNNPPPNPPNNNPPPPPPPPPPNNP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/2.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/2.java
Current actions:
DELETE:
Original line: 15saveField(DateTimeFieldType.year(),iDefaultYear);

Following are 0th generated patches:
Validating 36 patches...
Current actions:
DELETE:
Original line: 15saveField(DateTimeFieldType.year(),iDefaultYear);

INSERT:
15:return set(savedFields,count,iMillis,resetFields);
TO:
14

DELETE:
Original line: 16return computeMillis(resetFields,text);

DELETE:
Original line: 21for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}

Following are 1th generated patches:
Validating 196 patches...
Current actions:
DELETE:
Original line: 15saveField(DateTimeFieldType.year(),iDefaultYear);

INSERT:
15:return set(savedFields,count,iMillis,resetFields);
TO:
14

DELETE:
Original line: 16return computeMillis(resetFields,text);

INSERT:
20:millis=set(savedFields,count,millis,resetFields);
TO:
20

DELETE:
Original line: 21for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}

Following are 2th generated patches:
Validating 200 patches...
Current actions:
DELETE:
Original line: 15saveField(DateTimeFieldType.year(),iDefaultYear);

DELETE:
Original line: 16return computeMillis(resetFields,text);

INSERT:
20:millis=set(savedFields,count,millis,resetFields);
TO:
20

DELETE:
Original line: 21for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}

Following are 3th generated patches:
Validating 196 patches...
Current actions:
DELETE:
Original line: 15saveField(DateTimeFieldType.year(),iDefaultYear);

INSERT:
15:return set(savedFields,count,iMillis,resetFields);
TO:
14

DELETE:
Original line: 22millis=savedFields[i].set(millis,resetFields);

Following are 4th generated patches:
Validating 195 patches...
Current actions:
DELETE:
Original line: 15saveField(DateTimeFieldType.year(),iDefaultYear);

DELETE:
Original line: 21for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}

Tested:906 patches
Compile failed:854 patches
Compilation rate:0.05739514348785872

Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/3.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/3.java
Current actions:
UPDATE
FROM:
35:int offset=iZone.getOffsetFromLocal(millis);
TO:
35:int offset=iZone.getOffset(millis);

Following are 0th generated patches:
Validating 1 patches...
Current actions:
UPDATE
FROM:
35:int offset=iZone.getOffsetFromLocal(millis);
TO:
35:int offset=iZone.getOffset(millis);

Following are 1th generated patches:
Validating 200 patches...
Tested:1107 patches
Compile failed:1048 patches
Compilation rate:0.053297199638663056
PNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNPNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/4.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/4.java
Current actions:
INSERT:
15:int baseYear=iDefaultYear;
TO:
14

Following are 0th generated patches:
Validating 41 patches...
Current actions:
INSERT:
15:int baseYear=iDefaultYear;
TO:
14

UPDATE
FROM:
15:saveField(DateTimeFieldType.year(),iDefaultYear);
TO:
16:saveField(DateTimeFieldType.year(),baseYear);

DELETE:
Original line: 16return computeMillis(resetFields,text);

INSERT:
17:long millis=computeMillis(resetFields,text);
TO:
15

INSERT:
18:resetField(DateTimeFieldType.year(),baseYear);
TO:
15

INSERT:
19:return millis;
TO:
15

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
15:int baseYear=iDefaultYear;
TO:
14

Following are 2th generated patches:
Validating 24 patches...
Current actions:
DELETE:
Original line: 16return computeMillis(resetFields,text);

INSERT:
18:resetField(DateTimeFieldType.year(),baseYear);
TO:
15

Following are 3th generated patches:
Validating 200 patches...
Current actions:
INSERT:
19:return millis;
TO:
15

Following are 4th generated patches:
Validating 24 patches...
Current actions:
UPDATE
FROM:
15:saveField(DateTimeFieldType.year(),iDefaultYear);
TO:
16:saveField(DateTimeFieldType.year(),baseYear);

INSERT:
18:resetField(DateTimeFieldType.year(),baseYear);
TO:
15

INSERT:
19:return millis;
TO:
15

Tested:1594 patches
Compile failed:1510 patches
Compilation rate:0.05269761606022585
NNNNNNNNNNNNNNNNNNNNNNNNNPNPPNNNPPNPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNPNNNNNNNNNNPNNNNPNNNNNNNNNNNNNNNNNNNNPPNNNNNNNNNNNNNNNPNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/5.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/5.java
Current actions:
UPDATE
FROM:
35:int offset=iZone.getOffsetFromLocal(millis);
TO:
35:int offset=iZone.getOffset(iMillis);

Following are 0th generated patches:
Validating 3 patches...
Current actions:
UPDATE
FROM:
36:millis-=offset;
TO:
36:millis+=offset;

Following are 1th generated patches:
Validating 1 patches...
Current actions:
UPDATE
FROM:
35:int offset=iZone.getOffsetFromLocal(millis);
TO:
35:int offset=iZone.getOffset(iMillis);

Following are 2th generated patches:
Validating 200 patches...
Current actions:
UPDATE
FROM:
35:int offset=iZone.getOffsetFromLocal(millis);
TO:
35:int offset=iZone.getOffset(iMillis);

UPDATE
FROM:
36:millis-=offset;
TO:
36:millis+=offset;

Following are 3th generated patches:
Validating 200 patches...
Tested:1997 patches
Compile failed:1897 patches
Compilation rate:0.0500751126690035
PPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNPNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/6.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/6.java
Current actions:
Wrap:
MethodDeclaration
On:
[for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}, long millis=iMillis;, {
millis-=iOffset;
}, if(iZone==null){
millis-=iOffset;
}, millis-=iOffset;]
Following are 0th generated patches:
Validating 25 patches...
Current actions:
INSERT:
2:public long computeMillis(boolean resetFields,String text){
SavedField[] savedFields=iSavedFields;
int count=iSavedFieldsCount;
if(iSavedFieldsShared){
iSavedFields=savedFields=(SavedField[])iSavedFields.clone();
iSavedFieldsShared=false;
}
sort(savedFields,count);
if(count>0){
DurationField months=DurationFieldType.months().getField(iChrono);
DurationField days=DurationFieldType.days().getField(iChrono);
DurationField first=savedFields[0].iField.getDurationField();
if(compareReverse(first,months)>=0&&compareReverse(first,days)<=0){
saveField(DateTimeFieldType.year(),iDefaultYear);
return computeMillis(resetFields,text);
}
}
long millis=iMillis;
for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}
if(iZone==null){
millis-=iOffset;
}
else{
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}
return millis;
}
TO:
1

DELETE:
Original line: 19long millis=iMillis;

DELETE:
Original line: 21for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}

DELETE:
Original line: 29throw e;

DELETE:
Original line: 31if(iZone==null){
millis-=iOffset;
}

Following are 1th generated patches:
Validating 2 patches...
Current actions:
INSERT:
2:public long computeMillis(boolean resetFields,String text){
SavedField[] savedFields=iSavedFields;
int count=iSavedFieldsCount;
if(iSavedFieldsShared){
iSavedFields=savedFields=(SavedField[])iSavedFields.clone();
iSavedFieldsShared=false;
}
sort(savedFields,count);
if(count>0){
DurationField months=DurationFieldType.months().getField(iChrono);
DurationField days=DurationFieldType.days().getField(iChrono);
DurationField first=savedFields[0].iField.getDurationField();
if(compareReverse(first,months)>=0&&compareReverse(first,days)<=0){
saveField(DateTimeFieldType.year(),iDefaultYear);
return computeMillis(resetFields,text);
}
}
long millis=iMillis;
for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}
if(iZone==null){
millis-=iOffset;
}
else{
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}
return millis;
}
TO:
1

DELETE:
Original line: 19long millis=iMillis;

DELETE:
Original line: 20{
for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}
}

DELETE:
Original line: 21for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}

DELETE:
Original line: 31if(iZone==null){
millis-=iOffset;
}

Following are 2th generated patches:
Validating 2 patches...
Current actions:
DELETE:
Original line: 25catch(IllegalFieldValueException e){
if(text!=null){
e.prependMessage("Cannot parse \""+text+'"');
}
throw e;
}

Following are 3th generated patches:
Validating 1 patches...
Current actions:
DELETE:
Original line: 20{
for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}
}

DELETE:
Original line: 25catch(IllegalFieldValueException e){
if(text!=null){
e.prependMessage("Cannot parse \""+text+'"');
}
throw e;
}

Following are 4th generated patches:
Validating 2 patches...
Current actions:
DELETE:
Original line: 27e.prependMessage("Cannot parse \""+text+'"');

Tested:2015 patches
Compile failed:1907 patches
Compilation rate:0.05359801488833747
NNNNNNNPPPPPPPNNNP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/7.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/7.java
Current actions:
INSERT:
45:if(resetFields){
if(count==1&&iSavedFields[0].iField==DateTimeFieldType.weekyear()){
iSavedFields[0].reset(millis);
}
}
TO:
44

Following are 0th generated patches:
Validating 3 patches...
Current actions:
INSERT:
45:if(resetFields){
if(count==1&&iSavedFields[0].iField==DateTimeFieldType.weekyear()){
iSavedFields[0].reset(millis);
}
}
TO:
44

Following are 1th generated patches:
Validating 33 patches...
Current actions:
INSERT:
46:if(count==1&&iSavedFields[0].iField==DateTimeFieldType.weekyear()){
iSavedFields[0].reset(millis);
}
TO:
44

Following are 2th generated patches:
Validating 200 patches...
Current actions:
INSERT:
47:iSavedFields[0].reset(millis);
TO:
44

Following are 3th generated patches:
Validating 1 patches...
Tested:2252 patches
Compile failed:2144 patches
Compilation rate:0.047957371225577264
NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/8.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/8.java
Current actions:
DELETE:
Original line: 20{
for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}
}

Following are 0th generated patches:
Validating 61 patches...
Current actions:
INSERT:
23:if(resetFields){
iSavedFieldsCount=0;
}
TO:
24

Following are 1th generated patches:
Validating 40 patches...
Current actions:
INSERT:
20:for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}
TO:
19

DELETE:
Original line: 20{
for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}
}

DELETE:
Original line: 21for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}

INSERT:
24:iSavedFieldsCount=0;
TO:
24

DELETE:
Original line: 25catch(IllegalFieldValueException e){
if(text!=null){
e.prependMessage("Cannot parse \""+text+'"');
}
throw e;
}

Following are 2th generated patches:
Validating 4 patches...
Current actions:
INSERT:
20:for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}
TO:
19

DELETE:
Original line: 20{
for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}
}

DELETE:
Original line: 21for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}

DELETE:
Original line: 25catch(IllegalFieldValueException e){
if(text!=null){
e.prependMessage("Cannot parse \""+text+'"');
}
throw e;
}

Following are 3th generated patches:
Validating 3 patches...
Current actions:
DELETE:
Original line: 20{
for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}
}

INSERT:
23:if(resetFields){
iSavedFieldsCount=0;
}
TO:
24

DELETE:
Original line: 26if(text!=null){
e.prependMessage("Cannot parse \""+text+'"');
}

DELETE:
Original line: 29throw e;

Following are 4th generated patches:
Validating 43 patches...
Current actions:
INSERT:
20:for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}
TO:
19

DELETE:
Original line: 20{
for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}
}

DELETE:
Original line: 21for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}

INSERT:
23:if(resetFields){
iSavedFieldsCount=0;
}
TO:
24

DELETE:
Original line: 25catch(IllegalFieldValueException e){
if(text!=null){
e.prependMessage("Cannot parse \""+text+'"');
}
throw e;
}

Tested:2372 patches
Compile failed:2255 patches
Compilation rate:0.049325463743676225
NNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/9.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/9.java
Current actions:
DELETE:
Original line: 32millis-=iOffset;

Following are 0th generated patches:
Validating 1 patches...
Current actions:
DELETE:
Original line: 32millis-=iOffset;

Following are 0th generated patches:
Validating 1 patches...
Tested:2374 patches
Compile failed:2255 patches
Compilation rate:0.05012636899747262
PP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/10.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/10.java
Current actions:
DELETE:
Original line: 31if(iZone==null){
millis-=iOffset;
}

Following are 0th generated patches:
Validating 11 patches...
Current actions:
INSERT:
31:if(iZone!=null){
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}
TO:
30

Following are 1th generated patches:
Validating 42 patches...
Current actions:
INSERT:
31:if(iZone!=null){
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}
TO:
30

DELETE:
Original line: 31if(iZone==null){
millis-=iOffset;
}

DELETE:
Original line: 34else{
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}

Following are 2th generated patches:
Validating 44 patches...
Current actions:
INSERT:
31:if(iZone!=null){
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}
TO:
30

DELETE:
Original line: 34else{
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}

Following are 3th generated patches:
Validating 43 patches...
Current actions:
INSERT:
31:if(iZone!=null){
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}
TO:
30

DELETE:
Original line: 32millis-=iOffset;

DELETE:
Original line: 34else{
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}

Following are 4th generated patches:
Validating 44 patches...
Current actions:
INSERT:
31:if(iZone!=null){
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}
TO:
30

DELETE:
Original line: 31if(iZone==null){
millis-=iOffset;
}

Tested:2553 patches
Compile failed:2360 patches
Compilation rate:0.07559733646690169
NPPPPPPPPPPNNNNNNNNNNPNNNPPPPPNNPPNPPPNNPNNPNNNNNNPPPNNNNNNNNNNNNPNNPPPNNPNPPNNNPPPPNNPNNNPNPPPNNNNNNNNPNNNNNPPPPPNNPNPNPNPPNPNNNNNPPNNPPNNNNNNNNNNNNPNNPPNPNPPNPNPNNPNPNPNNPPNNPPP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/11.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/11.java
Current actions:
Wrap:
MethodDeclaration
On:
[int offset=iZone.getOffsetFromLocal(millis);, millis-=offset;, if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}, return millis;, throw e;, {
millis-=iOffset;
}, if(iZone==null){
millis-=iOffset;
}]
Following are 0th generated patches:
Validating 14 patches...
Current actions:
DELETE:
Original line: 32millis-=iOffset;

INSERT:
32:return millis;
TO:
31

Following are 1th generated patches:
Validating 22 patches...
Current actions:
INSERT:
2:public long computeMillis(boolean resetFields,String text){
SavedField[] savedFields=iSavedFields;
int count=iSavedFieldsCount;
if(iSavedFieldsShared){
iSavedFields=savedFields=(SavedField[])iSavedFields.clone();
iSavedFieldsShared=false;
}
sort(savedFields,count);
if(count>0){
DurationField months=DurationFieldType.months().getField(iChrono);
DurationField days=DurationFieldType.days().getField(iChrono);
DurationField first=savedFields[0].iField.getDurationField();
if(compareReverse(first,months)>=0&&compareReverse(first,days)<=0){
saveField(DateTimeFieldType.year(),iDefaultYear);
return computeMillis(resetFields,text);
}
}
long millis=iMillis;
try{
for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}
}catch(IllegalFieldValueException e){
if(text!=null){
e.prependMessage("Cannot parse \""+text+'"');
}
throw e;
}
if(iZone==null){
return millis;
}
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
return millis;
}
TO:
1

DELETE:
Original line: 29throw e;

DELETE:
Original line: 31if(iZone==null){
millis-=iOffset;
}

DELETE:
Original line: 34else{
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}

DELETE:
Original line: 45return millis;

Following are 2th generated patches:
Validating 2 patches...
Current actions:
DELETE:
Original line: 32millis-=iOffset;

Following are 3th generated patches:
Validating 1 patches...
Current actions:
INSERT:
2:public long computeMillis(boolean resetFields,String text){
SavedField[] savedFields=iSavedFields;
int count=iSavedFieldsCount;
if(iSavedFieldsShared){
iSavedFields=savedFields=(SavedField[])iSavedFields.clone();
iSavedFieldsShared=false;
}
sort(savedFields,count);
if(count>0){
DurationField months=DurationFieldType.months().getField(iChrono);
DurationField days=DurationFieldType.days().getField(iChrono);
DurationField first=savedFields[0].iField.getDurationField();
if(compareReverse(first,months)>=0&&compareReverse(first,days)<=0){
saveField(DateTimeFieldType.year(),iDefaultYear);
return computeMillis(resetFields,text);
}
}
long millis=iMillis;
try{
for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}
}catch(IllegalFieldValueException e){
if(text!=null){
e.prependMessage("Cannot parse \""+text+'"');
}
throw e;
}
if(iZone==null){
return millis;
}
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
return millis;
}
TO:
1

DELETE:
Original line: 29throw e;

DELETE:
Original line: 31if(iZone==null){
millis-=iOffset;
}

INSERT:
32:return millis;
TO:
31

DELETE:
Original line: 34else{
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}

DELETE:
Original line: 45return millis;

Following are 4th generated patches:
Validating 23 patches...
Current actions:
INSERT:
2:public long computeMillis(boolean resetFields,String text){
SavedField[] savedFields=iSavedFields;
int count=iSavedFieldsCount;
if(iSavedFieldsShared){
iSavedFields=savedFields=(SavedField[])iSavedFields.clone();
iSavedFieldsShared=false;
}
sort(savedFields,count);
if(count>0){
DurationField months=DurationFieldType.months().getField(iChrono);
DurationField days=DurationFieldType.days().getField(iChrono);
DurationField first=savedFields[0].iField.getDurationField();
if(compareReverse(first,months)>=0&&compareReverse(first,days)<=0){
saveField(DateTimeFieldType.year(),iDefaultYear);
return computeMillis(resetFields,text);
}
}
long millis=iMillis;
try{
for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}
}catch(IllegalFieldValueException e){
if(text!=null){
e.prependMessage("Cannot parse \""+text+'"');
}
throw e;
}
if(iZone==null){
return millis;
}
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
return millis;
}
TO:
1

DELETE:
Original line: 29throw e;

DELETE:
Original line: 31if(iZone==null){
millis-=iOffset;
}

INSERT:
32:return millis;
TO:
31

DELETE:
Original line: 34else{
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}

DELETE:
Original line: 45return millis;

Tested:2605 patches
Compile failed:2391 patches
Compilation rate:0.08214971209213053
NNPPPPPPNNNNNNNNNPNNNNNPPPPPPNPNNNNNNNNNNNPNNNPPPPPP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/12.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/12.java
Current actions:
UPDATE
FROM:
35:int offset=iZone.getOffsetFromLocal(millis);
TO:
35:int offset=iZone.getOffset(millis);

Following are 0th generated patches:
Validating 7 patches...
Current actions:
UPDATE
FROM:
37:if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
TO:
36:if(offset!=iZone.getOffsetFromLocal(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}

Following are 1th generated patches:
Validating 1 patches...
Current actions:
UPDATE
FROM:
37:if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
TO:
36:if(offset!=iZone.getOffsetFromLocal(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}

DELETE:
Original line: 36millis-=offset;

Following are 2th generated patches:
Validating 2 patches...
Current actions:
UPDATE
FROM:
35:int offset=iZone.getOffsetFromLocal(millis);
TO:
35:int offset=iZone.getOffset(millis);

UPDATE
FROM:
37:if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
TO:
36:if(offset!=iZone.getOffsetFromLocal(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}

DELETE:
Original line: 36millis-=offset;

Following are 3th generated patches:
Validating 200 patches...
Current actions:
UPDATE
FROM:
35:int offset=iZone.getOffsetFromLocal(millis);
TO:
35:int offset=iZone.getOffset(millis);

DELETE:
Original line: 36millis-=offset;

Following are 4th generated patches:
Validating 200 patches...
Current actions:
DELETE:
Original line: 36millis-=offset;

Tested:3013 patches
Compile failed:2778 patches
Compilation rate:0.07799535346830401
PPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/13.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/13.java
Current actions:
UPDATE
FROM:
35:int offset=iZone.getOffsetFromLocal(millis);
TO:
35:int offset=iZone.getOffset(millis);

Following are 0th generated patches:
Validating 3 patches...
Current actions:
UPDATE
FROM:
35:int offset=iZone.getOffsetFromLocal(millis);
TO:
35:int offset=iZone.getOffset(millis);

UPDATE
FROM:
36:millis-=offset;
TO:
36:millis+=offset;

Following are 1th generated patches:
Validating 200 patches...
Current actions:
UPDATE
FROM:
36:millis-=offset;
TO:
36:millis+=offset;

Following are 2th generated patches:
Validating 1 patches...
Current actions:
UPDATE
FROM:
35:int offset=iZone.getOffsetFromLocal(millis);
TO:
35:int offset=iZone.getOffset(millis);

Following are 3th generated patches:
Validating 200 patches...
Tested:3416 patches
Compile failed:3165 patches
Compilation rate:0.07347775175644028
PPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/14.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/14.java
Current actions:
DELETE:
Original line: 32millis-=iOffset;

Following are 0th generated patches:
Validating 14 patches...
Current actions:
UPDATE
FROM:
37:if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
TO:
35:if(offset!=iZone.getOffset(millis+iOffset)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}

Following are 1th generated patches:
Validating 1 patches...
Current actions:
DELETE:
Original line: 32millis-=iOffset;

UPDATE
FROM:
35:int offset=iZone.getOffsetFromLocal(millis);
TO:
34:int offset=iZone.getOffset(millis);

UPDATE
FROM:
37:if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
TO:
35:if(offset!=iZone.getOffset(millis+iOffset)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}

DELETE:
Original line: 36millis-=offset;

Following are 2th generated patches:
Validating 200 patches...
Current actions:
UPDATE
FROM:
35:int offset=iZone.getOffsetFromLocal(millis);
TO:
34:int offset=iZone.getOffset(millis);

DELETE:
Original line: 36millis-=offset;

Following are 3th generated patches:
Validating 200 patches...
Current actions:
DELETE:
Original line: 32millis-=iOffset;

UPDATE
FROM:
35:int offset=iZone.getOffsetFromLocal(millis);
TO:
34:int offset=iZone.getOffset(millis);

UPDATE
FROM:
37:if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
TO:
35:if(offset!=iZone.getOffset(millis+iOffset)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}

Following are 4th generated patches:
Validating 200 patches...
Tested:4027 patches
Compile failed:3745 patches
Compilation rate:0.07002731561956792

Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/15.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/15.java
Current actions:
INSERT:
4:if(iSavedFieldsCount>0){
DurationField months=DurationFieldType.months().getField(iChrono);
DurationField days=DurationFieldType.days().getField(iChrono);
DurationField first=iSavedFields[0].iField.getDurationField();
if(compareReverse(first,months)>=0&&compareReverse(first,days)<=0){
iValues[4]=iDefaultYear;
millis=computeMillis(resetFields,text);
}
}
TO:
2

Following are 1th generated patches:
Validating 46 patches...
Current actions:
DELETE:
Original line: 3SavedField[] savedFields=iSavedFields;

INSERT:
4:if(iSavedFieldsCount>0){
DurationField months=DurationFieldType.months().getField(iChrono);
DurationField days=DurationFieldType.days().getField(iChrono);
DurationField first=iSavedFields[0].iField.getDurationField();
if(compareReverse(first,months)>=0&&compareReverse(first,days)<=0){
iValues[4]=iDefaultYear;
millis=computeMillis(resetFields,text);
}
}
TO:
2

DELETE:
Original line: 4int count=iSavedFieldsCount;

DELETE:
Original line: 7iSavedFieldsShared=false;

DELETE:
Original line: 9sort(savedFields,count);

DELETE:
Original line: 10if(count>0){
DurationField months=DurationFieldType.months().getField(iChrono);
DurationField days=DurationFieldType.days().getField(iChrono);
DurationField first=savedFields[0].iField.getDurationField();
if(compareReverse(first,months)>=0&&compareReverse(first,days)<=0){
saveField(DateTimeFieldType.year(),iDefaultYear);
return computeMillis(resetFields,text);
}
}

INSERT:
14:millis=iSavedFields[i].set(millis,resetFields);
TO:
24

DELETE:
Original line: 26if(text!=null){
e.prependMessage("Cannot parse \""+text+'"');
}

Following are 2th generated patches:
Validating 53 patches...
Current actions:
DELETE:
Original line: 21for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}

Following are 3th generated patches:
Validating 1 patches...
Current actions:
INSERT:
3:long millis=iMillis;
TO:
2

DELETE:
Original line: 4int count=iSavedFieldsCount;

DELETE:
Original line: 6iSavedFields=savedFields=(SavedField[])iSavedFields.clone();

DELETE:
Original line: 7iSavedFieldsShared=false;

UPDATE
FROM:
13:DurationField first=savedFields[0].iField.getDurationField();
TO:
7:DurationField first=iSavedFields[0].iField.getDurationField();

DELETE:
Original line: 10if(count>0){
DurationField months=DurationFieldType.months().getField(iChrono);
DurationField days=DurationFieldType.days().getField(iChrono);
DurationField first=savedFields[0].iField.getDurationField();
if(compareReverse(first,months)>=0&&compareReverse(first,days)<=0){
saveField(DateTimeFieldType.year(),iDefaultYear);
return computeMillis(resetFields,text);
}
}

INSERT:
10:millis=computeMillis(resetFields,text);
TO:
14

INSERT:
13:for(int i=0;i<iSavedFieldsCount;i++){
millis=iSavedFields[i].set(millis,resetFields);
}
TO:
24

DELETE:
Original line: 19long millis=iMillis;

DELETE:
Original line: 25catch(IllegalFieldValueException e){
if(text!=null){
e.prependMessage("Cannot parse \""+text+'"');
}
throw e;
}

Following are 4th generated patches:
Validating 200 patches...
Current actions:
INSERT:
14:millis=iSavedFields[i].set(millis,resetFields);
TO:
24

Tested:4312 patches
Compile failed:4029 patches
Compilation rate:0.06563079777365492
NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/16.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/16.java
Current actions:
UPDATE
FROM:
35:int offset=iZone.getOffsetFromLocal(millis);
TO:
35:int offset=iZone.getOffset(iMillis);

Following are 0th generated patches:
Validating 1 patches...
Current actions:
UPDATE
FROM:
35:int offset=iZone.getOffsetFromLocal(millis);
TO:
35:int offset=iZone.getOffset(iMillis);

Following are 1th generated patches:
Validating 200 patches...
Tested:4513 patches
Compile failed:4223 patches
Compilation rate:0.06425880788832262
PNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNPNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/17.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/17.java
Current actions:
INSERT:
3:if(iChrono==null){
return computeMillis(resetFields,text);
}
TO:
2

Following are 0th generated patches:
Validating 2 patches...
Current actions:
INSERT:
3:if(iChrono==null){
return computeMillis(resetFields,text);
}
TO:
2

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
4:return computeMillis(resetFields,text);
TO:
2

Following are 2th generated patches:
Validating 198 patches...
Tested:4913 patches
Compile failed:4596 patches
Compilation rate:0.06452269489110524
NPNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNPPNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNPNNPNNNPNNNNNNNNNNNNNNNNPNNPPPNNPNNNNNNPNNNNPNNNNNPNPNNPNNNNPNPNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNPNNNNNPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/18.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/18.java
Current actions:
DELETE:
Original line: 5if(iSavedFieldsShared){
iSavedFields=savedFields=(SavedField[])iSavedFields.clone();
iSavedFieldsShared=false;
}

Following are 0th generated patches:
Validating 200 patches...
Current actions:
INSERT:
7:if(iSavedFieldsShared){
savedFields=(SavedField[])iSavedFields.clone();
iSavedFieldsShared=false;
}
TO:
20

Following are 1th generated patches:
Validating 200 patches...
Current actions:
DELETE:
Original line: 3SavedField[] savedFields=iSavedFields;

DELETE:
Original line: 4int count=iSavedFieldsCount;

DELETE:
Original line: 5if(iSavedFieldsShared){
iSavedFields=savedFields=(SavedField[])iSavedFields.clone();
iSavedFieldsShared=false;
}

INSERT:
5:SavedField[] savedFields=iSavedFields;
TO:
20

INSERT:
6:int count=iSavedFieldsCount;
TO:
20

INSERT:
7:if(iSavedFieldsShared){
savedFields=(SavedField[])iSavedFields.clone();
iSavedFieldsShared=false;
}
TO:
20

DELETE:
Original line: 9sort(savedFields,count);

DELETE:
Original line: 10if(count>0){
DurationField months=DurationFieldType.months().getField(iChrono);
DurationField days=DurationFieldType.days().getField(iChrono);
DurationField first=savedFields[0].iField.getDurationField();
if(compareReverse(first,months)>=0&&compareReverse(first,days)<=0){
saveField(DateTimeFieldType.year(),iDefaultYear);
return computeMillis(resetFields,text);
}
}

INSERT:
11:sort(savedFields,count);
TO:
20

Following are 2th generated patches:
Validating 200 patches...
Current actions:
DELETE:
Original line: 3SavedField[] savedFields=iSavedFields;

INSERT:
5:SavedField[] savedFields=iSavedFields;
TO:
20

DELETE:
Original line: 7iSavedFieldsShared=false;

INSERT:
7:if(iSavedFieldsShared){
savedFields=(SavedField[])iSavedFields.clone();
iSavedFieldsShared=false;
}
TO:
20

DELETE:
Original line: 10if(count>0){
DurationField months=DurationFieldType.months().getField(iChrono);
DurationField days=DurationFieldType.days().getField(iChrono);
DurationField first=savedFields[0].iField.getDurationField();
if(compareReverse(first,months)>=0&&compareReverse(first,days)<=0){
saveField(DateTimeFieldType.year(),iDefaultYear);
return computeMillis(resetFields,text);
}
}

Following are 3th generated patches:
Validating 200 patches...
Tested:5590 patches
Compile failed:5222 patches
Compilation rate:0.06583184257602863
NNNNNNNNNNPPPPPPNPPPNNPNNNNNNPNPPPNNPPNPNNPPPPPPPPPNNNPPNPNNPPPPPPNNPNNPNPNPNPNPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/19.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/19.java
Current actions:
UPDATE
FROM:
35:int offset=iZone.getOffsetFromLocal(millis);
TO:
35:long offset=iZone.getOffsetFromLocal(millis);

Following are 0th generated patches:
Validating 1 patches...
Current actions:
UPDATE
FROM:
35:int offset=iZone.getOffsetFromLocal(millis);
TO:
35:long offset=iZone.getOffsetFromLocal(millis);

Following are 0th generated patches:
Validating 1 patches...
Tested:5592 patches
Compile failed:5222 patches
Compilation rate:0.0661659513590844
PP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/20.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/20.java
Current actions:
INSERT:
3:if(iZone==null){
return computeMillis0(resetFields,text);
}
TO:
2

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
8:if(iZone!=null){
int offset=iZone.getOffset(iMillis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}
TO:
20

Following are 2th generated patches:
Validating 40 patches...
Current actions:
DELETE:
Original line: 11DurationField months=DurationFieldType.months().getField(iChrono);

DELETE:
Original line: 12DurationField days=DurationFieldType.days().getField(iChrono);

Following are 3th generated patches:
Validating 2 patches...
Current actions:
DELETE:
Original line: 4int count=iSavedFieldsCount;

DELETE:
Original line: 6iSavedFields=savedFields=(SavedField[])iSavedFields.clone();

DELETE:
Original line: 10if(count>0){
DurationField months=DurationFieldType.months().getField(iChrono);
DurationField days=DurationFieldType.days().getField(iChrono);
DurationField first=savedFields[0].iField.getDurationField();
if(compareReverse(first,months)>=0&&compareReverse(first,days)<=0){
saveField(DateTimeFieldType.year(),iDefaultYear);
return computeMillis(resetFields,text);
}
}

Following are 4th generated patches:
Validating 3 patches...
Current actions:
DELETE:
Original line: 3SavedField[] savedFields=iSavedFields;

INSERT:
4:return computeMillis0(resetFields,text);
TO:
2

DELETE:
Original line: 7iSavedFieldsShared=false;

INSERT:
8:if(iZone!=null){
int offset=iZone.getOffset(iMillis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}
TO:
20

DELETE:
Original line: 9sort(savedFields,count);

DELETE:
Original line: 10if(count>0){
DurationField months=DurationFieldType.months().getField(iChrono);
DurationField days=DurationFieldType.days().getField(iChrono);
DurationField first=savedFields[0].iField.getDurationField();
if(compareReverse(first,months)>=0&&compareReverse(first,days)<=0){
saveField(DateTimeFieldType.year(),iDefaultYear);
return computeMillis(resetFields,text);
}
}

UPDATE
FROM:
21:for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}
TO:
19:for(int i=0;i<iSavedFieldsCount;i++){
millis=iSavedFields[i].set(millis,resetFields);
}

DELETE:
Original line: 31if(iZone==null){
millis-=iOffset;
}

DELETE:
Original line: 35int offset=iZone.getOffsetFromLocal(millis);

DELETE:
Original line: 36millis-=offset;

Tested:5834 patches
Compile failed:5441 patches
Compilation rate:0.06736372985944464
NNNNNNNNNNNNNNNNNNNNNNNNPPNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNPNNPNNNNNNNPNNNNNNNNNNPNNPNNPNPPNPPNNNNPNNPNPNPNNPPPNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/21.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/21.java
Current actions:
DELETE:
Original line: 31if(iZone==null){
millis-=iOffset;
}

Following are 0th generated patches:
Validating 188 patches...
Current actions:
DELETE:
Original line: 31if(iZone==null){
millis-=iOffset;
}

DELETE:
Original line: 34else{
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}

DELETE:
Original line: 45return millis;

Following are 1th generated patches:
Validating 3 patches...
Current actions:
DELETE:
Original line: 38String message="Illegal instant due to time zone offset transition ("+iZone+')';

Following are 2th generated patches:
Validating 1 patches...
Current actions:
DELETE:
Original line: 31if(iZone==null){
millis-=iOffset;
}

INSERT:
31:return millis+iOffset;
TO:
30

DELETE:
Original line: 34else{
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}

DELETE:
Original line: 45return millis;

Following are 3th generated patches:
Validating 42 patches...
Current actions:
DELETE:
Original line: 36millis-=offset;

DELETE:
Original line: 37if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}

Following are 4th generated patches:
Validating 2 patches...
Current actions:
INSERT:
31:return millis+iOffset;
TO:
30

DELETE:
Original line: 32millis-=iOffset;

DELETE:
Original line: 34else{
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}

Tested:6064 patches
Compile failed:5626 patches
Compilation rate:0.07222955145118734
NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNPNNNNNPNNPNPPNNPNNNNNNNNPPNNNNNNNNNNNNNNNNNNNNNNNPPPPPNNNNNNPNNNPNPPNPPNNPNNNNNNNNNNNNPNNNNPNPPPNNNNNPNNNNPNNNNNNNNPNNNNNNNNNPPNNNNNNNNNNNNNNNNNPNNPPNNNNPNNPPNNNPPPPPPPP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/22.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/22.java
Current actions:
INSERT:
33:millis-=iChrono.getZone().getOffset(millis);
TO:
32

Following are 0th generated patches:
Validating 1 patches...
Current actions:
INSERT:
33:millis-=iChrono.getZone().getOffset(millis);
TO:
32

Following are 1th generated patches:
Validating 198 patches...
Tested:6263 patches
Compile failed:5823 patches
Compilation rate:0.07025387194635159
PNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/23.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/23.java
Current actions:
DELETE:
Original line: 15saveField(DateTimeFieldType.year(),iDefaultYear);

Following are 0th generated patches:
Validating 1 patches...
Current actions:
DELETE:
Original line: 15saveField(DateTimeFieldType.year(),iDefaultYear);

Following are 0th generated patches:
Validating 1 patches...
Tested:6265 patches
Compile failed:5823 patches
Compilation rate:0.07055067837190743
PP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/24.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/24.java
Current actions:
UPDATE
FROM:
35:int offset=iZone.getOffsetFromLocal(millis);
TO:
35:long offset=iZone.getOffsetMillis(millis);

Following are 0th generated patches:
Validating 3 patches...
Current actions:
UPDATE
FROM:
37:if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
TO:
37:if(offset!=iZone.getOffsetMillis(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}

Following are 1th generated patches:
Validating 1 patches...
Current actions:
UPDATE
FROM:
35:int offset=iZone.getOffsetFromLocal(millis);
TO:
35:long offset=iZone.getOffsetMillis(millis);

UPDATE
FROM:
37:if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
TO:
37:if(offset!=iZone.getOffsetMillis(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}

Following are 2th generated patches:
Validating 200 patches...
Current actions:
UPDATE
FROM:
35:int offset=iZone.getOffsetFromLocal(millis);
TO:
35:long offset=iZone.getOffsetMillis(millis);

Following are 3th generated patches:
Validating 200 patches...
Tested:6669 patches
Compile failed:6219 patches
Compilation rate:0.06747638326585695
NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNPPP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/25.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/25.java
Current actions:
INSERT:
45:if(resetFields){
setValues(millis);
}
TO:
44

Following are 0th generated patches:
Validating 2 patches...
Current actions:
INSERT:
45:if(resetFields){
setValues(millis);
}
TO:
44

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
46:setValues(millis);
TO:
44

Following are 2th generated patches:
Validating 199 patches...
Tested:7070 patches
Compile failed:6594 patches
Compilation rate:0.06732673267326733
NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNPNNNNNNNNNNNNNPPNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNPNNNNNNNNNNNNNPPNPNNNNNNPNNNNNNNNNNNPPNNNPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNPNNNNNNNNNNNNPPNNNNNNNNNNNNNNNNNNNPPNNNNNNNNNNNPPP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/26.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/26.java
Current actions:
Move
FROM:
Former Line 19:long millis=iMillis;
TO:
Current Line 2:Block

Following are 0th generated patches:
Validating 85 patches...
Current actions:
INSERT:
4:if(iZone!=null){
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}
TO:
2

Following are 1th generated patches:
Validating 42 patches...
Current actions:
UPDATE
FROM:
32:millis-=iOffset;
TO:
6:millis-=offset;

INSERT:
7:if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
TO:
32

DELETE:
Original line: 37if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}

Following are 2th generated patches:
Validating 22 patches...
Current actions:
INSERT:
3:long millis=iMillis;
TO:
2

INSERT:
4:if(iZone!=null){
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}
TO:
2

UPDATE
FROM:
32:millis-=iOffset;
TO:
6:millis-=offset;

DELETE:
Original line: 19long millis=iMillis;

DELETE:
Original line: 31if(iZone==null){
millis-=iOffset;
}

DELETE:
Original line: 34else{
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}

Following are 3th generated patches:
Validating 68 patches...
Current actions:
INSERT:
3:long millis=iMillis;
TO:
2

DELETE:
Original line: 19long millis=iMillis;

DELETE:
Original line: 34else{
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}

Following are 4th generated patches:
Validating 2 patches...
Current actions:
INSERT:
3:long millis=iMillis;
TO:
2

INSERT:
4:if(iZone!=null){
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}
TO:
2

UPDATE
FROM:
32:millis-=iOffset;
TO:
6:millis-=offset;

DELETE:
Original line: 19long millis=iMillis;

DELETE:
Original line: 34else{
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}

Tested:7218 patches
Compile failed:6737 patches
Compilation rate:0.06663895816015517
NNNNNNNNNNNNNNNNNNPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/27.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/27.java
Current actions:
INSERT:
3:if(iMillis==Long.MIN_VALUE){
return Long.MIN_VALUE;
}
TO:
2

Following are 0th generated patches:
Validating 36 patches...
Current actions:
INSERT:
3:if(iMillis==Long.MIN_VALUE){
return Long.MIN_VALUE;
}
TO:
2

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
3:if(iMillis==Long.MIN_VALUE){
return Long.MIN_VALUE;
}
TO:
2

DELETE:
Original line: 11DurationField months=DurationFieldType.months().getField(iChrono);

DELETE:
Original line: 12DurationField days=DurationFieldType.days().getField(iChrono);

INSERT:
14:DurationField months=iChrono.months();
TO:
10

INSERT:
15:DurationField days=iChrono.days();
TO:
10

Following are 2th generated patches:
Validating 200 patches...
Tested:7650 patches
Compile failed:7126 patches
Compilation rate:0.06849673202614379
NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNPNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNPNNPNNPPNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNPNNNNNPNPNNNNNNNNPNNPPNPNNPPNPNNPNPNNNNNNNNNNNPNNNPNNNNNNNNNNNNNNNNNNNNNNNPNNPPNPNNNNNNPPPP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/28.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/28.java
Current actions:
INSERT:
3:if(iZone==null){
return computeMillis(resetFields);
}
TO:
2

Following are 0th generated patches:
Validating 148 patches...
Current actions:
INSERT:
3:if(iZone==null){
return computeMillis(resetFields);
}
TO:
2

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
3:if(iZone==null){
return computeMillis(resetFields);
}
TO:
2

INSERT:
6:long millis=iMillis;
TO:
2

DELETE:
Original line: 19long millis=iMillis;

DELETE:
Original line: 31if(iZone==null){
millis-=iOffset;
}

DELETE:
Original line: 34else{
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}

INSERT:
34:int offset=iZone.getOffset(millis);
TO:
30

INSERT:
35:millis-=offset;
TO:
30

INSERT:
36:if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
TO:
30

Following are 2th generated patches:
Validating 200 patches...
Current actions:
INSERT:
3:if(iZone==null){
return computeMillis(resetFields);
}
TO:
2

INSERT:
6:long millis=iMillis;
TO:
2

DELETE:
Original line: 19long millis=iMillis;

DELETE:
Original line: 31if(iZone==null){
millis-=iOffset;
}

INSERT:
34:int offset=iZone.getOffset(millis);
TO:
30

INSERT:
35:millis-=offset;
TO:
30

DELETE:
Original line: 35int offset=iZone.getOffsetFromLocal(millis);

INSERT:
36:if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
TO:
30

DELETE:
Original line: 36millis-=offset;

DELETE:
Original line: 37if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}

Following are 3th generated patches:
Validating 200 patches...
Tested:8290 patches
Compile failed:7673 patches
Compilation rate:0.0744270205066345
NNNNNNNPNPPPPPNNNNNNNNNNPPPNNNPNNNPPNNPNNNPPPPNNNNNNNNNNNNNPNNNNNNNNNNNNNPPNNNNNNNNNNNNPNPNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNPNNNNNNNPPNNNNNNNNNNPNNNNNNNNNNNPNPNNNNNNNPNNNNNNNNPPPNNNNNNNNNNNNNNNNNNNPPPNPNNNNNNNNNNNNNNPNNNNNNNNNPNNNNPPPNNNNNNNNNNNNNPPPNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNPNNPNNNNNNNNNPNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNPPNNPNNPNNNNNNNNNNPNNNNNNNNNNNNPPPNNNNNNNNNNNNPNPNPNNNPNNNPNNPNNNNNPNNNNNNNNNNNNNNNNNNNPPNNNNNNPNNNNNPNNNPNNNNNPNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNPNPNNNNNNNNPNNNNNNNNNPPNNPNPNNNNNNNNNNPNNNPPNNNNPNPNNNNNNNNNNNNNNNNNPPNNNNNPNNNNPNNNNNNPNNNNNNNNNNNNNP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/29.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/29.java
Current actions:
DELETE:
Original line: 3SavedField[] savedFields=iSavedFields;

Following are 0th generated patches:
Validating 200 patches...
Current actions:
INSERT:
5:if(resetFields){
millis=0;
}
TO:
20

Following are 1th generated patches:
Validating 38 patches...
Current actions:
INSERT:
5:if(resetFields){
millis=0;
}
TO:
20

DELETE:
Original line: 6iSavedFields=savedFields=(SavedField[])iSavedFields.clone();

UPDATE
FROM:
21:for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}
TO:
8:for(int i=0;i<iSavedFieldsCount;i++){
millis=iSavedFields[i].set(millis,resetFields);
}

DELETE:
Original line: 11DurationField months=DurationFieldType.months().getField(iChrono);

Following are 2th generated patches:
Validating 41 patches...
Current actions:
DELETE:
Original line: 16return computeMillis(resetFields,text);

Following are 3th generated patches:
Validating 1 patches...
Current actions:
DELETE:
Original line: 3SavedField[] savedFields=iSavedFields;

DELETE:
Original line: 4int count=iSavedFieldsCount;

INSERT:
5:if(resetFields){
millis=0;
}
TO:
20

DELETE:
Original line: 6iSavedFields=savedFields=(SavedField[])iSavedFields.clone();

DELETE:
Original line: 7iSavedFieldsShared=false;

UPDATE
FROM:
21:for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}
TO:
8:for(int i=0;i<iSavedFieldsCount;i++){
millis=iSavedFields[i].set(millis,resetFields);
}

UPDATE
FROM:
22:millis=savedFields[i].set(millis,resetFields);
TO:
9:millis=iSavedFields[i].set(millis,resetFields);

DELETE:
Original line: 9sort(savedFields,count);

DELETE:
Original line: 10if(count>0){
DurationField months=DurationFieldType.months().getField(iChrono);
DurationField days=DurationFieldType.days().getField(iChrono);
DurationField first=savedFields[0].iField.getDurationField();
if(compareReverse(first,months)>=0&&compareReverse(first,days)<=0){
saveField(DateTimeFieldType.year(),iDefaultYear);
return computeMillis(resetFields,text);
}
}

Following are 4th generated patches:
Validating 46 patches...
Current actions:
DELETE:
Original line: 3SavedField[] savedFields=iSavedFields;

DELETE:
Original line: 5if(iSavedFieldsShared){
iSavedFields=savedFields=(SavedField[])iSavedFields.clone();
iSavedFieldsShared=false;
}

DELETE:
Original line: 14if(compareReverse(first,months)>=0&&compareReverse(first,days)<=0){
saveField(DateTimeFieldType.year(),iDefaultYear);
return computeMillis(resetFields,text);
}

Tested:8607 patches
Compile failed:7908 patches
Compilation rate:0.08121296619031021
NNNNNNNNPPPPPPNPNPPPNNNNNNNNPPPNPPNNNNNPPPPNNNPNNNNNNNNNNNNNNNNPPNNNNNNPNNNPNNNNNNNNNNNNNNPNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNPPPPPPPPPPNPPPNNPPPPPPPPPPNPNPNPPPPNPPPPPPPNNPPPNPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/30.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/30.java
Current actions:
Wrap:
MethodDeclaration
On:
[long millis=iMillis;, {
if(text!=null){
e.prependMessage("Cannot parse \""+text+'"');
}
throw e;
}, {
SavedField[] savedFields=iSavedFields;
int count=iSavedFieldsCount;
if(iSavedFieldsShared){
iSavedFields=savedFields=(SavedField[])iSavedFields.clone();
iSavedFieldsShared=false;
}
sort(savedFields,count);
if(count>0){
DurationField months=DurationFieldType.months().getField(iChrono);
DurationField days=DurationFieldType.days().getField(iChrono);
DurationField first=savedFields[0].iField.getDurationField();
if(compareReverse(first,months)>=0&&compareReverse(first,days)<=0){
saveField(DateTimeFieldType.year(),iDefaultYear);
return computeMillis(resetFields,text);
}
}
long millis=iMillis;
try{
for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}
}catch(IllegalFieldValueException e){
if(text!=null){
e.prependMessage("Cannot parse \""+text+'"');
}
throw e;
}
if(iZone==null){
millis-=iOffset;
}
else{
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}
return millis;
}, DurationField months=DurationFieldType.months().getField(iChrono);, DurationField days=DurationFieldType.days().getField(iChrono);, if(compareReverse(first,months)>=0&&compareReverse(first,days)<=0){
saveField(DateTimeFieldType.year(),iDefaultYear);
return computeMillis(resetFields,text);
}, {
saveField(DateTimeFieldType.year(),iDefaultYear);
return computeMillis(resetFields,text);
}, return computeMillis(resetFields,text);]
Following are 0th generated patches:
Validating 200 patches...
Current actions:
DELETE:
Original line: 2{
SavedField[] savedFields=iSavedFields;
int count=iSavedFieldsCount;
if(iSavedFieldsShared){
iSavedFields=savedFields=(SavedField[])iSavedFields.clone();
iSavedFieldsShared=false;
}
sort(savedFields,count);
if(count>0){
DurationField months=DurationFieldType.months().getField(iChrono);
DurationField days=DurationFieldType.days().getField(iChrono);
DurationField first=savedFields[0].iField.getDurationField();
if(compareReverse(first,months)>=0&&compareReverse(first,days)<=0){
saveField(DateTimeFieldType.year(),iDefaultYear);
return computeMillis(resetFields,text);
}
}
long millis=iMillis;
try{
for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}
}catch(IllegalFieldValueException e){
if(text!=null){
e.prependMessage("Cannot parse \""+text+'"');
}
throw e;
}
if(iZone==null){
millis-=iOffset;
}
else{
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}
return millis;
}

INSERT:
2:public long computeMillis(boolean resetFields,String text){
long millis=iMillis;
try{
DurationField months=DurationFieldType.months().getField(iChrono);
DurationField days=DurationFieldType.days().getField(iChrono);
DurationField first=getFieldType(0).getDurationField();
if(compareReverse(first,months)>=0&&compareReverse(first,days)<=0){
saveField(DateTimeFieldType.year(),2000);
return computeMillis(resetFields,text);
}
for(int i=0;i<iSavedFieldsCount;i++){
millis=iSavedFields[i].set(millis,resetFields);
}
}catch(IllegalFieldValueException e){
if(text!=null){
e.prependMessage("Cannot parse \""+text+'"');
}
throw e;
}
if(iZone==null){
millis-=iOffset;
}
else{
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}
return millis;
}
TO:
1

DELETE:
Original line: 3SavedField[] savedFields=iSavedFields;

INSERT:
4:{
DurationField months=DurationFieldType.months().getField(iChrono);
DurationField days=DurationFieldType.days().getField(iChrono);
DurationField first=getFieldType(0).getDurationField();
if(compareReverse(first,months)>=0&&compareReverse(first,days)<=0){
saveField(DateTimeFieldType.year(),2000);
return computeMillis(resetFields,text);
}
for(int i=0;i<iSavedFieldsCount;i++){
millis=iSavedFields[i].set(millis,resetFields);
}
}
TO:
2

DELETE:
Original line: 4int count=iSavedFieldsCount;

DELETE:
Original line: 6iSavedFields=savedFields=(SavedField[])iSavedFields.clone();

INSERT:
7:DurationField first=getFieldType(0).getDurationField();
TO:
12

DELETE:
Original line: 7iSavedFieldsShared=false;

INSERT:
9:saveField(DateTimeFieldType.year(),2000);
TO:
14

DELETE:
Original line: 9sort(savedFields,count);

DELETE:
Original line: 10if(count>0){
DurationField months=DurationFieldType.months().getField(iChrono);
DurationField days=DurationFieldType.days().getField(iChrono);
DurationField first=savedFields[0].iField.getDurationField();
if(compareReverse(first,months)>=0&&compareReverse(first,days)<=0){
saveField(DateTimeFieldType.year(),iDefaultYear);
return computeMillis(resetFields,text);
}
}

UPDATE
FROM:
21:for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}
TO:
12:for(int i=0;i<iSavedFieldsCount;i++){
millis=iSavedFields[i].set(millis,resetFields);
}

UPDATE
FROM:
22:millis=savedFields[i].set(millis,resetFields);
TO:
13:millis=iSavedFields[i].set(millis,resetFields);

DELETE:
Original line: 19long millis=iMillis;

DELETE:
Original line: 20{
for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}
}

DELETE:
Original line: 25{
if(text!=null){
e.prependMessage("Cannot parse \""+text+'"');
}
throw e;
}

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
4:{
DurationField months=DurationFieldType.months().getField(iChrono);
DurationField days=DurationFieldType.days().getField(iChrono);
DurationField first=getFieldType(0).getDurationField();
if(compareReverse(first,months)>=0&&compareReverse(first,days)<=0){
saveField(DateTimeFieldType.year(),2000);
return computeMillis(resetFields,text);
}
for(int i=0;i<iSavedFieldsCount;i++){
millis=iSavedFields[i].set(millis,resetFields);
}
}
TO:
2

DELETE:
Original line: 13DurationField first=savedFields[0].iField.getDurationField();

Following are 2th generated patches:
Validating 2 patches...
Current actions:
INSERT:
2:public long computeMillis(boolean resetFields,String text){
long millis=iMillis;
try{
DurationField months=DurationFieldType.months().getField(iChrono);
DurationField days=DurationFieldType.days().getField(iChrono);
DurationField first=getFieldType(0).getDurationField();
if(compareReverse(first,months)>=0&&compareReverse(first,days)<=0){
saveField(DateTimeFieldType.year(),2000);
return computeMillis(resetFields,text);
}
for(int i=0;i<iSavedFieldsCount;i++){
millis=iSavedFields[i].set(millis,resetFields);
}
}catch(IllegalFieldValueException e){
if(text!=null){
e.prependMessage("Cannot parse \""+text+'"');
}
throw e;
}
if(iZone==null){
millis-=iOffset;
}
else{
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}
return millis;
}
TO:
1

DELETE:
Original line: 2{
SavedField[] savedFields=iSavedFields;
int count=iSavedFieldsCount;
if(iSavedFieldsShared){
iSavedFields=savedFields=(SavedField[])iSavedFields.clone();
iSavedFieldsShared=false;
}
sort(savedFields,count);
if(count>0){
DurationField months=DurationFieldType.months().getField(iChrono);
DurationField days=DurationFieldType.days().getField(iChrono);
DurationField first=savedFields[0].iField.getDurationField();
if(compareReverse(first,months)>=0&&compareReverse(first,days)<=0){
saveField(DateTimeFieldType.year(),iDefaultYear);
return computeMillis(resetFields,text);
}
}
long millis=iMillis;
try{
for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}
}catch(IllegalFieldValueException e){
if(text!=null){
e.prependMessage("Cannot parse \""+text+'"');
}
throw e;
}
if(iZone==null){
millis-=iOffset;
}
else{
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}
return millis;
}

INSERT:
4:{
DurationField months=DurationFieldType.months().getField(iChrono);
DurationField days=DurationFieldType.days().getField(iChrono);
DurationField first=getFieldType(0).getDurationField();
if(compareReverse(first,months)>=0&&compareReverse(first,days)<=0){
saveField(DateTimeFieldType.year(),2000);
return computeMillis(resetFields,text);
}
for(int i=0;i<iSavedFieldsCount;i++){
millis=iSavedFields[i].set(millis,resetFields);
}
}
TO:
2

DELETE:
Original line: 6iSavedFields=savedFields=(SavedField[])iSavedFields.clone();

INSERT:
9:saveField(DateTimeFieldType.year(),2000);
TO:
14

DELETE:
Original line: 10if(count>0){
DurationField months=DurationFieldType.months().getField(iChrono);
DurationField days=DurationFieldType.days().getField(iChrono);
DurationField first=savedFields[0].iField.getDurationField();
if(compareReverse(first,months)>=0&&compareReverse(first,days)<=0){
saveField(DateTimeFieldType.year(),iDefaultYear);
return computeMillis(resetFields,text);
}
}

UPDATE
FROM:
21:for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}
TO:
12:for(int i=0;i<iSavedFieldsCount;i++){
millis=iSavedFields[i].set(millis,resetFields);
}

DELETE:
Original line: 19long millis=iMillis;

DELETE:
Original line: 25{
if(text!=null){
e.prependMessage("Cannot parse \""+text+'"');
}
throw e;
}

Following are 3th generated patches:
Validating 200 patches...
Current actions:
DELETE:
Original line: 3SavedField[] savedFields=iSavedFields;

DELETE:
Original line: 5if(iSavedFieldsShared){
iSavedFields=savedFields=(SavedField[])iSavedFields.clone();
iSavedFieldsShared=false;
}

INSERT:
9:saveField(DateTimeFieldType.year(),2000);
TO:
14

UPDATE
FROM:
21:for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}
TO:
12:for(int i=0;i<iSavedFieldsCount;i++){
millis=iSavedFields[i].set(millis,resetFields);
}

DELETE:
Original line: 13DurationField first=savedFields[0].iField.getDurationField();

DELETE:
Original line: 15saveField(DateTimeFieldType.year(),iDefaultYear);

DELETE:
Original line: 20{
for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}
}

Following are 4th generated patches:
Validating 200 patches...
Current actions:
DELETE:
Original line: 2{
SavedField[] savedFields=iSavedFields;
int count=iSavedFieldsCount;
if(iSavedFieldsShared){
iSavedFields=savedFields=(SavedField[])iSavedFields.clone();
iSavedFieldsShared=false;
}
sort(savedFields,count);
if(count>0){
DurationField months=DurationFieldType.months().getField(iChrono);
DurationField days=DurationFieldType.days().getField(iChrono);
DurationField first=savedFields[0].iField.getDurationField();
if(compareReverse(first,months)>=0&&compareReverse(first,days)<=0){
saveField(DateTimeFieldType.year(),iDefaultYear);
return computeMillis(resetFields,text);
}
}
long millis=iMillis;
try{
for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}
}catch(IllegalFieldValueException e){
if(text!=null){
e.prependMessage("Cannot parse \""+text+'"');
}
throw e;
}
if(iZone==null){
millis-=iOffset;
}
else{
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}
return millis;
}

INSERT:
2:public long computeMillis(boolean resetFields,String text){
long millis=iMillis;
try{
DurationField months=DurationFieldType.months().getField(iChrono);
DurationField days=DurationFieldType.days().getField(iChrono);
DurationField first=getFieldType(0).getDurationField();
if(compareReverse(first,months)>=0&&compareReverse(first,days)<=0){
saveField(DateTimeFieldType.year(),2000);
return computeMillis(resetFields,text);
}
for(int i=0;i<iSavedFieldsCount;i++){
millis=iSavedFields[i].set(millis,resetFields);
}
}catch(IllegalFieldValueException e){
if(text!=null){
e.prependMessage("Cannot parse \""+text+'"');
}
throw e;
}
if(iZone==null){
millis-=iOffset;
}
else{
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}
return millis;
}
TO:
1

DELETE:
Original line: 3SavedField[] savedFields=iSavedFields;

INSERT:
4:{
DurationField months=DurationFieldType.months().getField(iChrono);
DurationField days=DurationFieldType.days().getField(iChrono);
DurationField first=getFieldType(0).getDurationField();
if(compareReverse(first,months)>=0&&compareReverse(first,days)<=0){
saveField(DateTimeFieldType.year(),2000);
return computeMillis(resetFields,text);
}
for(int i=0;i<iSavedFieldsCount;i++){
millis=iSavedFields[i].set(millis,resetFields);
}
}
TO:
2

DELETE:
Original line: 4int count=iSavedFieldsCount;

DELETE:
Original line: 6iSavedFields=savedFields=(SavedField[])iSavedFields.clone();

INSERT:
7:DurationField first=getFieldType(0).getDurationField();
TO:
12

INSERT:
9:saveField(DateTimeFieldType.year(),2000);
TO:
14

DELETE:
Original line: 10if(count>0){
DurationField months=DurationFieldType.months().getField(iChrono);
DurationField days=DurationFieldType.days().getField(iChrono);
DurationField first=savedFields[0].iField.getDurationField();
if(compareReverse(first,months)>=0&&compareReverse(first,days)<=0){
saveField(DateTimeFieldType.year(),iDefaultYear);
return computeMillis(resetFields,text);
}
}

UPDATE
FROM:
21:for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}
TO:
12:for(int i=0;i<iSavedFieldsCount;i++){
millis=iSavedFields[i].set(millis,resetFields);
}

UPDATE
FROM:
22:millis=savedFields[i].set(millis,resetFields);
TO:
13:millis=iSavedFields[i].set(millis,resetFields);

DELETE:
Original line: 19long millis=iMillis;

DELETE:
Original line: 25{
if(text!=null){
e.prependMessage("Cannot parse \""+text+'"');
}
throw e;
}

Tested:9305 patches
Compile failed:8563 patches
Compilation rate:0.07974207415368081
NNNNNNNNNPNPPNPPNPPPPPNNNNNNNNNNNPNPPNNNPNNNNNPNPNNPNNPNNNPNNNNNNNNNNNNNNNNNNNNNNNNNPNPNPPPPPPPPPNNNPPNPPNPPNNPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/31.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/31.java
Current actions:
UPDATE
FROM:
35:int offset=iZone.getOffsetFromLocal(millis);
TO:
35:int offset=iZone.getOffset(millis);

Following are 0th generated patches:
Validating 3 patches...
Current actions:
UPDATE
FROM:
35:int offset=iZone.getOffsetFromLocal(millis);
TO:
35:int offset=iZone.getOffset(millis);

DELETE:
Original line: 36millis-=offset;

Following are 1th generated patches:
Validating 200 patches...
Current actions:
UPDATE
FROM:
35:int offset=iZone.getOffsetFromLocal(millis);
TO:
35:int offset=iZone.getOffset(millis);

Following are 2th generated patches:
Validating 200 patches...
Current actions:
DELETE:
Original line: 36millis-=offset;

Following are 3th generated patches:
Validating 1 patches...
Tested:9708 patches
Compile failed:8952 patches
Compilation rate:0.07787391841779975
PPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/32.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/32.java
Current actions:
UPDATE
FROM:
35:int offset=iZone.getOffsetFromLocal(millis);
TO:
35:long offset=iZone.getOffset(iMillis);

Following are 0th generated patches:
Validating 1 patches...
Current actions:
UPDATE
FROM:
35:int offset=iZone.getOffsetFromLocal(millis);
TO:
35:long offset=iZone.getOffset(iMillis);

Following are 1th generated patches:
Validating 200 patches...
Tested:9909 patches
Compile failed:9145 patches
Compilation rate:0.0771016247855485
PNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNPNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPP
Finish : time-24 > patch : 0 | Start : Wed Apr 10 20:58:36 HKT 2024 | End : 2024.04.10 AD at 21:18:50 HKT
