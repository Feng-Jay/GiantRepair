Following diff 0:
-ensureTyped(t,n,fnType.getInstanceType());
Following diff 0:
-ensureTyped(t,n,fnType.getInstanceType());
+JSTyperesultType=fnType.getPropertyType(JSType.NOT_A_TYPE);
Following diff 0:
-ensureTyped(t,n,fnType.getInstanceType());
+JSTyperesultType=fnType.getReturnType();
Following diff 0:
-ensureTyped(t,n,fnType.getInstanceType());
+JSTyperesultType=fnType.getTypeOfThis();
Following diff 0:
-ensureTyped(t,n,fnType.getInstanceType());
+JSTyperesultType=this.getJSType(n);
Following diff 0:
-ensureTyped(t,n,fnType.getInstanceType());
+JSTyperesultType=this.getJSType(constructor);
Following diff 0:
-ensureTyped(t,n,fnType.getInstanceType());
+JSTyperesultType=fnType.getPropertyType(JSType.UNKNOWN_NAME);
Following diff 0:
-ensureTyped(t,n,fnType.getInstanceType());
+JSTyperesultType=fnType.getPropertyType(JSType.NOT_A_CLASS);
Following diff 0:
-ensureTyped(t,n,fnType.getInstanceType());
+JSTyperesultType=fnType.getPropertyType(JSType.EMPTY_TYPE_COMPONENT);
Following diff 0:
-ensureTyped(t,n,fnType.getInstanceType());
+JSTyperesultType=fnType.getPropertyType(OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
Following diff 0:
-ensureTyped(t,n,fnType.getInstanceType());
+JSTyperesultType=fnType.getPropertyType(JSTypeRegistry.OBJECT_INDEX_TEMPLATE);
Following diff 0:
-ensureTyped(t,n,fnType.getInstanceType());
+JSTyperesultType=fnType.getPropertyType(JSTypeRegistry.OBJECT_ELEMENT_TEMPLATE);
Following diff 0:
-ensureTyped(t,n,fnType.getInstanceType());
+JSTyperesultType=n.getJSType();
Following diff 0:
-ensureTyped(t,n,fnType.getInstanceType());
+JSTypeinstanceType=fnType.getPropertyType(JSType.NOT_A_TYPE);
Following diff 0:
-ensureTyped(t,n,fnType.getInstanceType());
+JSTypeinstanceType=fnType.getReturnType();
Following diff 0:
-ensureTyped(t,n,fnType.getInstanceType());
+JSTypeinstanceType=this.getJSType(n);
Following diff 0:
-ensureTyped(t,n,fnType.getInstanceType());
+JSTypeinstanceType=this.getJSType(constructor);
Following diff 0:
-ensureTyped(t,n,fnType.getInstanceType());
+JSTypeinstanceType=fnType.getPropertyType(JSType.NOT_A_CLASS);
Following diff 0:
-ensureTyped(t,n,fnType.getInstanceType());
+JSTypeinstanceType=typeRegistry.getNativeType(UNKNOWN_TYPE);
Following diff 0:
-ensureTyped(t,n,fnType.getInstanceType());
+JSTypeinstanceType=fnType.getPropertyType(JSType.EMPTY_TYPE_COMPONENT);
Following diff 0:
-ensureTyped(t,n,fnType.getInstanceType());
+JSTypeinstanceType=fnType.getTypeOfThis();
Following diff 0:
-ensureTyped(t,n,fnType.getInstanceType());
+JSTypeinstanceType=fnType.getPropertyType(JSType.UNKNOWN_NAME);
Following diff 0:
-ensureTyped(t,n,fnType.getInstanceType());
+JSTypeinstanceType=fnType.getPropertyType(JSTypeRegistry.OBJECT_INDEX_TEMPLATE);
Following diff 0:
-ensureTyped(t,n,fnType.getInstanceType());
+JSTypeinstanceType=fnType.getPropertyType(OVERRIDING_PROTOTYPE_WITH_NON_OBJECT);
Following diff 0:
-ensureTyped(t,n,fnType.getInstanceType());
+JSTypeinstanceType=fnType.getPropertyType(JSTypeRegistry.OBJECT_ELEMENT_TEMPLATE);
Following diff 0:
-ensureTyped(t,n,fnType.getInstanceType());
+JSTypeinstanceType=n.getJSType();
