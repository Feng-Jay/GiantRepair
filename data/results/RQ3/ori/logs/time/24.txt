Repair : time_24
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/0.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/0.java
Tested:0 patches
Compile failed:0 patches
Compilation rate:NaN

Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/1.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/1.java
Current actions:
DELETE:
Original line: 31if(iZone==null){
millis-=iOffset;
}

Following are 0th generated patches:
Validating 91 patches...
Current actions:
DELETE:
Original line: 34else{
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}

Following are 1th generated patches:
Validating 1 patches...
Current actions:
DELETE:
Original line: 40message="Cannot parse \""+text+"\": "+message;

Following are 2th generated patches:
Validating 1 patches...
Current actions:
DELETE:
Original line: 36millis-=offset;

Following are 3th generated patches:
Validating 1 patches...
Current actions:
DELETE:
Original line: 35int offset=iZone.getOffsetFromLocal(millis);

DELETE:
Original line: 36millis-=offset;

DELETE:
Original line: 40message="Cannot parse \""+text+"\": "+message;

DELETE:
Original line: 42throw new IllegalArgumentException(message);

Following are 4th generated patches:
Validating 4 patches...
Current actions:
DELETE:
Original line: 32millis-=iOffset;

DELETE:
Original line: 34else{
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}

Tested:95 patches
Compile failed:61 patches
Compilation rate:0.35789473684210527
NNNNNNNNNPPPPPPPPPNNNNNNNPNNNNNPNNPNNNNNNNNNNNNPNNNNNNNNNPNPNPNNNPNNNNPNNNPPNNNPNPPPPPPPPPPPPPN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/2.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/2.java
Current actions:
DELETE:
Original line: 15saveField(DateTimeFieldType.year(),iDefaultYear);

Following are 0th generated patches:
Validating 36 patches...
Current actions:
INSERT:
20:millis=set(savedFields,count,millis,resetFields);
TO:
20

Following are 1th generated patches:
Validating 1 patches...
Current actions:
DELETE:
Original line: 15saveField(DateTimeFieldType.year(),iDefaultYear);

DELETE:
Original line: 16return computeMillis(resetFields,text);

DELETE:
Original line: 21for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}

Following are 2th generated patches:
Validating 3 patches...
Current actions:
DELETE:
Original line: 21for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}

Following are 3th generated patches:
Validating 1 patches...
Current actions:
DELETE:
Original line: 15saveField(DateTimeFieldType.year(),iDefaultYear);

INSERT:
15:return set(savedFields,count,iMillis,resetFields);
TO:
14

INSERT:
20:millis=set(savedFields,count,millis,resetFields);
TO:
20

DELETE:
Original line: 21for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}

Following are 4th generated patches:
Validating 4 patches...
Current actions:
DELETE:
Original line: 15saveField(DateTimeFieldType.year(),iDefaultYear);

DELETE:
Original line: 16return computeMillis(resetFields,text);

Tested:135 patches
Compile failed:88 patches
Compilation rate:0.34814814814814815
NNNNNNNNNNNNNNNNNNNNNNNPNPPPPNPPPPPPNPPN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/3.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/3.java
Current actions:
UPDATE
FROM:
35:int offset=iZone.getOffsetFromLocal(millis);
TO:
35:int offset=iZone.getOffset(millis);

Following are 0th generated patches:
Validating 1 patches...
Current actions:
UPDATE
FROM:
35:int offset=iZone.getOffsetFromLocal(millis);
TO:
35:int offset=iZone.getOffset(millis);

Following are 1th generated patches:
Validating 200 patches...
Tested:336 patches
Compile failed:279 patches
Compilation rate:0.16964285714285715
PNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNPNNNNNNNNNNNNNNPNNNNNNNNNNNNNPNPNNNNNNNNNNNNP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/4.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/4.java
Current actions:
INSERT:
15:int baseYear=iDefaultYear;
TO:
14

Following are 0th generated patches:
Validating 41 patches...
Current actions:
UPDATE
FROM:
15:saveField(DateTimeFieldType.year(),iDefaultYear);
TO:
16:saveField(DateTimeFieldType.year(),baseYear);

DELETE:
Original line: 16return computeMillis(resetFields,text);

INSERT:
17:long millis=computeMillis(resetFields,text);
TO:
15

Following are 1th generated patches:
Validating 200 patches...
Current actions:
UPDATE
FROM:
15:saveField(DateTimeFieldType.year(),iDefaultYear);
TO:
16:saveField(DateTimeFieldType.year(),baseYear);

INSERT:
17:long millis=computeMillis(resetFields,text);
TO:
15

Following are 2th generated patches:
Validating 200 patches...
Current actions:
INSERT:
15:int baseYear=iDefaultYear;
TO:
14

INSERT:
17:long millis=computeMillis(resetFields,text);
TO:
15

INSERT:
18:resetField(DateTimeFieldType.year(),baseYear);
TO:
15

Following are 3th generated patches:
Validating 200 patches...
Tested:975 patches
Compile failed:904 patches
Compilation rate:0.07282051282051281

Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/5.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/5.java
Current actions:
UPDATE
FROM:
35:int offset=iZone.getOffsetFromLocal(millis);
TO:
35:int offset=iZone.getOffset(iMillis);

Following are 0th generated patches:
Validating 3 patches...
Current actions:
UPDATE
FROM:
36:millis-=offset;
TO:
36:millis+=offset;

Following are 1th generated patches:
Validating 1 patches...
Current actions:
UPDATE
FROM:
35:int offset=iZone.getOffsetFromLocal(millis);
TO:
35:int offset=iZone.getOffset(iMillis);

UPDATE
FROM:
36:millis-=offset;
TO:
36:millis+=offset;

Following are 2th generated patches:
Validating 200 patches...
Current actions:
UPDATE
FROM:
35:int offset=iZone.getOffsetFromLocal(millis);
TO:
35:int offset=iZone.getOffset(iMillis);

Following are 3th generated patches:
Validating 200 patches...
Tested:1378 patches
Compile failed:1285 patches
Compilation rate:0.06748911465892599
PPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNPNNNNNNPNNNPNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNPNNNNNNPNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNPNNNNP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/6.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/6.java
Current actions:
Wrap:
MethodDeclaration
On:
[for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}, long millis=iMillis;, {
millis-=iOffset;
}, if(iZone==null){
millis-=iOffset;
}, millis-=iOffset;]
Following are 0th generated patches:
Validating 25 patches...
Current actions:
INSERT:
2:public long computeMillis(boolean resetFields,String text){
SavedField[] savedFields=iSavedFields;
int count=iSavedFieldsCount;
if(iSavedFieldsShared){
iSavedFields=savedFields=(SavedField[])iSavedFields.clone();
iSavedFieldsShared=false;
}
sort(savedFields,count);
if(count>0){
DurationField months=DurationFieldType.months().getField(iChrono);
DurationField days=DurationFieldType.days().getField(iChrono);
DurationField first=savedFields[0].iField.getDurationField();
if(compareReverse(first,months)>=0&&compareReverse(first,days)<=0){
saveField(DateTimeFieldType.year(),iDefaultYear);
return computeMillis(resetFields,text);
}
}
long millis=iMillis;
for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}
if(iZone==null){
millis-=iOffset;
}
else{
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}
return millis;
}
TO:
1

DELETE:
Original line: 19long millis=iMillis;

DELETE:
Original line: 21for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}

DELETE:
Original line: 25catch(IllegalFieldValueException e){
if(text!=null){
e.prependMessage("Cannot parse \""+text+'"');
}
throw e;
}

DELETE:
Original line: 31if(iZone==null){
millis-=iOffset;
}

Following are 1th generated patches:
Validating 2 patches...
Current actions:
DELETE:
Original line: 20{
for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}
}

DELETE:
Original line: 29throw e;

Following are 2th generated patches:
Validating 2 patches...
Current actions:
INSERT:
2:public long computeMillis(boolean resetFields,String text){
SavedField[] savedFields=iSavedFields;
int count=iSavedFieldsCount;
if(iSavedFieldsShared){
iSavedFields=savedFields=(SavedField[])iSavedFields.clone();
iSavedFieldsShared=false;
}
sort(savedFields,count);
if(count>0){
DurationField months=DurationFieldType.months().getField(iChrono);
DurationField days=DurationFieldType.days().getField(iChrono);
DurationField first=savedFields[0].iField.getDurationField();
if(compareReverse(first,months)>=0&&compareReverse(first,days)<=0){
saveField(DateTimeFieldType.year(),iDefaultYear);
return computeMillis(resetFields,text);
}
}
long millis=iMillis;
for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}
if(iZone==null){
millis-=iOffset;
}
else{
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}
return millis;
}
TO:
1

DELETE:
Original line: 19long millis=iMillis;

DELETE:
Original line: 20{
for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}
}

DELETE:
Original line: 21for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}

DELETE:
Original line: 25catch(IllegalFieldValueException e){
if(text!=null){
e.prependMessage("Cannot parse \""+text+'"');
}
throw e;
}

DELETE:
Original line: 31if(iZone==null){
millis-=iOffset;
}

Following are 3th generated patches:
Validating 3 patches...
Current actions:
INSERT:
2:public long computeMillis(boolean resetFields,String text){
SavedField[] savedFields=iSavedFields;
int count=iSavedFieldsCount;
if(iSavedFieldsShared){
iSavedFields=savedFields=(SavedField[])iSavedFields.clone();
iSavedFieldsShared=false;
}
sort(savedFields,count);
if(count>0){
DurationField months=DurationFieldType.months().getField(iChrono);
DurationField days=DurationFieldType.days().getField(iChrono);
DurationField first=savedFields[0].iField.getDurationField();
if(compareReverse(first,months)>=0&&compareReverse(first,days)<=0){
saveField(DateTimeFieldType.year(),iDefaultYear);
return computeMillis(resetFields,text);
}
}
long millis=iMillis;
for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}
if(iZone==null){
millis-=iOffset;
}
else{
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}
return millis;
}
TO:
1

DELETE:
Original line: 19long millis=iMillis;

DELETE:
Original line: 21for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}

DELETE:
Original line: 27e.prependMessage("Cannot parse \""+text+'"');

DELETE:
Original line: 29throw e;

DELETE:
Original line: 31if(iZone==null){
millis-=iOffset;
}

Following are 4th generated patches:
Validating 3 patches...
Current actions:
INSERT:
2:public long computeMillis(boolean resetFields,String text){
SavedField[] savedFields=iSavedFields;
int count=iSavedFieldsCount;
if(iSavedFieldsShared){
iSavedFields=savedFields=(SavedField[])iSavedFields.clone();
iSavedFieldsShared=false;
}
sort(savedFields,count);
if(count>0){
DurationField months=DurationFieldType.months().getField(iChrono);
DurationField days=DurationFieldType.days().getField(iChrono);
DurationField first=savedFields[0].iField.getDurationField();
if(compareReverse(first,months)>=0&&compareReverse(first,days)<=0){
saveField(DateTimeFieldType.year(),iDefaultYear);
return computeMillis(resetFields,text);
}
}
long millis=iMillis;
for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}
if(iZone==null){
millis-=iOffset;
}
else{
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}
return millis;
}
TO:
1

DELETE:
Original line: 19long millis=iMillis;

DELETE:
Original line: 20{
for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}
}

DELETE:
Original line: 21for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}

DELETE:
Original line: 31if(iZone==null){
millis-=iOffset;
}

Tested:1396 patches
Compile failed:1296 patches
Compilation rate:0.07163323782234957
NNNNNNNPPPPPPPNNNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/7.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/7.java
Current actions:
INSERT:
45:if(resetFields){
if(count==1&&iSavedFields[0].iField==DateTimeFieldType.weekyear()){
iSavedFields[0].reset(millis);
}
}
TO:
44

Following are 0th generated patches:
Validating 3 patches...
Current actions:
INSERT:
45:if(resetFields){
if(count==1&&iSavedFields[0].iField==DateTimeFieldType.weekyear()){
iSavedFields[0].reset(millis);
}
}
TO:
44

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
46:if(count==1&&iSavedFields[0].iField==DateTimeFieldType.weekyear()){
iSavedFields[0].reset(millis);
}
TO:
44

Following are 2th generated patches:
Validating 200 patches...
Current actions:
INSERT:
47:iSavedFields[0].reset(millis);
TO:
44

Following are 3th generated patches:
Validating 1 patches...
Tested:1800 patches
Compile failed:1700 patches
Compilation rate:0.05555555555555555
NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/8.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/8.java
Current actions:
DELETE:
Original line: 20{
for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}
}

Following are 0th generated patches:
Validating 61 patches...
Current actions:
INSERT:
23:if(resetFields){
iSavedFieldsCount=0;
}
TO:
24

Following are 1th generated patches:
Validating 8 patches...
Current actions:
DELETE:
Original line: 27e.prependMessage("Cannot parse \""+text+'"');

Following are 2th generated patches:
Validating 1 patches...
Current actions:
INSERT:
20:for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}
TO:
19

DELETE:
Original line: 21for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}

INSERT:
23:if(resetFields){
iSavedFieldsCount=0;
}
TO:
24

DELETE:
Original line: 25catch(IllegalFieldValueException e){
if(text!=null){
e.prependMessage("Cannot parse \""+text+'"');
}
throw e;
}

Following are 3th generated patches:
Validating 10 patches...
Current actions:
INSERT:
20:for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}
TO:
19

DELETE:
Original line: 20{
for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}
}

DELETE:
Original line: 21for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}

INSERT:
24:iSavedFieldsCount=0;
TO:
24

DELETE:
Original line: 25catch(IllegalFieldValueException e){
if(text!=null){
e.prependMessage("Cannot parse \""+text+'"');
}
throw e;
}

Following are 4th generated patches:
Validating 5 patches...
Current actions:
DELETE:
Original line: 26if(text!=null){
e.prependMessage("Cannot parse \""+text+'"');
}

Tested:1857 patches
Compile failed:1747 patches
Compilation rate:0.05923532579429187
NNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPNNNNNNNNPNNNNNNNNNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/9.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/9.java
Current actions:
DELETE:
Original line: 32millis-=iOffset;

Following are 0th generated patches:
Validating 1 patches...
Current actions:
DELETE:
Original line: 32millis-=iOffset;

Following are 0th generated patches:
Validating 1 patches...
Tested:1859 patches
Compile failed:1747 patches
Compilation rate:0.06024744486282948
PP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/10.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/10.java
Current actions:
DELETE:
Original line: 31if(iZone==null){
millis-=iOffset;
}

Following are 0th generated patches:
Validating 11 patches...
Current actions:
INSERT:
31:if(iZone!=null){
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}
TO:
30

Following are 1th generated patches:
Validating 42 patches...
Current actions:
INSERT:
31:if(iZone!=null){
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}
TO:
30

DELETE:
Original line: 31if(iZone==null){
millis-=iOffset;
}

DELETE:
Original line: 34else{
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}

Following are 2th generated patches:
Validating 44 patches...
Current actions:
INSERT:
31:if(iZone!=null){
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}
TO:
30

DELETE:
Original line: 31if(iZone==null){
millis-=iOffset;
}

Following are 3th generated patches:
Validating 43 patches...
Current actions:
DELETE:
Original line: 32millis-=iOffset;

Following are 4th generated patches:
Validating 1 patches...
Current actions:
DELETE:
Original line: 32millis-=iOffset;

DELETE:
Original line: 34else{
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}

Tested:1997 patches
Compile failed:1826 patches
Compilation rate:0.085628442663996
NPPPPPPPPPPNNNNNNNNNPNNNNNNNPNPNPNPPPNNNNPPNPPNPPPNPPNNNNNNNNNNNNNNNNNPPPNNPPPNNNPNNNPPNPPPPPPPNNNNNNNNPNNNNPNNPPPNNPNNNPPNNPPPPNNNNNPPPPP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/11.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/11.java
Current actions:
Wrap:
MethodDeclaration
On:
[int offset=iZone.getOffsetFromLocal(millis);, millis-=offset;, if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}, return millis;, throw e;, {
millis-=iOffset;
}, if(iZone==null){
millis-=iOffset;
}]
Following are 0th generated patches:
Validating 14 patches...
Current actions:
DELETE:
Original line: 34else{
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}

Following are 1th generated patches:
Validating 1 patches...
Current actions:
INSERT:
2:public long computeMillis(boolean resetFields,String text){
SavedField[] savedFields=iSavedFields;
int count=iSavedFieldsCount;
if(iSavedFieldsShared){
iSavedFields=savedFields=(SavedField[])iSavedFields.clone();
iSavedFieldsShared=false;
}
sort(savedFields,count);
if(count>0){
DurationField months=DurationFieldType.months().getField(iChrono);
DurationField days=DurationFieldType.days().getField(iChrono);
DurationField first=savedFields[0].iField.getDurationField();
if(compareReverse(first,months)>=0&&compareReverse(first,days)<=0){
saveField(DateTimeFieldType.year(),iDefaultYear);
return computeMillis(resetFields,text);
}
}
long millis=iMillis;
try{
for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}
}catch(IllegalFieldValueException e){
if(text!=null){
e.prependMessage("Cannot parse \""+text+'"');
}
throw e;
}
if(iZone==null){
return millis;
}
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
return millis;
}
TO:
1

DELETE:
Original line: 29throw e;

DELETE:
Original line: 31if(iZone==null){
millis-=iOffset;
}

INSERT:
32:return millis;
TO:
31

DELETE:
Original line: 35int offset=iZone.getOffsetFromLocal(millis);

DELETE:
Original line: 36millis-=offset;

DELETE:
Original line: 37if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}

DELETE:
Original line: 45return millis;

Following are 2th generated patches:
Validating 22 patches...
Current actions:
INSERT:
32:return millis;
TO:
31

DELETE:
Original line: 34else{
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}

Following are 3th generated patches:
Validating 22 patches...
Current actions:
INSERT:
2:public long computeMillis(boolean resetFields,String text){
SavedField[] savedFields=iSavedFields;
int count=iSavedFieldsCount;
if(iSavedFieldsShared){
iSavedFields=savedFields=(SavedField[])iSavedFields.clone();
iSavedFieldsShared=false;
}
sort(savedFields,count);
if(count>0){
DurationField months=DurationFieldType.months().getField(iChrono);
DurationField days=DurationFieldType.days().getField(iChrono);
DurationField first=savedFields[0].iField.getDurationField();
if(compareReverse(first,months)>=0&&compareReverse(first,days)<=0){
saveField(DateTimeFieldType.year(),iDefaultYear);
return computeMillis(resetFields,text);
}
}
long millis=iMillis;
try{
for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}
}catch(IllegalFieldValueException e){
if(text!=null){
e.prependMessage("Cannot parse \""+text+'"');
}
throw e;
}
if(iZone==null){
return millis;
}
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
return millis;
}
TO:
1

DELETE:
Original line: 29throw e;

DELETE:
Original line: 31if(iZone==null){
millis-=iOffset;
}

INSERT:
32:return millis;
TO:
31

DELETE:
Original line: 34else{
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}

DELETE:
Original line: 45return millis;

Following are 4th generated patches:
Validating 24 patches...
Current actions:
DELETE:
Original line: 32millis-=iOffset;

Tested:2069 patches
Compile failed:1884 patches
Compilation rate:0.08941517641372644
NNPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNPPPPPP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/12.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/12.java
Current actions:
UPDATE
FROM:
35:int offset=iZone.getOffsetFromLocal(millis);
TO:
35:int offset=iZone.getOffset(millis);

Following are 0th generated patches:
Validating 7 patches...
Current actions:
UPDATE
FROM:
37:if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
TO:
36:if(offset!=iZone.getOffsetFromLocal(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}

Following are 1th generated patches:
Validating 22 patches...
Current actions:
UPDATE
FROM:
35:int offset=iZone.getOffsetFromLocal(millis);
TO:
35:int offset=iZone.getOffset(millis);

DELETE:
Original line: 36millis-=offset;

Following are 2th generated patches:
Validating 200 patches...
Current actions:
UPDATE
FROM:
35:int offset=iZone.getOffsetFromLocal(millis);
TO:
35:int offset=iZone.getOffset(millis);

UPDATE
FROM:
37:if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
TO:
36:if(offset!=iZone.getOffsetFromLocal(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}

DELETE:
Original line: 36millis-=offset;

Following are 3th generated patches:
Validating 200 patches...
Tested:2497 patches
Compile failed:2285 patches
Compilation rate:0.08490188225871045
PPPPPPPNNNNNNNNNNNNNNNNNNNNPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPNNNNNNNNNPNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNPNPNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNPNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNPNNNNNNNNNPNNNNNNNNNNNNNNPNNPNNNNNNNNNNNNP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/13.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/13.java
Current actions:
UPDATE
FROM:
35:int offset=iZone.getOffsetFromLocal(millis);
TO:
35:int offset=iZone.getOffset(millis);

Following are 0th generated patches:
Validating 3 patches...
Current actions:
UPDATE
FROM:
35:int offset=iZone.getOffsetFromLocal(millis);
TO:
35:int offset=iZone.getOffset(millis);

UPDATE
FROM:
36:millis-=offset;
TO:
36:millis+=offset;

Following are 1th generated patches:
Validating 200 patches...
Current actions:
UPDATE
FROM:
36:millis-=offset;
TO:
36:millis+=offset;

Following are 2th generated patches:
Validating 1 patches...
Current actions:
UPDATE
FROM:
35:int offset=iZone.getOffsetFromLocal(millis);
TO:
35:int offset=iZone.getOffset(millis);

Following are 3th generated patches:
Validating 200 patches...
Tested:2900 patches
Compile failed:2666 patches
Compilation rate:0.08068965517241379
PPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNPPNNNNNNNNNNNNPNNNNNNNNNNNNNPNPNNNNNNNNNNNNNPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNPNNNNNNNNNNNNNNNPNNNNNNNNPPNNNNNNNNNNNNNNNP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/14.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/14.java
Current actions:
DELETE:
Original line: 32millis-=iOffset;

Following are 0th generated patches:
Validating 14 patches...
Current actions:
UPDATE
FROM:
37:if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
TO:
35:if(offset!=iZone.getOffset(millis+iOffset)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}

Following are 1th generated patches:
Validating 1 patches...
Current actions:
DELETE:
Original line: 32millis-=iOffset;

UPDATE
FROM:
35:int offset=iZone.getOffsetFromLocal(millis);
TO:
34:int offset=iZone.getOffset(millis);

UPDATE
FROM:
37:if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
TO:
35:if(offset!=iZone.getOffset(millis+iOffset)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}

Following are 2th generated patches:
Validating 200 patches...
Current actions:
DELETE:
Original line: 36millis-=offset;

Following are 3th generated patches:
Validating 1 patches...
Current actions:
DELETE:
Original line: 32millis-=iOffset;

UPDATE
FROM:
37:if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
TO:
35:if(offset!=iZone.getOffset(millis+iOffset)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}

Following are 4th generated patches:
Validating 2 patches...
Tested:3117 patches
Compile failed:2856 patches
Compilation rate:0.08373435996150144
PPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNPNNNNNPNNNNNNNNNNNNNNPNNNNNNNNNNPNNNNNNNNPNNNNNNNNPPPP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/15.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/15.java
Current actions:
INSERT:
4:if(iSavedFieldsCount>0){
DurationField months=DurationFieldType.months().getField(iChrono);
DurationField days=DurationFieldType.days().getField(iChrono);
DurationField first=iSavedFields[0].iField.getDurationField();
if(compareReverse(first,months)>=0&&compareReverse(first,days)<=0){
iValues[4]=iDefaultYear;
millis=computeMillis(resetFields,text);
}
}
TO:
2

Following are 1th generated patches:
Validating 20 patches...
Current actions:
DELETE:
Original line: 6iSavedFields=savedFields=(SavedField[])iSavedFields.clone();

UPDATE
FROM:
13:DurationField first=savedFields[0].iField.getDurationField();
TO:
7:DurationField first=iSavedFields[0].iField.getDurationField();

INSERT:
10:millis=computeMillis(resetFields,text);
TO:
14

INSERT:
13:for(int i=0;i<iSavedFieldsCount;i++){
millis=iSavedFields[i].set(millis,resetFields);
}
TO:
24

DELETE:
Original line: 20{
for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}
}

DELETE:
Original line: 21for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}

DELETE:
Original line: 25catch(IllegalFieldValueException e){
if(text!=null){
e.prependMessage("Cannot parse \""+text+'"');
}
throw e;
}

Following are 2th generated patches:
Validating 35 patches...
Current actions:
DELETE:
Original line: 5if(iSavedFieldsShared){
iSavedFields=savedFields=(SavedField[])iSavedFields.clone();
iSavedFieldsShared=false;
}

DELETE:
Original line: 15saveField(DateTimeFieldType.year(),iDefaultYear);

DELETE:
Original line: 25catch(IllegalFieldValueException e){
if(text!=null){
e.prependMessage("Cannot parse \""+text+'"');
}
throw e;
}

Following are 3th generated patches:
Validating 3 patches...
Current actions:
INSERT:
4:if(iSavedFieldsCount>0){
DurationField months=DurationFieldType.months().getField(iChrono);
DurationField days=DurationFieldType.days().getField(iChrono);
DurationField first=iSavedFields[0].iField.getDurationField();
if(compareReverse(first,months)>=0&&compareReverse(first,days)<=0){
iValues[4]=iDefaultYear;
millis=computeMillis(resetFields,text);
}
}
TO:
2

DELETE:
Original line: 4int count=iSavedFieldsCount;

DELETE:
Original line: 5if(iSavedFieldsShared){
iSavedFields=savedFields=(SavedField[])iSavedFields.clone();
iSavedFieldsShared=false;
}

DELETE:
Original line: 9sort(savedFields,count);

DELETE:
Original line: 10if(count>0){
DurationField months=DurationFieldType.months().getField(iChrono);
DurationField days=DurationFieldType.days().getField(iChrono);
DurationField first=savedFields[0].iField.getDurationField();
if(compareReverse(first,months)>=0&&compareReverse(first,days)<=0){
saveField(DateTimeFieldType.year(),iDefaultYear);
return computeMillis(resetFields,text);
}
}

DELETE:
Original line: 20{
for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}
}

DELETE:
Original line: 25catch(IllegalFieldValueException e){
if(text!=null){
e.prependMessage("Cannot parse \""+text+'"');
}
throw e;
}

Following are 4th generated patches:
Validating 26 patches...
Current actions:
INSERT:
3:long millis=iMillis;
TO:
2

DELETE:
Original line: 3SavedField[] savedFields=iSavedFields;

INSERT:
4:if(iSavedFieldsCount>0){
DurationField months=DurationFieldType.months().getField(iChrono);
DurationField days=DurationFieldType.days().getField(iChrono);
DurationField first=iSavedFields[0].iField.getDurationField();
if(compareReverse(first,months)>=0&&compareReverse(first,days)<=0){
iValues[4]=iDefaultYear;
millis=computeMillis(resetFields,text);
}
}
TO:
2

DELETE:
Original line: 4int count=iSavedFieldsCount;

DELETE:
Original line: 5if(iSavedFieldsShared){
iSavedFields=savedFields=(SavedField[])iSavedFields.clone();
iSavedFieldsShared=false;
}

UPDATE
FROM:
13:DurationField first=savedFields[0].iField.getDurationField();
TO:
7:DurationField first=iSavedFields[0].iField.getDurationField();

DELETE:
Original line: 9sort(savedFields,count);

DELETE:
Original line: 10if(count>0){
DurationField months=DurationFieldType.months().getField(iChrono);
DurationField days=DurationFieldType.days().getField(iChrono);
DurationField first=savedFields[0].iField.getDurationField();
if(compareReverse(first,months)>=0&&compareReverse(first,days)<=0){
saveField(DateTimeFieldType.year(),iDefaultYear);
return computeMillis(resetFields,text);
}
}

INSERT:
13:for(int i=0;i<iSavedFieldsCount;i++){
millis=iSavedFields[i].set(millis,resetFields);
}
TO:
24

DELETE:
Original line: 19long millis=iMillis;

DELETE:
Original line: 20{
for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}
}

DELETE:
Original line: 21for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}

DELETE:
Original line: 25catch(IllegalFieldValueException e){
if(text!=null){
e.prependMessage("Cannot parse \""+text+'"');
}
throw e;
}

Tested:3187 patches
Compile failed:2926 patches
Compilation rate:0.08189519924694069
NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/16.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/16.java
Current actions:
UPDATE
FROM:
35:int offset=iZone.getOffsetFromLocal(millis);
TO:
35:int offset=iZone.getOffset(iMillis);

Following are 0th generated patches:
Validating 1 patches...
Current actions:
UPDATE
FROM:
35:int offset=iZone.getOffsetFromLocal(millis);
TO:
35:int offset=iZone.getOffset(iMillis);

Following are 1th generated patches:
Validating 200 patches...
Tested:3388 patches
Compile failed:3117 patches
Compilation rate:0.07998819362455727
PNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNPNPNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNPNNNNNNNP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/17.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/17.java
Current actions:
INSERT:
3:if(iChrono==null){
return computeMillis(resetFields,text);
}
TO:
2

Following are 0th generated patches:
Validating 2 patches...
Current actions:
INSERT:
3:if(iChrono==null){
return computeMillis(resetFields,text);
}
TO:
2

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
4:return computeMillis(resetFields,text);
TO:
2

Following are 2th generated patches:
Validating 200 patches...
Tested:3790 patches
Compile failed:3470 patches
Compilation rate:0.08443271767810026
NPNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNPNNNNNNNPNNNNPNPNNNNNNNNNNNNNNNNNPPNNNNNNPNNPNNNNNPPPNNNNNPNPNNNNNPNNNNPNPNNNNPPPNPNPPPNNNNPNNNNNNNNNNNPNPPNNNPPPPPNNPPNPNNNNPNNNNPNNNPNPNPNNNPNPPNNNNNNNNNNNNNNNPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/18.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/18.java
Current actions:
DELETE:
Original line: 5if(iSavedFieldsShared){
iSavedFields=savedFields=(SavedField[])iSavedFields.clone();
iSavedFieldsShared=false;
}

Following are 0th generated patches:
Validating 200 patches...
Current actions:
INSERT:
7:if(iSavedFieldsShared){
savedFields=(SavedField[])iSavedFields.clone();
iSavedFieldsShared=false;
}
TO:
20

Following are 1th generated patches:
Validating 144 patches...
Current actions:
DELETE:
Original line: 7iSavedFieldsShared=false;

INSERT:
7:if(iSavedFieldsShared){
savedFields=(SavedField[])iSavedFields.clone();
iSavedFieldsShared=false;
}
TO:
20

DELETE:
Original line: 9sort(savedFields,count);

DELETE:
Original line: 11DurationField months=DurationFieldType.months().getField(iChrono);

INSERT:
11:sort(savedFields,count);
TO:
20

DELETE:
Original line: 12DurationField days=DurationFieldType.days().getField(iChrono);

DELETE:
Original line: 13DurationField first=savedFields[0].iField.getDurationField();

Following are 2th generated patches:
Validating 149 patches...
Current actions:
DELETE:
Original line: 4int count=iSavedFieldsCount;

DELETE:
Original line: 6iSavedFields=savedFields=(SavedField[])iSavedFields.clone();

INSERT:
6:int count=iSavedFieldsCount;
TO:
20

INSERT:
7:if(iSavedFieldsShared){
savedFields=(SavedField[])iSavedFields.clone();
iSavedFieldsShared=false;
}
TO:
20

DELETE:
Original line: 9sort(savedFields,count);

DELETE:
Original line: 11DurationField months=DurationFieldType.months().getField(iChrono);

INSERT:
11:sort(savedFields,count);
TO:
20

DELETE:
Original line: 12DurationField days=DurationFieldType.days().getField(iChrono);

DELETE:
Original line: 13DurationField first=savedFields[0].iField.getDurationField();

DELETE:
Original line: 14if(compareReverse(first,months)>=0&&compareReverse(first,days)<=0){
saveField(DateTimeFieldType.year(),iDefaultYear);
return computeMillis(resetFields,text);
}

Following are 3th generated patches:
Validating 151 patches...
Current actions:
DELETE:
Original line: 7iSavedFieldsShared=false;

INSERT:
9:iSavedFieldsShared=false;
TO:
20

DELETE:
Original line: 10if(count>0){
DurationField months=DurationFieldType.months().getField(iChrono);
DurationField days=DurationFieldType.days().getField(iChrono);
DurationField first=savedFields[0].iField.getDurationField();
if(compareReverse(first,months)>=0&&compareReverse(first,days)<=0){
saveField(DateTimeFieldType.year(),iDefaultYear);
return computeMillis(resetFields,text);
}
}

Following are 4th generated patches:
Validating 2 patches...
Current actions:
DELETE:
Original line: 7iSavedFieldsShared=false;

INSERT:
8:savedFields=(SavedField[])iSavedFields.clone();
TO:
20

INSERT:
9:iSavedFieldsShared=false;
TO:
20

DELETE:
Original line: 12DurationField days=DurationFieldType.days().getField(iChrono);

DELETE:
Original line: 15saveField(DateTimeFieldType.year(),iDefaultYear);

Tested:4307 patches
Compile failed:3929 patches
Compilation rate:0.08776410494543765
NNNNNNNNNNPPPPPPNPPNPPNNNNNNNNPPNNPPPPPNNPNPPPPPNPNNPPPPPNNNPPPPNPPPNNNNNPPPNPNPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNPNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNPNPNNNPNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNPNNNPNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/19.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/19.java
Current actions:
UPDATE
FROM:
35:int offset=iZone.getOffsetFromLocal(millis);
TO:
35:long offset=iZone.getOffsetFromLocal(millis);

Following are 0th generated patches:
Validating 1 patches...
Current actions:
UPDATE
FROM:
35:int offset=iZone.getOffsetFromLocal(millis);
TO:
35:long offset=iZone.getOffsetFromLocal(millis);

Following are 0th generated patches:
Validating 1 patches...
Tested:4309 patches
Compile failed:3929 patches
Compilation rate:0.08818751450452542
PP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/20.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/20.java
Current actions:
INSERT:
3:if(iZone==null){
return computeMillis0(resetFields,text);
}
TO:
2

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
8:if(iZone!=null){
int offset=iZone.getOffset(iMillis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}
TO:
20

Following are 2th generated patches:
Validating 40 patches...
Current actions:
INSERT:
3:if(iZone==null){
return computeMillis0(resetFields,text);
}
TO:
2

DELETE:
Original line: 3SavedField[] savedFields=iSavedFields;

DELETE:
Original line: 4int count=iSavedFieldsCount;

DELETE:
Original line: 5if(iSavedFieldsShared){
iSavedFields=savedFields=(SavedField[])iSavedFields.clone();
iSavedFieldsShared=false;
}

INSERT:
8:if(iZone!=null){
int offset=iZone.getOffset(iMillis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}
TO:
20

DELETE:
Original line: 9sort(savedFields,count);

DELETE:
Original line: 11DurationField months=DurationFieldType.months().getField(iChrono);

DELETE:
Original line: 12DurationField days=DurationFieldType.days().getField(iChrono);

DELETE:
Original line: 13DurationField first=savedFields[0].iField.getDurationField();

DELETE:
Original line: 14if(compareReverse(first,months)>=0&&compareReverse(first,days)<=0){
saveField(DateTimeFieldType.year(),iDefaultYear);
return computeMillis(resetFields,text);
}

UPDATE
FROM:
21:for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}
TO:
19:for(int i=0;i<iSavedFieldsCount;i++){
millis=iSavedFields[i].set(millis,resetFields);
}

UPDATE
FROM:
22:millis=savedFields[i].set(millis,resetFields);
TO:
20:millis=iSavedFields[i].set(millis,resetFields);

DELETE:
Original line: 31if(iZone==null){
millis-=iOffset;
}

DELETE:
Original line: 34else{
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}

Following are 3th generated patches:
Validating 200 patches...
Current actions:
INSERT:
3:if(iZone==null){
return computeMillis0(resetFields,text);
}
TO:
2

DELETE:
Original line: 4int count=iSavedFieldsCount;

INSERT:
11:if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
TO:
20

DELETE:
Original line: 11DurationField months=DurationFieldType.months().getField(iChrono);

DELETE:
Original line: 37if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}

Following are 4th generated patches:
Validating 200 patches...
Tested:4935 patches
Compile failed:4489 patches
Compilation rate:0.09037487335359676
NNNNNNNNPNNNNNNNNNNNNNNNNNNNPPNPNPNPPNNNPNNNNNNNNNNPPNPPNNPNNNNNPNPNNPNNNNNPNNNPNNNNNPNNNNNNNNNNNNNPPNNNNNNNNNNNNNNNNNNNNPNPPNNPNPNNPPPNNNNNPNNNNNNNPNPNNNNNNNNNPPPNNPNNPNPPPNNNPNNPNNNPNNNPNNPNNPPPPPPPNNNNNNNNNNNPNNNNNNPNNPPNPNPNNPNPPNNPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/21.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/21.java
Current actions:
DELETE:
Original line: 31if(iZone==null){
millis-=iOffset;
}

Following are 0th generated patches:
Validating 188 patches...
Current actions:
DELETE:
Original line: 31if(iZone==null){
millis-=iOffset;
}

INSERT:
31:return millis+iOffset;
TO:
30

DELETE:
Original line: 34else{
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}

DELETE:
Original line: 45return millis;

Following are 1th generated patches:
Validating 42 patches...
Current actions:
DELETE:
Original line: 34else{
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}

Following are 2th generated patches:
Validating 1 patches...
Current actions:
DELETE:
Original line: 31if(iZone==null){
millis-=iOffset;
}

DELETE:
Original line: 34else{
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}

DELETE:
Original line: 45return millis;

Following are 3th generated patches:
Validating 3 patches...
Current actions:
INSERT:
31:return millis+iOffset;
TO:
30

DELETE:
Original line: 34else{
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}

Following are 4th generated patches:
Validating 40 patches...
Current actions:
DELETE:
Original line: 42throw new IllegalArgumentException(message);

Tested:5203 patches
Compile failed:4712 patches
Compilation rate:0.09436863348068422
NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNPNNNNNNNPPPNPNNNNPNNNNNNPNPNNNNNNNNNNNNNNNNNNNNNNNPPPNPPNNNNNNNNNPPNPPPNPPNNNNNNNNNNNNPNNNNPNNNNNNPNNPNNPNNNNNNNPNPNNPNNNNNNNNPPNNNNNNNNNPNNNNNNPPNNNNPPPNPPNNNNNNPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/22.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/22.java
Current actions:
INSERT:
33:millis-=iChrono.getZone().getOffset(millis);
TO:
32

Following are 0th generated patches:
Validating 1 patches...
Current actions:
INSERT:
33:millis-=iChrono.getZone().getOffset(millis);
TO:
32

Following are 1th generated patches:
Validating 31 patches...
Tested:5235 patches
Compile failed:4742 patches
Compilation rate:0.0941738299904489
PNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/23.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/23.java
Current actions:
DELETE:
Original line: 15saveField(DateTimeFieldType.year(),iDefaultYear);

Following are 0th generated patches:
Validating 1 patches...
Current actions:
DELETE:
Original line: 15saveField(DateTimeFieldType.year(),iDefaultYear);

Following are 0th generated patches:
Validating 1 patches...
Tested:5237 patches
Compile failed:4742 patches
Compilation rate:0.0945197632232194
PP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/24.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/24.java
Current actions:
UPDATE
FROM:
35:int offset=iZone.getOffsetFromLocal(millis);
TO:
35:long offset=iZone.getOffsetMillis(millis);

Following are 0th generated patches:
Validating 3 patches...
Current actions:
UPDATE
FROM:
37:if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
TO:
37:if(offset!=iZone.getOffsetMillis(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}

Following are 1th generated patches:
Validating 4 patches...
Current actions:
UPDATE
FROM:
35:int offset=iZone.getOffsetFromLocal(millis);
TO:
35:long offset=iZone.getOffsetMillis(millis);

UPDATE
FROM:
37:if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
TO:
37:if(offset!=iZone.getOffsetMillis(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}

Following are 2th generated patches:
Validating 200 patches...
Current actions:
UPDATE
FROM:
35:int offset=iZone.getOffsetFromLocal(millis);
TO:
35:long offset=iZone.getOffsetMillis(millis);

Following are 3th generated patches:
Validating 200 patches...
Tested:5644 patches
Compile failed:5130 patches
Compilation rate:0.09107016300496103
NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPNNPNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNPNPNNPNNNNNNNPNNNNNPNNNNNNNPNPNNNNNNPNNNNNPNNNNNNNPNNNNNNNPNNNNNNPNNNNNNNNNNNNNNNP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/25.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/25.java
Current actions:
INSERT:
45:if(resetFields){
setValues(millis);
}
TO:
44

Following are 0th generated patches:
Validating 2 patches...
Current actions:
INSERT:
45:if(resetFields){
setValues(millis);
}
TO:
44

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
46:setValues(millis);
TO:
44

Following are 2th generated patches:
Validating 200 patches...
Tested:6046 patches
Compile failed:5377 patches
Compilation rate:0.11065167052596758
NNNNNNNNNNPPNPNPPPNPNPPPPNNNNPPPPPPPPPPNPPPPNPNNPPPNPNNPNNNNPNNPPPNPPPPPPPPNNPPPNPNNPPPPPPPNPPPPPNNNNPPPNNNPPNNPNPPNNNPPNPNPPPNNPNPPPNPPNNPPNPNNNNPPPPNNNPNPPPNPNPNPPNPPPPNNNNNPNNNNPNNNPNNPPPPPPNPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNPNNPNNPNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNPNNNPNNPNPNNNPPNPPNPPNNPPNPPPNPPPPNPNNPPPPPPNPNNNPNPNNNNNNPNNNNNNNNNNNNNNNPNNNPNNNNNNNPP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/26.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/26.java
Current actions:
Move
FROM:
Former Line 19:long millis=iMillis;
TO:
Current Line 2:Block

Following are 0th generated patches:
Validating 85 patches...
Current actions:
INSERT:
4:if(iZone!=null){
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}
TO:
2

Following are 1th generated patches:
Validating 42 patches...
Current actions:
INSERT:
3:long millis=iMillis;
TO:
2

UPDATE
FROM:
32:millis-=iOffset;
TO:
6:millis-=offset;

DELETE:
Original line: 19long millis=iMillis;

DELETE:
Original line: 34else{
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}

Following are 2th generated patches:
Validating 23 patches...
Current actions:
INSERT:
3:long millis=iMillis;
TO:
2

INSERT:
5:int offset=iZone.getOffsetFromLocal(millis);
TO:
2

INSERT:
7:if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
TO:
32

DELETE:
Original line: 19long millis=iMillis;

DELETE:
Original line: 31if(iZone==null){
millis-=iOffset;
}

DELETE:
Original line: 34else{
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}

Following are 3th generated patches:
Validating 5 patches...
Current actions:
INSERT:
4:if(iZone!=null){
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}
TO:
2

UPDATE
FROM:
32:millis-=iOffset;
TO:
6:millis-=offset;

DELETE:
Original line: 34else{
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}

Following are 4th generated patches:
Validating 64 patches...
Current actions:
INSERT:
3:long millis=iMillis;
TO:
2

INSERT:
4:if(iZone!=null){
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}
TO:
2

UPDATE
FROM:
32:millis-=iOffset;
TO:
6:millis-=offset;

DELETE:
Original line: 19long millis=iMillis;

DELETE:
Original line: 31if(iZone==null){
millis-=iOffset;
}

DELETE:
Original line: 34else{
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}

Tested:6194 patches
Compile failed:5513 patches
Compilation rate:0.10994510816919599
NNNNNNNNNNNNNNNNNNPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNPNNPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/27.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/27.java
Current actions:
INSERT:
3:if(iMillis==Long.MIN_VALUE){
return Long.MIN_VALUE;
}
TO:
2

Following are 0th generated patches:
Validating 36 patches...
Current actions:
INSERT:
3:if(iMillis==Long.MIN_VALUE){
return Long.MIN_VALUE;
}
TO:
2

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
3:if(iMillis==Long.MIN_VALUE){
return Long.MIN_VALUE;
}
TO:
2

DELETE:
Original line: 11DurationField months=DurationFieldType.months().getField(iChrono);

INSERT:
14:DurationField months=iChrono.months();
TO:
10

INSERT:
15:DurationField days=iChrono.days();
TO:
10

Following are 2th generated patches:
Validating 200 patches...
Current actions:
DELETE:
Original line: 11DurationField months=DurationFieldType.months().getField(iChrono);

INSERT:
14:DurationField months=iChrono.months();
TO:
10

INSERT:
15:DurationField days=iChrono.days();
TO:
10

Following are 3th generated patches:
Validating 31 patches...
Current actions:
INSERT:
4:return Long.MIN_VALUE;
TO:
2

DELETE:
Original line: 11DurationField months=DurationFieldType.months().getField(iChrono);

Following are 4th generated patches:
Validating 22 patches...
Current actions:
DELETE:
Original line: 11DurationField months=DurationFieldType.months().getField(iChrono);

Tested:6677 patches
Compile failed:5982 patches
Compilation rate:0.10408866257301183
NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNPNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNPNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/28.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/28.java
Current actions:
INSERT:
3:if(iZone==null){
return computeMillis(resetFields);
}
TO:
2

Following are 0th generated patches:
Validating 148 patches...
Current actions:
INSERT:
3:if(iZone==null){
return computeMillis(resetFields);
}
TO:
2

Following are 1th generated patches:
Validating 200 patches...
Current actions:
INSERT:
3:if(iZone==null){
return computeMillis(resetFields);
}
TO:
2

INSERT:
6:long millis=iMillis;
TO:
2

DELETE:
Original line: 19long millis=iMillis;

DELETE:
Original line: 31if(iZone==null){
millis-=iOffset;
}

DELETE:
Original line: 34else{
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}

INSERT:
34:int offset=iZone.getOffset(millis);
TO:
30

INSERT:
35:millis-=offset;
TO:
30

INSERT:
36:if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
TO:
30

Following are 2th generated patches:
Validating 200 patches...
Current actions:
INSERT:
4:return computeMillis(resetFields);
TO:
2

INSERT:
6:long millis=iMillis;
TO:
2

DELETE:
Original line: 19long millis=iMillis;

DELETE:
Original line: 31if(iZone==null){
millis-=iOffset;
}

DELETE:
Original line: 34else{
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}

INSERT:
34:int offset=iZone.getOffset(millis);
TO:
30

INSERT:
35:millis-=offset;
TO:
30

INSERT:
36:if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
TO:
30

Following are 3th generated patches:
Validating 200 patches...
Current actions:
INSERT:
4:return computeMillis(resetFields);
TO:
2

DELETE:
Original line: 32millis-=iOffset;

INSERT:
34:int offset=iZone.getOffset(millis);
TO:
30

DELETE:
Original line: 35int offset=iZone.getOffsetFromLocal(millis);

Following are 4th generated patches:
Validating 200 patches...
Tested:7511 patches
Compile failed:6702 patches
Compilation rate:0.10770869391559047
NNNNNNNPPNPPPNPNNNNNNNNNPPPNNNPNNPNPNNPNNNPPPPNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNPNPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPNPNNNNNPNNNNNNNNPNNPNNPPNPNPPNNNNNPNNNNNNNPNNNNPNPPPNNNPNPNNNNPPPPPPNPNNNNPPNNNNNPNPNNPNNNNNPNNNPNNPPNPNNNNNPPPPPPNNNNNNNNNNPNPPPNNNNNNPNNNNNNPNPPNNNNNNNNNNPNNNNNPNPNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNPNPPPNPNNPNNNNNNNNNPNNNPPNPNNNPNNNNNPNPPPNNNNNNPNNPNPPNNNNPNPPPPNNPNNPNNNNPPNPNNNPPPNNNNPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/29.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/29.java
Current actions:
DELETE:
Original line: 3SavedField[] savedFields=iSavedFields;

Following are 0th generated patches:
Validating 200 patches...
Current actions:
INSERT:
5:if(resetFields){
millis=0;
}
TO:
20

Following are 1th generated patches:
Validating 8 patches...
Current actions:
INSERT:
5:if(resetFields){
millis=0;
}
TO:
20

UPDATE
FROM:
21:for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}
TO:
8:for(int i=0;i<iSavedFieldsCount;i++){
millis=iSavedFields[i].set(millis,resetFields);
}

DELETE:
Original line: 11DurationField months=DurationFieldType.months().getField(iChrono);

DELETE:
Original line: 15saveField(DateTimeFieldType.year(),iDefaultYear);

Following are 2th generated patches:
Validating 17 patches...
Current actions:
INSERT:
5:if(resetFields){
millis=0;
}
TO:
20

DELETE:
Original line: 6iSavedFields=savedFields=(SavedField[])iSavedFields.clone();

UPDATE
FROM:
22:millis=savedFields[i].set(millis,resetFields);
TO:
9:millis=iSavedFields[i].set(millis,resetFields);

DELETE:
Original line: 9sort(savedFields,count);

DELETE:
Original line: 10if(count>0){
DurationField months=DurationFieldType.months().getField(iChrono);
DurationField days=DurationFieldType.days().getField(iChrono);
DurationField first=savedFields[0].iField.getDurationField();
if(compareReverse(first,months)>=0&&compareReverse(first,days)<=0){
saveField(DateTimeFieldType.year(),iDefaultYear);
return computeMillis(resetFields,text);
}
}

Following are 3th generated patches:
Validating 12 patches...
Current actions:
DELETE:
Original line: 3SavedField[] savedFields=iSavedFields;

DELETE:
Original line: 5if(iSavedFieldsShared){
iSavedFields=savedFields=(SavedField[])iSavedFields.clone();
iSavedFieldsShared=false;
}

INSERT:
5:if(resetFields){
millis=0;
}
TO:
20

DELETE:
Original line: 9sort(savedFields,count);

DELETE:
Original line: 12DurationField days=DurationFieldType.days().getField(iChrono);

DELETE:
Original line: 13DurationField first=savedFields[0].iField.getDurationField();

DELETE:
Original line: 14if(compareReverse(first,months)>=0&&compareReverse(first,days)<=0){
saveField(DateTimeFieldType.year(),iDefaultYear);
return computeMillis(resetFields,text);
}

Following are 4th generated patches:
Validating 14 patches...
Current actions:
DELETE:
Original line: 3SavedField[] savedFields=iSavedFields;

DELETE:
Original line: 4int count=iSavedFieldsCount;

DELETE:
Original line: 5if(iSavedFieldsShared){
iSavedFields=savedFields=(SavedField[])iSavedFields.clone();
iSavedFieldsShared=false;
}

INSERT:
5:if(resetFields){
millis=0;
}
TO:
20

UPDATE
FROM:
21:for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}
TO:
8:for(int i=0;i<iSavedFieldsCount;i++){
millis=iSavedFields[i].set(millis,resetFields);
}

UPDATE
FROM:
22:millis=savedFields[i].set(millis,resetFields);
TO:
9:millis=iSavedFields[i].set(millis,resetFields);

DELETE:
Original line: 9sort(savedFields,count);

DELETE:
Original line: 10if(count>0){
DurationField months=DurationFieldType.months().getField(iChrono);
DurationField days=DurationFieldType.days().getField(iChrono);
DurationField first=savedFields[0].iField.getDurationField();
if(compareReverse(first,months)>=0&&compareReverse(first,days)<=0){
saveField(DateTimeFieldType.year(),iDefaultYear);
return computeMillis(resetFields,text);
}
}

Tested:7750 patches
Compile failed:6852 patches
Compilation rate:0.11587096774193549
NNNNNNNNPPPPPPPPPPNNNNNNNNNNPPNNPNPPPPNPPNNNNNNNNPNNNNNNNNNNNNNPNNNNNNNNPNPNPNNNNNNNNNNNNNNPNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNPNPPPPPPPPPNPPNPNPPPPPPPNPNPPPNPPPPPNPNNPPPPPPPPNPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNPPPPPPPPNNNNNNNN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/30.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/30.java
Current actions:
Wrap:
MethodDeclaration
On:
[long millis=iMillis;, {
if(text!=null){
e.prependMessage("Cannot parse \""+text+'"');
}
throw e;
}, {
SavedField[] savedFields=iSavedFields;
int count=iSavedFieldsCount;
if(iSavedFieldsShared){
iSavedFields=savedFields=(SavedField[])iSavedFields.clone();
iSavedFieldsShared=false;
}
sort(savedFields,count);
if(count>0){
DurationField months=DurationFieldType.months().getField(iChrono);
DurationField days=DurationFieldType.days().getField(iChrono);
DurationField first=savedFields[0].iField.getDurationField();
if(compareReverse(first,months)>=0&&compareReverse(first,days)<=0){
saveField(DateTimeFieldType.year(),iDefaultYear);
return computeMillis(resetFields,text);
}
}
long millis=iMillis;
try{
for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}
}catch(IllegalFieldValueException e){
if(text!=null){
e.prependMessage("Cannot parse \""+text+'"');
}
throw e;
}
if(iZone==null){
millis-=iOffset;
}
else{
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}
return millis;
}, DurationField months=DurationFieldType.months().getField(iChrono);, DurationField days=DurationFieldType.days().getField(iChrono);, if(compareReverse(first,months)>=0&&compareReverse(first,days)<=0){
saveField(DateTimeFieldType.year(),iDefaultYear);
return computeMillis(resetFields,text);
}, {
saveField(DateTimeFieldType.year(),iDefaultYear);
return computeMillis(resetFields,text);
}, return computeMillis(resetFields,text);]
Following are 0th generated patches:
Validating 200 patches...
Current actions:
INSERT:
2:public long computeMillis(boolean resetFields,String text){
long millis=iMillis;
try{
DurationField months=DurationFieldType.months().getField(iChrono);
DurationField days=DurationFieldType.days().getField(iChrono);
DurationField first=getFieldType(0).getDurationField();
if(compareReverse(first,months)>=0&&compareReverse(first,days)<=0){
saveField(DateTimeFieldType.year(),2000);
return computeMillis(resetFields,text);
}
for(int i=0;i<iSavedFieldsCount;i++){
millis=iSavedFields[i].set(millis,resetFields);
}
}catch(IllegalFieldValueException e){
if(text!=null){
e.prependMessage("Cannot parse \""+text+'"');
}
throw e;
}
if(iZone==null){
millis-=iOffset;
}
else{
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}
return millis;
}
TO:
1

DELETE:
Original line: 2{
SavedField[] savedFields=iSavedFields;
int count=iSavedFieldsCount;
if(iSavedFieldsShared){
iSavedFields=savedFields=(SavedField[])iSavedFields.clone();
iSavedFieldsShared=false;
}
sort(savedFields,count);
if(count>0){
DurationField months=DurationFieldType.months().getField(iChrono);
DurationField days=DurationFieldType.days().getField(iChrono);
DurationField first=savedFields[0].iField.getDurationField();
if(compareReverse(first,months)>=0&&compareReverse(first,days)<=0){
saveField(DateTimeFieldType.year(),iDefaultYear);
return computeMillis(resetFields,text);
}
}
long millis=iMillis;
try{
for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}
}catch(IllegalFieldValueException e){
if(text!=null){
e.prependMessage("Cannot parse \""+text+'"');
}
throw e;
}
if(iZone==null){
millis-=iOffset;
}
else{
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}
return millis;
}

DELETE:
Original line: 6iSavedFields=savedFields=(SavedField[])iSavedFields.clone();

DELETE:
Original line: 7iSavedFieldsShared=false;

DELETE:
Original line: 11DurationField months=DurationFieldType.months().getField(iChrono);

DELETE:
Original line: 12DurationField days=DurationFieldType.days().getField(iChrono);

DELETE:
Original line: 14if(compareReverse(first,months)>=0&&compareReverse(first,days)<=0){
saveField(DateTimeFieldType.year(),iDefaultYear);
return computeMillis(resetFields,text);
}

DELETE:
Original line: 19long millis=iMillis;

DELETE:
Original line: 25{
if(text!=null){
e.prependMessage("Cannot parse \""+text+'"');
}
throw e;
}

Following are 1th generated patches:
Validating 3 patches...
Current actions:
UPDATE
FROM:
22:millis=savedFields[i].set(millis,resetFields);
TO:
13:millis=iSavedFields[i].set(millis,resetFields);

DELETE:
Original line: 20{
for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}
}

Following are 2th generated patches:
Validating 2 patches...
Current actions:
UPDATE
FROM:
22:millis=savedFields[i].set(millis,resetFields);
TO:
13:millis=iSavedFields[i].set(millis,resetFields);

DELETE:
Original line: 15saveField(DateTimeFieldType.year(),iDefaultYear);

Following are 3th generated patches:
Validating 2 patches...
Current actions:
INSERT:
2:public long computeMillis(boolean resetFields,String text){
long millis=iMillis;
try{
DurationField months=DurationFieldType.months().getField(iChrono);
DurationField days=DurationFieldType.days().getField(iChrono);
DurationField first=getFieldType(0).getDurationField();
if(compareReverse(first,months)>=0&&compareReverse(first,days)<=0){
saveField(DateTimeFieldType.year(),2000);
return computeMillis(resetFields,text);
}
for(int i=0;i<iSavedFieldsCount;i++){
millis=iSavedFields[i].set(millis,resetFields);
}
}catch(IllegalFieldValueException e){
if(text!=null){
e.prependMessage("Cannot parse \""+text+'"');
}
throw e;
}
if(iZone==null){
millis-=iOffset;
}
else{
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}
return millis;
}
TO:
1

DELETE:
Original line: 2{
SavedField[] savedFields=iSavedFields;
int count=iSavedFieldsCount;
if(iSavedFieldsShared){
iSavedFields=savedFields=(SavedField[])iSavedFields.clone();
iSavedFieldsShared=false;
}
sort(savedFields,count);
if(count>0){
DurationField months=DurationFieldType.months().getField(iChrono);
DurationField days=DurationFieldType.days().getField(iChrono);
DurationField first=savedFields[0].iField.getDurationField();
if(compareReverse(first,months)>=0&&compareReverse(first,days)<=0){
saveField(DateTimeFieldType.year(),iDefaultYear);
return computeMillis(resetFields,text);
}
}
long millis=iMillis;
try{
for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}
}catch(IllegalFieldValueException e){
if(text!=null){
e.prependMessage("Cannot parse \""+text+'"');
}
throw e;
}
if(iZone==null){
millis-=iOffset;
}
else{
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}
return millis;
}

DELETE:
Original line: 3SavedField[] savedFields=iSavedFields;

DELETE:
Original line: 5if(iSavedFieldsShared){
iSavedFields=savedFields=(SavedField[])iSavedFields.clone();
iSavedFieldsShared=false;
}

DELETE:
Original line: 11DurationField months=DurationFieldType.months().getField(iChrono);

DELETE:
Original line: 12DurationField days=DurationFieldType.days().getField(iChrono);

DELETE:
Original line: 14if(compareReverse(first,months)>=0&&compareReverse(first,days)<=0){
saveField(DateTimeFieldType.year(),iDefaultYear);
return computeMillis(resetFields,text);
}

DELETE:
Original line: 19long millis=iMillis;

DELETE:
Original line: 25{
if(text!=null){
e.prependMessage("Cannot parse \""+text+'"');
}
throw e;
}

Following are 4th generated patches:
Validating 3 patches...
Current actions:
DELETE:
Original line: 2{
SavedField[] savedFields=iSavedFields;
int count=iSavedFieldsCount;
if(iSavedFieldsShared){
iSavedFields=savedFields=(SavedField[])iSavedFields.clone();
iSavedFieldsShared=false;
}
sort(savedFields,count);
if(count>0){
DurationField months=DurationFieldType.months().getField(iChrono);
DurationField days=DurationFieldType.days().getField(iChrono);
DurationField first=savedFields[0].iField.getDurationField();
if(compareReverse(first,months)>=0&&compareReverse(first,days)<=0){
saveField(DateTimeFieldType.year(),iDefaultYear);
return computeMillis(resetFields,text);
}
}
long millis=iMillis;
try{
for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}
}catch(IllegalFieldValueException e){
if(text!=null){
e.prependMessage("Cannot parse \""+text+'"');
}
throw e;
}
if(iZone==null){
millis-=iOffset;
}
else{
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}
return millis;
}

INSERT:
2:public long computeMillis(boolean resetFields,String text){
long millis=iMillis;
try{
DurationField months=DurationFieldType.months().getField(iChrono);
DurationField days=DurationFieldType.days().getField(iChrono);
DurationField first=getFieldType(0).getDurationField();
if(compareReverse(first,months)>=0&&compareReverse(first,days)<=0){
saveField(DateTimeFieldType.year(),2000);
return computeMillis(resetFields,text);
}
for(int i=0;i<iSavedFieldsCount;i++){
millis=iSavedFields[i].set(millis,resetFields);
}
}catch(IllegalFieldValueException e){
if(text!=null){
e.prependMessage("Cannot parse \""+text+'"');
}
throw e;
}
if(iZone==null){
millis-=iOffset;
}
else{
int offset=iZone.getOffsetFromLocal(millis);
millis-=offset;
if(offset!=iZone.getOffset(millis)){
String message="Illegal instant due to time zone offset transition ("+iZone+')';
if(text!=null){
message="Cannot parse \""+text+"\": "+message;
}
throw new IllegalArgumentException(message);
}
}
return millis;
}
TO:
1

DELETE:
Original line: 3SavedField[] savedFields=iSavedFields;

INSERT:
4:{
DurationField months=DurationFieldType.months().getField(iChrono);
DurationField days=DurationFieldType.days().getField(iChrono);
DurationField first=getFieldType(0).getDurationField();
if(compareReverse(first,months)>=0&&compareReverse(first,days)<=0){
saveField(DateTimeFieldType.year(),2000);
return computeMillis(resetFields,text);
}
for(int i=0;i<iSavedFieldsCount;i++){
millis=iSavedFields[i].set(millis,resetFields);
}
}
TO:
2

DELETE:
Original line: 5if(iSavedFieldsShared){
iSavedFields=savedFields=(SavedField[])iSavedFields.clone();
iSavedFieldsShared=false;
}

INSERT:
9:saveField(DateTimeFieldType.year(),2000);
TO:
14

DELETE:
Original line: 10if(count>0){
DurationField months=DurationFieldType.months().getField(iChrono);
DurationField days=DurationFieldType.days().getField(iChrono);
DurationField first=savedFields[0].iField.getDurationField();
if(compareReverse(first,months)>=0&&compareReverse(first,days)<=0){
saveField(DateTimeFieldType.year(),iDefaultYear);
return computeMillis(resetFields,text);
}
}

UPDATE
FROM:
21:for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}
TO:
12:for(int i=0;i<iSavedFieldsCount;i++){
millis=iSavedFields[i].set(millis,resetFields);
}

UPDATE
FROM:
22:millis=savedFields[i].set(millis,resetFields);
TO:
13:millis=iSavedFields[i].set(millis,resetFields);

DELETE:
Original line: 19long millis=iMillis;

DELETE:
Original line: 20{
for(int i=0;i<count;i++){
millis=savedFields[i].set(millis,resetFields);
}
}

DELETE:
Original line: 25{
if(text!=null){
e.prependMessage("Cannot parse \""+text+'"');
}
throw e;
}

Tested:7871 patches
Compile failed:6929 patches
Compilation rate:0.11967983737771566
NNNNNNNNNPNPPPPPNPPPPNNNNNNNNNNNNPNPNNNPNNPNPNNNNPNNPPNPNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNPNPPPPPPPPNPNNPPPNPPPNPNNPPPPPPNNPN
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/31.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/31.java
Current actions:
UPDATE
FROM:
35:int offset=iZone.getOffsetFromLocal(millis);
TO:
35:int offset=iZone.getOffset(millis);

Following are 0th generated patches:
Validating 3 patches...
Current actions:
DELETE:
Original line: 36millis-=offset;

Following are 1th generated patches:
Validating 1 patches...
Current actions:
UPDATE
FROM:
35:int offset=iZone.getOffsetFromLocal(millis);
TO:
35:int offset=iZone.getOffset(millis);

DELETE:
Original line: 36millis-=offset;

Following are 2th generated patches:
Validating 200 patches...
Current actions:
UPDATE
FROM:
35:int offset=iZone.getOffsetFromLocal(millis);
TO:
35:int offset=iZone.getOffset(millis);

Following are 3th generated patches:
Validating 200 patches...
Tested:8274 patches
Compile failed:7310 patches
Compilation rate:0.1165095479816292
PPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNPNNNNPNNNNNNNNNNNNNNNPNNNNNNNNNNNNPNNNPNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNNNNNPNNNNNNNNNNNNPNNNNNNNNNNNPNNNNPNNNNNNNNNNNNP
Current file:/data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/32.java
Patch Number: /data/PLM4APR/codex_out/200_patches_starcoder_all/time_24/32.java
Current actions:
UPDATE
FROM:
35:int offset=iZone.getOffsetFromLocal(millis);
TO:
35:long offset=iZone.getOffset(iMillis);

Following are 0th generated patches:
Validating 1 patches...
Current actions:
UPDATE
FROM:
35:int offset=iZone.getOffsetFromLocal(millis);
TO:
35:long offset=iZone.getOffset(iMillis);

Following are 1th generated patches:
Validating 200 patches...
Tested:8475 patches
Compile failed:7492 patches
Compilation rate:0.1159882005899705
PNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNPNPPNNNNNNNNNNNNNNPNNNNNNNNNNNNNPNNPNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPNPNNNNNPPNNNNNNNNNNNNNPNNNNNNNNNNNNNNNNNNPPNNNNNNNP
Finish : time-24 > patch : 0 | Start : Fri Apr 12 20:31:42 HKT 2024 | End : 2024.04.12 AD at 20:52:15 HKT
