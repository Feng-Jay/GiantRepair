--- 
+++ 
@@ -4,7 +4,12 @@
   while (true) {
     if (toResolve instanceof TypeVariable) {
       TypeVariable<?> typeVariable = (TypeVariable<?>) toResolve;
-        // cannot reduce due to infinite recursion
+      if (visitedTypeVariables.contains(typeVariable)) {
+        return toResolve;
+      } else {
+        visitedTypeVariables = new ArrayList<TypeVariable>(visitedTypeVariables);
+        visitedTypeVariables.add(typeVariable);
+      }
       toResolve = resolveTypeVariable(context, contextRawType, typeVariable);
       if (toResolve == typeVariable) {
         return toResolve;
@@ -15,7 +20,7 @@
       Type componentType = original.getComponentType();
       Type newComponentType = resolve(context, contextRawType, componentType, visitedTypeVariables);
       return componentType == newComponentType
-          ? original
+         ? original
           : arrayOf(newComponentType);
 
     } else if (toResolve instanceof GenericArrayType) {
@@ -23,19 +28,19 @@
       Type componentType = original.getGenericComponentType();
       Type newComponentType = resolve(context, contextRawType, componentType, visitedTypeVariables);
       return componentType == newComponentType
-          ? original
+         ? original
           : arrayOf(newComponentType);
 
     } else if (toResolve instanceof ParameterizedType) {
       ParameterizedType original = (ParameterizedType) toResolve;
       Type ownerType = original.getOwnerType();
       Type newOwnerType = resolve(context, contextRawType, ownerType, visitedTypeVariables);
-      boolean changed = newOwnerType != ownerType;
+      boolean changed = newOwnerType!= ownerType;
 
       Type[] args = original.getActualTypeArguments();
       for (int t = 0, length = args.length; t < length; t++) {
         Type resolvedTypeArgument = resolve(context, contextRawType, args[t], visitedTypeVariables);
-        if (resolvedTypeArgument != args[t]) {
+        if (resolvedTypeArgument!= args[t]) {
           if (!changed) {
             args = args.clone();
             changed = true;
@@ -45,7 +50,7 @@
       }
 
       return changed
-          ? newParameterizedTypeWithOwner(newOwnerType, original.getRawType(), args)
+         ? newParameterizedTypeWithOwner(newOwnerType, original.getRawType(), args)
           : original;
 
     } else if (toResolve instanceof WildcardType) {
@@ -55,12 +60,12 @@
 
       if (originalLowerBound.length == 1) {
         Type lowerBound = resolve(context, contextRawType, originalLowerBound[0], visitedTypeVariables);
-        if (lowerBound != originalLowerBound[0]) {
+        if (lowerBound!= originalLowerBound[0]) {
           return supertypeOf(lowerBound);
         }
       } else if (originalUpperBound.length == 1) {
         Type upperBound = resolve(context, contextRawType, originalUpperBound[0], visitedTypeVariables);
-        if (upperBound != originalUpperBound[0]) {
+        if (upperBound!= originalUpperBound[0]) {
           return subtypeOf(upperBound);
         }
       }
